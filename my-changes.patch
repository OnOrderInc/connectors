diff --git a/.backportrc.json b/.backportrc.json
index b89eac99..0688375a 100644
--- a/.backportrc.json
+++ b/.backportrc.json
@@ -1,7 +1,6 @@
 {
   "targetBranchChoices": [
     { "name": "main", "checked": true },
-    "8.15",
     "8.14",
     "8.13",
     "8.12",
@@ -12,7 +11,7 @@
   "fork": false,
   "targetPRLabels": ["backport"],
   "branchLabelMapping": {
-    "^v8.16.0(.0)?$": "main",
+    "^v8.15.0(.0)?$": "main",
     "^v(\\d+).(\\d+)(.\\d+)+$": "$1.$2"
   },
   "upstream": "elastic/connectors"
diff --git a/.buildkite/nightly_docker.yml b/.buildkite/nightly_docker.yml
new file mode 100644
index 00000000..a29b060d
--- /dev/null
+++ b/.buildkite/nightly_docker.yml
@@ -0,0 +1,18 @@
+agents:
+  provider: "gcp"
+  machineType: "n1-standard-8"
+  useVault: true
+  image: family/enterprise-search-ubuntu-2204-connectors-py
+
+steps:
+  # ----
+  # Docker images
+  # ----
+  - group: "üèóÔ∏è Docker images"
+    steps:
+      - label: "Building and pushing Docker image"
+        env:
+          DOCKER_IMAGE_NAME: "docker.elastic.co/enterprise-search/elastic-connectors"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        command:
+          - ".buildkite/publish_docker.sh"
diff --git a/.buildkite/nightly_steps.yml b/.buildkite/nightly_steps.yml
index c01824d2..9a0ed554 100644
--- a/.buildkite/nightly_steps.yml
+++ b/.buildkite/nightly_steps.yml
@@ -2,290 +2,133 @@ env:
   DOCKERFILE_FTEST_PATH: "Dockerfile.ftest.wolfi"
 
 steps:
-  - label: "üî® [Python {{ matrix }}] MySQL"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "mysql"
-      DATA_SIZE: "small"
+  - label: "üî® MySQL"
+    command:
+      - ".buildkite/run_nigthly.sh mysql"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Network Drive"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "network_drive"
-      DATA_SIZE: "small"
+  - label: "üî® Network Drive"
+    command:
+      - ".buildkite/run_nigthly.sh network_drive"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Amazon S3"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "s3"
-      DATA_SIZE: "small"
+  - label: "üî® Amazon S3"
+    command:
+      - ".buildkite/run_nigthly.sh s3"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Google Cloud Storage"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "google_cloud_storage"
-      DATA_SIZE: "small"
+  - label: "üî® Google Cloud Storage"
+    command:
+      - ".buildkite/run_nigthly.sh google_cloud_storage"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Azure Blob Storage"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "azure_blob_storage"
-      DATA_SIZE: "small"
+  - label: "üî® Azure Blob Storage"
+    command:
+      - ".buildkite/run_nigthly.sh azure_blob_storage"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Postgresql"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "postgresql"
-      DATA_SIZE: "small"
+  - label: "üî® Postgresql"
+    command:
+      - ".buildkite/run_nigthly.sh postgresql"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] System Directory"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "dir"
-      DATA_SIZE: "small"
+  - label: "üî® System Directory"
+    command:
+      - ".buildkite/run_nigthly.sh dir"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Oracle Database"
-    command: ".buildkite/run_functional_test.sh"
+  - label: "üî® Oracle Database"
+    command:
+      - ".buildkite/run_nigthly.sh oracle"
     env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "oracle"
-      DATA_SIZE: "small"
       SKIP_AARCH64: "true"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Sharepoint Server"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "sharepoint_server"
-      DATA_SIZE: "small"
+  - label: "üî® Sharepoint Server"
+    command:
+      - ".buildkite/run_nigthly.sh sharepoint_server"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Sharepoint Online"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "sharepoint_online"
-      DATA_SIZE: "small"
+  - label: "üî® Sharepoint Online"
+    command:
+      - ".buildkite/run_nigthly.sh sharepoint_online"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Microsoft SQL"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "mssql"
-      DATA_SIZE: "small"
+  - label: "üî® Microsoft SQL"
+    command:
+      - ".buildkite/run_nigthly.sh mssql"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Jira"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "jira"
-      DATA_SIZE: "small"
+  - label: "üî® Jira"
+    command:
+      - ".buildkite/run_nigthly.sh jira"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Confluence"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "confluence"
-      DATA_SIZE: "small"
+  - label: "üî® Confluence"
+    command:
+      - ".buildkite/run_nigthly.sh confluence"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] ServiceNow"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "servicenow"
-      DATA_SIZE: "small"
+  - label: "üî® ServiceNow"
+    command:
+      - ".buildkite/run_nigthly.sh servicenow"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] MongoDB"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "mongodb"
-      DATA_SIZE: "small"
+  - label: "üî® MongoDB"
+    command:
+      - ".buildkite/run_nigthly.sh mongodb"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-#   - label: "üî® [Python {{ matrix }}] MongoDB Serverless"
-#     command: ".buildkite/run_functional_test.sh"
-#     env:
-#       PYTHON_VERSION: "{{ matrix }}"
-#       CONNECTOR: "mongodb_serverless"
-#       DATA_SIZE: "small"
-#     matrix:
-#       - "3.10"
-#       - "3.11"
+#   - label: "üî® MongoDB Serverless"
+#     command:
+#       - ".buildkite/run_nigthly.sh mongodb_serverless"
 #     artifact_paths:
 #       - "perf8-report-*/**/*"
-  - label: "üî® [Python {{ matrix }}] GitHub"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "github"
-      DATA_SIZE: "small"
+  - label: "üî® GitHub"
+    command:
+      - ".buildkite/run_nigthly.sh github"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Google Drive"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "google_drive"
-      DATA_SIZE: "small"
+  - label: "üî® Google Drive"
+    command:
+      - ".buildkite/run_nigthly.sh google_drive"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Dropbox"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "dropbox"
-      DATA_SIZE: "small"
+  - label: "üî® Dropbox"
+    command:
+      - ".buildkite/run_nigthly.sh dropbox"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] OneDrive"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "onedrive"
-      DATA_SIZE: "small"
+  - label: "üî® OneDrive"
+    command:
+      - ".buildkite/run_nigthly.sh onedrive"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Salesforce"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "salesforce"
-      DATA_SIZE: "small"
+  - label: "üî® Salesforce"
+    command:
+      - ".buildkite/run_nigthly.sh salesforce"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Zoom"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "zoom"
-      DATA_SIZE: "small"
+  - label: "üî® Zoom"
+    command:
+      - ".buildkite/run_nigthly.sh zoom"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Box"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "box"
-      DATA_SIZE: "small"
-    artifact_paths:
-      - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Notion"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "notion"
-      DATA_SIZE: "small"
+  - label: "üî® Box"
+    command:
+      - ".buildkite/run_nigthly.sh box"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] Redis"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "redis"
-      DATA_SIZE: "small"
+  - label: "üî® Notion"
+    command:
+      - ".buildkite/run_nigthly.sh notion"
+  - label: "üî® Redis"
+    command:
+      - ".buildkite/run_nigthly.sh redis"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
-  - label: "üî® [Python {{ matrix }}] GraphQL"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
-      CONNECTOR: "graphql"
-      DATA_SIZE: "small"
+  - label: "üî® GraphQL"
+    command:
+      - ".buildkite/run_nigthly.sh graphql"
     artifact_paths:
       - "perf8-report-*/**/*"
-    matrix:
-      - "3.10"
-      - "3.11"
diff --git a/.buildkite/pipeline.yml b/.buildkite/pipeline.yml
index 0fe193cb..e2d30d79 100644
--- a/.buildkite/pipeline.yml
+++ b/.buildkite/pipeline.yml
@@ -1,53 +1,30 @@
-definitions:
-  steps:
-    - step: &test-agents
-        agents:
-          provider: "gcp"
-          machineType: "n1-standard-2"
-          useVault: true
-          image: family/enterprise-search-ubuntu-2204-connectors-py
+agents:
+  provider: "gcp"
+  machineType: "n1-standard-2"
+  useVault: true
+  image: family/enterprise-search-ubuntu-2204-connectors-py
 
 env:
   DOCKERFILE_FTEST_PATH: "Dockerfile.ftest.wolfi"
 
 steps:
   - label: ":face_with_peeking_eye: Lint"
-    <<: *test-agents
-    key: "lint"
-    command: ".buildkite/run_linter.sh"
-    env:
-      PYTHON_VERSION: "3.11" # We don't really care about linter on multiple versions for now
+    command: "make lint"
     timeout_in_minutes: 5
 
-  - label: ":pytest: Test with Python {{ matrix }}"
-    <<: *test-agents
-    key: "unit_tests"
-    command: ".buildkite/run_tests.sh"
-    env:
-      PYTHON_VERSION: "{{ matrix }}"
+  - label: ":pytest: Test"
+    command: "make test"
     timeout_in_minutes: 5
-    matrix:
-      - "3.10"
-      - "3.11"
 
   - label: ":shipit: Smoke test"
-    key: "smoke_test"
-    command: ".buildkite/run_functional_test.sh"
-    env:
-      PYTHON_VERSION: "3.11" # TODO: can actually do a matrix too
-      CONNECTOR: "dir"
-      DATA_SIZE: "small"
+    command: "make ftest NAME=dir DATA_SIZE=small"
     timeout_in_minutes: 45
     agents:
       machineType: "n1-standard-8"
-      provider: "gcp"
-      useVault: true
-      image: family/enterprise-search-ubuntu-2204-connectors-py
 
   - label: ":sweating: Checking for changes in connectors"
-    key: "relevant_ftests"
     plugins:
-      monorepo-diff#v1.0.1:
+      chronotc/monorepo-diff#v2.4.0:
         diff: ".buildkite/diff ${BUILDKITE_COMMIT}"
         wait: false
         watch:
@@ -59,13 +36,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® MySQL"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=mysql
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh mysql small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -77,13 +49,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Network Drive"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=network_drive
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh network_drive small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -95,13 +62,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Amazon S3"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=s3
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh s3 small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -113,13 +75,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Google Cloud Storage"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=google_cloud_storage
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh google_cloud_storage small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -131,13 +88,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Azure Blob Storage"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=azure_blob_storage
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh azure_blob_storage small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -149,13 +101,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Postgresql"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=postgresql
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh postgresql small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -167,13 +114,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® System Directory"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=dir
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh dir small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -185,13 +127,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Oracle Database"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=oracle
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh oracle small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -203,13 +140,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Sharepoint Server"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=sharepoint_server
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh sharepoint_server small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -221,13 +153,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Sharepoint Online"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=sharepoint_online
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh sharepoint_online small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -239,13 +166,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Microsoft SQL"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=mssql
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh mssql small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -258,13 +180,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Jira"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=jira
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh jira small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -277,13 +194,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Confluence"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=confluence
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh confluence small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -295,13 +207,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® ServiceNow"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=servicenow
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh servicenow small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -313,13 +220,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® MongoDB"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=mongodb
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh mongodb small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -331,13 +233,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® GitHub"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=github
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh github small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -349,13 +246,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Google Drive"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=google_drive
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh google_drive small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -367,13 +259,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Dropbox"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=dropbox
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh dropbox small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -385,13 +272,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® OneDrive"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=onedrive
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh onedrive small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -403,13 +285,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Salesforce"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=salesforce
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh salesforce small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -421,13 +298,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Zoom"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=zoom
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh zoom small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -439,13 +311,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Box"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=box
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh box small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -457,13 +324,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Microsoft Teams"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=microsoft_teams
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh microsoft_teams small"
               artifact_paths:
                 - "perf8-report-*/**/*"
 
@@ -475,15 +337,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Notion"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=notion
               command:
-                - ".buildkite/run_functional_test.sh"
-              artifact_paths:
-                - "perf8-report-*/**/*"
+                - ".buildkite/run_nigthly.sh notion small"
           
           - path:
             - "connectors/sources/redis.py"
@@ -493,13 +348,8 @@ steps:
             - "requirements/**"
             config:
               label: "üî® Redis"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=redis
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh redis small"
               artifact_paths:
                 - "perf8-report-*/**/*"
             
@@ -511,95 +361,7 @@ steps:
             - "requirements/**"
             config:
               label: "üî® GraphQL"
-              <<: *test-agents
-              env:
-                - PYTHON_VERSION=3.11
-                - DATA_SIZE=small
-                - CONNECTOR=graphql
               command:
-                - ".buildkite/run_functional_test.sh"
+                - ".buildkite/run_nigthly.sh graphql small"
               artifact_paths:
                 - "perf8-report-*/**/*"
-
-  # ----
-  # DRA publishing
-  # ----
-  - group: ":truck: Packaging and DRA"
-    key: "mbp_dra_group"
-    if: "(build.branch == \"main\" || build.pull_request.labels includes \"ci:packaging\")" # Add new maintenance branches here
-    depends_on:
-      - "lint"
-      - "unit_tests"
-      - "smoke_test"
-      - "relevant_ftests"
-    steps:
-      # ----
-      # Docker builds for amd64
-      # ----
-      - label: "Building amd64 Docker image"
-        agents:
-          provider: aws
-          instanceType: m6i.xlarge
-          imagePrefix: ci-amazonlinux-2
-        env:
-          ARCHITECTURE: "amd64"
-          DOCKERFILE_PATH: "Dockerfile.wolfi"
-        command: ".buildkite/publish/build-docker.sh"
-        key: "build_docker_image_amd64"
-        artifact_paths: ".artifacts/*.tar.gz"
-      - label: "Testing amd64 Docker image"
-        agents:
-          provider: aws
-          instanceType: m6i.xlarge
-          imagePrefix: ci-amazonlinux-2
-        env:
-          ARCHITECTURE: "amd64"
-          DOCKERFILE_PATH: "Dockerfile.wolfi"
-        depends_on: "build_docker_image_amd64"
-        key: "test_docker_image_amd64"
-        commands:
-          - "mkdir -p .artifacts"
-          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_amd64
-          - ".buildkite/publish/test-docker.sh"
-
-      # ----
-      # Docker builds for arm64
-      # ----
-      - label: "Building arm64 Docker image"
-        agents:
-          provider: aws
-          instanceType: m6g.xlarge
-          imagePrefix: ci-amazonlinux-2-aarch64
-          diskSizeGb: 40
-          diskName: '/dev/xvda'
-        env:
-          ARCHITECTURE: "arm64"
-          DOCKERFILE_PATH: "Dockerfile.wolfi"
-        command: ".buildkite/publish/build-docker.sh"
-        key: "build_docker_image_arm64"
-        artifact_paths: ".artifacts/*.tar.gz"
-      - label: "Testing arm64 Docker image"
-        agents:
-          provider: aws
-          instanceType: m6g.xlarge
-          imagePrefix: ci-amazonlinux-2-aarch64
-          diskSizeGb: 40
-          diskName: '/dev/xvda'
-        env:
-          ARCHITECTURE: "arm64"
-          DOCKERFILE_PATH: "Dockerfile.wolfi"
-        depends_on: "build_docker_image_arm64"
-        key: "test_docker_image_arm64"
-        commands:
-          - "mkdir -p .artifacts"
-          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_arm64
-          - ".buildkite/publish/test-docker.sh"
-
-      - label: ":truck: Publish DRA Items"
-        <<: *test-agents
-        key: "publish-dra-artifacts"
-        timeout_in_minutes: 45
-        depends_on:
-          - test_docker_image_amd64
-          - test_docker_image_arm64
-        command: ".buildkite/publish/dra/init_dra_publishing.sh"
diff --git a/.buildkite/publish/build-multiarch-docker.sh b/.buildkite/publish/build-multiarch-docker.sh
new file mode 100755
index 00000000..0e798cc1
--- /dev/null
+++ b/.buildkite/publish/build-multiarch-docker.sh
@@ -0,0 +1,46 @@
+#!/bin/bash
+
+########
+# Builds the multiarch docker image and pushes it to the docker registry
+########
+
+set -exu
+set -o pipefail
+
+# Load our common environment variables for publishing
+export CURDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
+source $CURDIR/publish-common.sh
+
+# Set our tag name as well as the tag names of the indiividual platform images
+TAG_NAME="${BASE_TAG_NAME}:${VERSION}"
+AMD64_TAG="${BASE_TAG_NAME}:${VERSION}-amd64"
+ARM64_TAG="${BASE_TAG_NAME}:${VERSION}-arm64"
+
+# Pull the images from the registry
+buildah pull $AMD64_TAG
+buildah pull $ARM64_TAG
+
+# ensure +x is set to avoid writing any sensitive information to the console
+set +x
+
+DOCKER_PASSWORD=$(vault read -address "${VAULT_ADDR}" -field secret_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+
+# Log into Docker
+echo "Logging into docker..."
+DOCKER_USER=$(vault read -address "${VAULT_ADDR}" -field user_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+vault read -address "${VAULT_ADDR}" -field secret_20230609 secret/ci/elastic-connectors/${VAULT_USER} | \
+  buildah login --username="${DOCKER_USER}" --password-stdin docker.elastic.co
+
+# Create the manifest for the multiarch image
+echo "Creating manifest..."
+buildah manifest create $TAG_NAME \
+  $AMD64_TAG \
+  $ARM64_TAG
+
+# ... and push it
+echo "Pushing manifest..."
+buildah manifest push $TAG_NAME docker://$TAG_NAME
+
+# Write out the final manifest for debugging purposes
+echo "Built and pushed multiarch image... dumping final manifest..."
+buildah manifest inspect $TAG_NAME
diff --git a/.buildkite/publish/dra/init_dra_publishing.sh b/.buildkite/publish/dra/init_dra_publishing.sh
deleted file mode 100755
index 0315f6ec..00000000
--- a/.buildkite/publish/dra/init_dra_publishing.sh
+++ /dev/null
@@ -1,167 +0,0 @@
-#!/bin/bash
-
-########
-# publishes a DRA artifact
-########
-
-set -exu
-set -o pipefail
-
-# Load our common environment variables for publishing
-export DRA_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
-CURDIR="$(dirname "$DRA_DIR")"
-source $CURDIR/publish-common.sh
-export RELEASE_DIR="${PROJECT_ROOT}"
-
-# Create and stage the artifact
-cd $PROJECT_ROOT
-make clean sdist
-export DRA_ARTIFACTS_DIR=$RELEASE_DIR/dist/dra-artifacts
-mkdir -p $DRA_ARTIFACTS_DIR
-
-cd -
-
-# Download previous step artifacts
-buildkite-agent artifact download '.artifacts/*.tar.gz*' $RELEASE_DIR/dist/ --step build_docker_image_amd64
-buildkite-agent artifact download '.artifacts/*.tar.gz*' $RELEASE_DIR/dist/ --step build_docker_image_arm64
-cp $RELEASE_DIR/dist/.artifacts/* $DRA_ARTIFACTS_DIR
-
-# Rename to match DRA expectations (<name>-<version>-<classifier>-<os>-<arch>)
-cd $DRA_ARTIFACTS_DIR
-mv $DOCKER_ARTIFACT_KEY-$VERSION-amd64.tar.gz $PROJECT_NAME-$VERSION-docker-image-linux-amd64.tar.gz
-mv $DOCKER_ARTIFACT_KEY-$VERSION-arm64.tar.gz $PROJECT_NAME-$VERSION-docker-image-linux-arm64.tar.gz
-cd -
-
-echo "The artifacts are: $(ls $DRA_ARTIFACTS_DIR)"
-
-
-# ensure JQ is installed...
-if ! which jq > /dev/null; then
-  echo "'jq' was not installed. Installing it now"
-  wget -O jq https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 && chmod +x jq
-else
-  echo "jq already installed"
-fi
-
-# Need to export the revision, name and version and others
-# for the dependency report and publishing scripts
-export REVISION="${BUILDKITE_COMMIT}"
-export BRANCH_NAME="${BUILDKITE_BRANCH}"
-export PRODUCT_NAME="connectors"
-export GIT_REPO="connectors"
-
-# set PUBLISH_SNAPSHOT and PUBLISH_STAGING based on the branch
-if [[ "${BUILDKITE_BRANCH:-}" =~ (main|[0-9]\.[0-9x]*$) ]]; then
-  export PUBLISH_SNAPSHOT="true"
-fi
-if [[ "${BUILDKITE_BRANCH:-}" =~ ([0-9]\.[0-9x]*$) ]]; then
-  export PUBLISH_STAGING="true"
-fi
-
-# Sanity check in the logs to list the downloaded artifacts
-chmod -R a+rw "${RELEASE_DIR}/dist"
-echo "---- listing artifact directory: ${RELEASE_DIR}/dist:"
-ls -al $RELEASE_DIR/dist
-
-# ensure we have a directory and permissions for our dependency report to be created
-# this path is set in the actual config file in
-# https://github.com/elastic/infra/tree/master/cd/release/release-manager/project-configs
-export DEPENDENCIES_REPORTS_DIR="${RELEASE_DIR}/dist/cd/output" # TODO, change this path?
-mkdir -p "${DEPENDENCIES_REPORTS_DIR}"
-chmod -R a+rw "${DEPENDENCIES_REPORTS_DIR}"
-
-# function to set our vault creds for DRA publishing
-function setDraVaultCredentials() {
-  set +x
-  echo "-- setting DRA vault credentials --"
-
-  # need to keep original vault addr to reset it
-  # after we're done or else it won't be set
-  # if we call this fxn again
-  export ORIGINAL_VAULT_ADDR="${VAULT_ADDR:-}"
-
-  DRA_CREDS=$(vault kv get -field=data -format=json kv/ci-shared/release/dra-role)
-  if [[ "${DRA_CREDS:-}" == "" ]]; then
-    echo "Could not get DRA credentials from vault"
-    exit 2
-  fi
-
-  export VAULT_ADDR="$(echo $DRA_CREDS | jq -r '.vault_addr')"
-  if [[ "${VAULT_ADDR:-}" == "" ]]; then
-    echo "Could not get VAULT_ADDR from DRA credentials"
-    exit 2
-  fi
-
-  export VAULT_ROLE_ID="$(echo $DRA_CREDS | jq -r '.role_id')"
-  if [[ "${VAULT_ROLE_ID:-}" == "" ]]; then
-    echo "Could not get VAULT_ADDR from DRA credentials"
-    exit 2
-  fi
-
-  export VAULT_SECRET_ID="$(echo $DRA_CREDS | jq -r '.secret_id')"
-  if [[ "${VAULT_SECRET_ID:-}" == "" ]]; then
-    echo "Could not get VAULT_ADDR from DRA credentials"
-    exit 2
-  fi
-
-  unset DRA_CREDS
-  set -x
-}
-
-# function to unset the vault credentials.
-function unsetDraVaultCredentials() {
-  set +x
-  unset VAULT_ROLE_ID
-  unset VAULT_SECRET_ID
-
-  # and reset our original vault address
-  export VAULT_ADDR="${ORIGINAL_VAULT_ADDR:-}"
-
-  set -x
-}
-
-# function to generate dependency report.
-function generateDependencyReport() {
-  make install deps-csv
-  cp $RELEASE_DIR/dist/dependencies.csv $1
-}
-
-# generate the dependency report and publish SNAPSHOT artifacts
-if [[ "${PUBLISH_SNAPSHOT:-}" == "true" ]]; then
-  # note that this name is set by infra and must be in the format specified
-  dependencyReportName="dependencies-${VERSION}-SNAPSHOT.csv";
-  echo "-------- Generating SNAPSHOT dependency report: ${dependencyReportName}"
-  generateDependencyReport $DEPENDENCIES_REPORTS_DIR/$dependencyReportName
-
-  echo "-------- Publishing SNAPSHOT DRA Artifacts"
-  cp $RELEASE_DIR/dist/elasticsearch_connectors-${VERSION}.zip $DRA_ARTIFACTS_DIR/connectors-${VERSION}-SNAPSHOT.zip
-  cp $DRA_ARTIFACTS_DIR/$PROJECT_NAME-$VERSION-docker-image-linux-amd64.tar.gz $DRA_ARTIFACTS_DIR/$PROJECT_NAME-$VERSION-SNAPSHOT-docker-image-linux-amd64.tar.gz
-  cp $DRA_ARTIFACTS_DIR/$PROJECT_NAME-$VERSION-docker-image-linux-arm64.tar.gz $DRA_ARTIFACTS_DIR/$PROJECT_NAME-$VERSION-SNAPSHOT-docker-image-linux-arm64.tar.gz
-  setDraVaultCredentials
-  export WORKFLOW="snapshot"
-
-  source "${PROJECT_ROOT}/.buildkite/publish/dra/publish-daily-release-artifact.sh"
-  unsetDraVaultCredentials
-  rm -rf "${DEPENDENCIES_REPORTS_DIR}/*"
-else
-  echo "Not publishing SNAPSHOTs in this build"
-fi
-
-# generate the dependency report and publish STAGING artifacts
-if [[ "${PUBLISH_STAGING:-}" == "true" ]]; then
-  dependencyReportName="dependencies-${VERSION}.csv";
-  echo "-------- Generating STAGING dependency report: ${dependencyReportName}"
-  generateDependencyReport $DEPENDENCIES_REPORTS_DIR/$dependencyReportName
-
-  echo "-------- Publishing STAGING DRA Artifacts"
-  cp $RELEASE_DIR/dist/elasticsearch_connectors-${VERSION}.zip $DRA_ARTIFACTS_DIR/connectors-${VERSION}.zip
-  setDraVaultCredentials
-  export WORKFLOW="staging"
-
-
-  source "${PROJECT_ROOT}/.buildkite/publish/dra/publish-daily-release-artifact.sh"
-  unsetDraVaultCredentials
-  rm -rf "${DEPENDENCIES_REPORTS_DIR}/*"
-else
-  echo "Not publishing to staging in this build"
-fi
diff --git a/.buildkite/publish/dra/publish-daily-release-artifact.sh b/.buildkite/publish/dra/publish-daily-release-artifact.sh
deleted file mode 100755
index 13f11f41..00000000
--- a/.buildkite/publish/dra/publish-daily-release-artifact.sh
+++ /dev/null
@@ -1,90 +0,0 @@
-#!/bin/bash
-
-set -exu
-set -o pipefail
-
-#---------------------------------------------------------------------------------------------------
-
-# Ensure all required VAULT variables are set.
-# and ensure we're not leaking credentials...
-# These are hidden in Jenkins, but not necessarily in Buildkite
-set +x
-if [[ "${VAULT_ADDR:-}" == "" ]]; then
-  echo "ERROR: VAULT_ADDR required!"
-  exit 2
-else
-  export "VAULT_ADDR=${VAULT_ADDR}"
-fi
-
-if [[ "${VAULT_ROLE_ID:-}" == "" ]]; then
-  echo "ERROR: VAULT_ROLE_ID required!"
-  exit 2
-else
-  export "VAULT_ROLE_ID=${VAULT_ROLE_ID}"
-fi
-
-if [[ "${VAULT_SECRET_ID:-}" == "" ]]; then
-  echo "ERROR: VAULT_SECRET_ID required!"
-  exit 2
-else
-  export "VAULT_SECRET_ID=${VAULT_SECRET_ID}"
-fi
-set -x
-
-# Release dir required. If this is not an absolute path the Docker command will error.
-if [[ "${RELEASE_DIR:-}" == "" ]]; then
-  echo "ERROR: RELEASE_DIR required!"
-  exit 2
-fi
-
-# Git Repo
-if [[ "${GIT_REPO:-}" == "" ]]; then
-  echo "ERROR: GIT_REPO required!"
-  exit 2
-fi
-
-# Revision Git commit hash
-if [[ "${REVISION:-}" == "" ]]; then
-  echo "ERROR: REVISION required!"
-  exit 2
-fi
-
-# Workflow. Must be either `staging` or `snapshot`
-if [[ "${WORKFLOW:-}" != "staging" && "${WORKFLOW:-}" != "snapshot" ]]; then
-  echo "ERROR: WORKFLOW required! Value must be staging or snapshot"
-  exit 2
-fi
-
-# Version. This is pulled from config/product_version.
-if [[ "${VERSION:-}" == "" ]]; then
-  echo "ERROR: VERSION required!"
-  exit 2
-fi
-
-# Branch Name. Required for the cli collect artifact publish
-if [[ "${BRANCH_NAME:-}" == "" ]]; then
-  echo "ERROR: BRANCH_NAME required!"
-  exit 2
-fi
-
-#---------------------------------------------------------------------------------------------------
-echo "Contents of 'src' for the release-manager command:"
-ls -lah ${RELEASE_DIR}/dist
-
-echo "Contents of 'dra-artifacts' subdir"
-ls -lah $DRA_ARTIFACTS_DIR
-
-docker run --rm \
-  --name release-manager \
-  -e VAULT_ADDR \
-  -e VAULT_ROLE_ID \
-  -e VAULT_SECRET_ID \
-  --mount type=bind,readonly=false,src="${RELEASE_DIR}/dist",target="/artifacts" \
-  docker.elastic.co/infra/release-manager:latest \
-  cli collect \
-      --project "${GIT_REPO}" \
-      --branch "${BRANCH_NAME}" \
-      --commit "${REVISION}" \
-      --workflow "${WORKFLOW}" \
-      --version "${VERSION}" \
-      --artifact-set main
diff --git a/.buildkite/publish/publish-common.sh b/.buildkite/publish/publish-common.sh
index 5b6baba6..13c6caac 100644
--- a/.buildkite/publish/publish-common.sh
+++ b/.buildkite/publish/publish-common.sh
@@ -23,5 +23,7 @@ fi
 
 export BASE_TAG_NAME=${DOCKER_IMAGE_NAME:-docker.elastic.co/enterprise-search/elastic-connectors}
 export DOCKERFILE_PATH=${DOCKERFILE_PATH:-Dockerfile}
-export PROJECT_NAME=${PROJECT_NAME:-elastic-connectors}
-export DOCKER_ARTIFACT_KEY=${DOCKER_ARTIFACT_KEY:-${PROJECT_NAME}-docker}
+export DOCKER_ARTIFACT_KEY=${DOCKER_ARTIFACT_KEY:-elastic-connectors-docker}
+
+export VAULT_ADDR=${VAULT_ADDR:-https://vault-ci-prod.elastic.dev}
+export VAULT_USER="docker-swiftypeadmin"
diff --git a/.buildkite/publish/push-docker.sh b/.buildkite/publish/push-docker.sh
new file mode 100755
index 00000000..9f33410b
--- /dev/null
+++ b/.buildkite/publish/push-docker.sh
@@ -0,0 +1,35 @@
+#!/bin/bash
+
+########
+# Pushes the docker image to the docker registry
+########
+
+set -exu
+set -o pipefail
+
+if [[ "${ARCHITECTURE:-}" == "" ]]; then
+  echo "!! ARCHITECTURE is not set. Exiting."
+  exit 2
+fi
+
+# Load our common environment variables for publishing
+export CURDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
+source $CURDIR/publish-common.sh
+
+# Load the image from the artifact created in build-docker.sh
+echo "Loading image from archive file..."
+docker load < "$PROJECT_ROOT/.artifacts/${DOCKER_ARTIFACT_KEY}-${VERSION}-${ARCHITECTURE}.tar.gz"
+
+# ensure +x is set to avoid writing any sensitive information to the console
+set +x
+
+# Log into Docker
+echo "Logging into docker..."
+DOCKER_USER=$(vault read -address "${VAULT_ADDR}" -field user_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+vault read -address "${VAULT_ADDR}" -field secret_20230609 secret/ci/elastic-connectors/${VAULT_USER} | \
+  docker login -u $DOCKER_USER --password-stdin docker.elastic.co
+
+# Set our tag name and push the image
+TAG_NAME="$BASE_TAG_NAME:${VERSION}-${ARCHITECTURE}"
+echo "Pushing image to docker with tag: $TAG_NAME"
+docker push $TAG_NAME
diff --git a/.buildkite/publish/test-docker.sh b/.buildkite/publish/test-docker.sh
index 4f798843..4ab17f90 100755
--- a/.buildkite/publish/test-docker.sh
+++ b/.buildkite/publish/test-docker.sh
@@ -69,13 +69,13 @@ TEST_CONFIG_TEXT='
 schemaVersion: "2.0.0"
 
 commandTests:
-  # ensure Python 3.11.* is installed
-  - name: "Python 3 Installation 3.11.*"
+  # ensure Python 3.10.* is installed
+  - name: "Python 3 Installation 3.10.*"
     command: "python3"
     args: ["--version"]
-    expectedOutput: ["Python\\s3\\.11\\.*"]
+    expectedOutput: ["Python\\s3\\.10\\.*"]
   - name: "Connectors Installation"
-    command: "/app/.venv/bin/elastic-ingest"
+    command: "/app/bin/elastic-ingest"
     args: ["--version"]
     expectedOutput: ["'"${ESCAPED_VERSION}"'*"]
 '
diff --git a/.buildkite/publish_docker.sh b/.buildkite/publish_docker.sh
new file mode 100755
index 00000000..b9b6c2a0
--- /dev/null
+++ b/.buildkite/publish_docker.sh
@@ -0,0 +1,34 @@
+#!/bin/bash
+
+# !!! WARNING DO NOT add -x to avoid leaking vault passwords
+set -euo pipefail
+
+sudo apt-get update
+sudo DEBIAN_FRONTEND=noninteractive apt-get install ca-certificates curl gnupg lsb-release -y
+
+BASEDIR=$(realpath $(dirname $0))
+ROOT=$(realpath $BASEDIR/../)
+
+cd $ROOT
+
+# docker snapshot publication
+echo "Building the image"
+make docker-build
+
+# !!! WARNING be cautious about the following lines, to avoid leaking the secrets in the CI logs
+
+set +x   # Do not remove so we don't leak passwords
+VAULT_ADDR=${VAULT_ADDR:-https://vault-ci-prod.elastic.dev}
+VAULT_USER="docker-swiftypeadmin"
+echo "Fetching Docker credentials for '$VAULT_USER' from Vault..."
+DOCKER_USER=$(vault read -address "${VAULT_ADDR}" -field user_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+DOCKER_PASSWORD=$(vault read -address "${VAULT_ADDR}" -field secret_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+echo "Done!"
+echo
+
+echo "Logging into Docker as '$DOCKER_USER'..."
+docker login -u "${DOCKER_USER}" -p ${DOCKER_PASSWORD} docker.elastic.co
+echo "Done!"
+echo
+echo "Pushing the image to docker.elastic.co"
+make docker-push
diff --git a/.buildkite/release-pipeline.yml b/.buildkite/release-pipeline.yml
new file mode 100644
index 00000000..0a2db0a9
--- /dev/null
+++ b/.buildkite/release-pipeline.yml
@@ -0,0 +1,116 @@
+## üè†/.buildkite/pipeline-release.yml
+# Manual triggered pipeline to build and publish Docker images
+
+steps:
+  # ----
+  # Docker builds for amd64
+  # ----
+  - group: ":package: amd64 Build and Test"
+    key: "build_and_test_amd64"
+    if: "build.branch =~ /^[0-9]+\\.[0-9x]+.*/"
+    steps:
+      - label: "Building amd64 Docker image"
+        agents:
+          provider: aws
+          instanceType: m6i.xlarge
+          imagePrefix: ci-amazonlinux-2
+        env:
+          ARCHITECTURE: "amd64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        command: ".buildkite/publish/build-docker.sh"
+        key: "build_docker_image_amd64"
+        artifact_paths: ".artifacts/*.tar.gz"
+      - label: "Testing amd64 Docker image"
+        agents:
+          provider: aws
+          instanceType: m6i.xlarge
+          imagePrefix: ci-amazonlinux-2
+        env:
+          ARCHITECTURE: "amd64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        depends_on: "build_docker_image_amd64"
+        commands:
+          - "mkdir -p .artifacts"
+          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_amd64
+          - ".buildkite/publish/test-docker.sh"
+  # ----
+  # Docker builds for arm64
+  # ----
+  - group: ":package: arm64 Build and Test"
+    key: "build_and_test_arm64"
+    if: "build.branch =~ /^[0-9]+\\.[0-9x]+.*/"
+    steps:
+      - label: "Building arm64 Docker image"
+        agents:
+          provider: aws
+          instanceType: m6g.xlarge
+          imagePrefix: ci-amazonlinux-2-aarch64
+          diskSizeGb: 40
+          diskName: '/dev/xvda'
+        env:
+          ARCHITECTURE: "arm64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        command: ".buildkite/publish/build-docker.sh"
+        key: "build_docker_image_arm64"
+        artifact_paths: ".artifacts/*.tar.gz"
+      - label: "Testing arm64 Docker image"
+        agents:
+          provider: aws
+          instanceType: m6g.xlarge
+          imagePrefix: ci-amazonlinux-2-aarch64
+          diskSizeGb: 40
+          diskName: '/dev/xvda'
+        env:
+          ARCHITECTURE: "arm64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        depends_on: "build_docker_image_arm64"
+        commands:
+          - "mkdir -p .artifacts"
+          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_arm64
+          - ".buildkite/publish/test-docker.sh"
+  # ----
+  # Multiarch Docker image build and push
+  # ----
+  - group: ":truck: Publish images"
+    if: "build.branch =~ /^[0-9]+\\.[0-9x]+.*/"
+    depends_on:
+      - "build_and_test_amd64"
+      - "build_and_test_arm64"
+    steps:
+      - label: "Push amd64 Docker image"
+        key: "push_amd64_docker_image"
+        env:
+          ARCHITECTURE: "amd64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        agents:
+          provider: aws
+          instanceType: m6i.xlarge
+          imagePrefix: ci-amazonlinux-2
+        commands:
+          - "mkdir -p .artifacts"
+          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_amd64
+          - ".buildkite/publish/push-docker.sh"
+      - label: "Push arm64 Docker image"
+        key: "push_arm64_docker_image"
+        env:
+          ARCHITECTURE: "arm64"
+          DOCKERFILE_PATH: "Dockerfile.wolfi"
+        agents:
+          provider: aws
+          instanceType: m6g.xlarge
+          imagePrefix: ci-amazonlinux-2-aarch64
+          diskSizeGb: 40
+          diskName: '/dev/xvda'
+        commands:
+          - "mkdir -p .artifacts"
+          - buildkite-agent artifact download '.artifacts/*.tar.gz*' .artifacts/ --step build_docker_image_arm64
+          - ".buildkite/publish/push-docker.sh"
+      - label: "Build and push multiarch Docker image"
+        agents:
+          image: "docker.elastic.co/ci-agent-images/drivah:0.25.0"
+          ephemeralStorage: "20G"
+          memory: "4G"
+        command: ".buildkite/publish/build-multiarch-docker.sh"
+        depends_on:
+          - "push_amd64_docker_image"
+          - "push_arm64_docker_image"
diff --git a/.buildkite/run_functional_test.sh b/.buildkite/run_functional_test.sh
deleted file mode 100755
index 868f05e6..00000000
--- a/.buildkite/run_functional_test.sh
+++ /dev/null
@@ -1,37 +0,0 @@
-#!/bin/bash
-
-# !!! WARNING DO NOT add -x to avoid leaking vault passwords
-set -euo pipefail
-
-MACHINE_TYPE=`uname -m`
-
-if [ "$MACHINE_TYPE" != "x86_64" ] && [ -v SKIP_AARCH64 ]; then
-  echo "Running on aarch64 and skipping"
-  exit
-fi
-
-source ~/.bash_profile
-
-pyenv global $PYTHON_VERSION
-echo "Python version:"
-pyenv global
-
-BASEDIR=$(realpath $(dirname $0))
-ROOT=$(realpath $BASEDIR/../)
-VENV_ROOT=$ROOT/.venv
-
-cd $ROOT
-
-make install
-
-export PIP=$VENV_ROOT/bin/pip
-
-$PIP install py-spy
-
-
-if [ -v BUILDKITE ]; then
-  # required by serverless
-  sudo sysctl -w vm.max_map_count=262144
-fi
-
-PERF8=yes NAME=$CONNECTOR DATA_SIZE=$DATA_SIZE make ftest
diff --git a/.buildkite/run_linter.sh b/.buildkite/run_linter.sh
deleted file mode 100755
index 0e2eda9d..00000000
--- a/.buildkite/run_linter.sh
+++ /dev/null
@@ -1,12 +0,0 @@
-#!/bin/bash
-
-# !!! WARNING DO NOT add -x to avoid leaking vault passwords
-set -euo pipefail
-
-source ~/.bash_profile
-
-pyenv global $PYTHON_VERSION
-echo "Python version:"
-pyenv global
-
-make lint
diff --git a/.buildkite/run_nigthly.sh b/.buildkite/run_nigthly.sh
new file mode 100755
index 00000000..530abfae
--- /dev/null
+++ b/.buildkite/run_nigthly.sh
@@ -0,0 +1,45 @@
+#!/bin/bash
+
+# !!! WARNING DO NOT add -x to avoid leaking vault passwords
+set -euo pipefail
+
+MACHINE_TYPE=`uname -m`
+
+if [ "$MACHINE_TYPE" != "x86_64" ] && [ -v SKIP_AARCH64 ]; then
+  echo "Running on aarch64 and skipping"
+  exit
+fi
+
+
+BASEDIR=$(realpath $(dirname $0))
+ROOT=$(realpath $BASEDIR/../)
+
+# TODO to be moved in the image at https://github.com/elastic/ci-agent-images/blob/main/vm-images/enterprise-search/scripts/connectors-python/install-deps.sh#L6
+sudo apt-get -y install liblz4-dev libunwind-dev
+
+cd $ROOT
+
+make install
+
+export PIP=$ROOT/bin/pip
+
+$PIP install py-spy
+DATA_SIZE="${2:-small}"
+
+# If we run on buildkite, we connect to docker so we can pull private images
+# !!! WARNING be cautious about the following lines to avoid leaking the secrets in the CI logs
+set +x  # Do not remove so we don't leak passwords
+if [ -v BUILDKITE ]; then
+  echo "Connecting to Vault"
+  VAULT_ADDR=${VAULT_ADDR:-https://vault-ci-prod.elastic.dev}
+  VAULT_USER="docker-swiftypeadmin"
+  echo "Fetching Docker credentials for '$VAULT_USER' from Vault..."
+  DOCKER_USER=$(vault read -address "${VAULT_ADDR}" -field user_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+  DOCKER_PASSWORD=$(vault read -address "${VAULT_ADDR}" -field secret_20230609 secret/ci/elastic-connectors/${VAULT_USER})
+  echo "Done!"
+
+  # required by serverless
+  sudo sysctl -w vm.max_map_count=262144
+fi
+
+PERF8=yes NAME=$1 DATA_SIZE=$DATA_SIZE make ftest
diff --git a/.buildkite/run_tests.sh b/.buildkite/run_tests.sh
deleted file mode 100755
index d444f2cb..00000000
--- a/.buildkite/run_tests.sh
+++ /dev/null
@@ -1,12 +0,0 @@
-#!/bin/bash
-
-# !!! WARNING DO NOT add -x to avoid leaking vault passwords
-set -euo pipefail
-
-source ~/.bash_profile
-
-pyenv global $PYTHON_VERSION
-echo "Python version:"
-pyenv global
-
-make test
diff --git a/.gitignore b/.gitignore
index a30d56d2..7ba55d91 100644
--- a/.gitignore
+++ b/.gitignore
@@ -1,7 +1,5 @@
 bin
 lib
-lib64
-dist
 include
 .coverage
 *.un~
@@ -18,6 +16,5 @@ config.yml
 *.iml
 .cli
 
-.venv
 **/venv
 scripts/stack/connectors-config
diff --git a/.ruff.toml b/.ruff.toml
index 0aca8be4..428c1bb7 100644
--- a/.ruff.toml
+++ b/.ruff.toml
@@ -1,9 +1,5 @@
-target-version = "py310"
-
-[lint]
-select = ["A", "ASYNC", "I", "E", "F", "B", "C4", "T10", "T20", "EM", "ISC", "S", "CPY001"]
-ignore = ["E501", "ISC001"]
-preview = true
+select = ["A", "ASYNC", "I", "E", "F", "B", "C4", "T10", "T20", "EM", "ISC", "S"]
+ignore = ["E501"]
 
 # Allow autofix for all enabled rules (when `--fix`) is provided.
 fixable = ["A", "B", "C", "C4", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT", "T10", "T20"]
@@ -17,16 +13,14 @@ exclude = [
     "include"
 ]
 dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
+target-version = "py310"
 
-[lint.per-file-ignores]
+[per-file-ignores]
 "connectors/*" = ["S608"]
 "scripts/verify.py" = [ "EM" ]
 "setup.py" = [ "EM" ]
-"tests/*" = ["B017", "S101", "S", "ASYNC110"]
+"tests/*" = ["B017", "S101", "S"]
 "tests/conftest.py" = [ "EM" ]
 
-[lint.isort]
+[isort]
 known-first-party=["connectors", "tests"]
-
-[lint.flake8-copyright]
-notice-rgx = "#\n# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n# or more contributor license agreements. Licensed under the Elastic License 2.0;\n# you may not use this file except in compliance with the Elastic License 2.0.\n#"
diff --git a/Dockerfile b/Dockerfile
index a5843301..ec12162f 100644
--- a/Dockerfile
+++ b/Dockerfile
@@ -1,6 +1,4 @@
-FROM python:3.11-slim-bookworm
-RUN apt update && apt upgrade && apt install make -y
+FROM python:3.10
 COPY . /app
 WORKDIR /app
 RUN make clean install
-ENTRYPOINT []
diff --git a/Dockerfile.ftest b/Dockerfile.ftest
index 7705147c..64a92643 100644
--- a/Dockerfile.ftest
+++ b/Dockerfile.ftest
@@ -1,7 +1,5 @@
-FROM python:3.11-slim-bookworm
-# RUN apt update && apt install make
-RUN apt update && apt upgrade && apt install make -y
-COPY . /app
-WORKDIR /app
+FROM python:3.10
+COPY . /connectors
+WORKDIR /connectors
 RUN make clean install
-RUN .venv/bin/pip install -r requirements/ftest.txt
+RUN bin/pip install -r requirements/ftest.txt
diff --git a/Dockerfile.ftest.wolfi b/Dockerfile.ftest.wolfi
index 0a206010..78047c6d 100644
--- a/Dockerfile.ftest.wolfi
+++ b/Dockerfile.ftest.wolfi
@@ -1,7 +1,7 @@
-FROM docker.elastic.co/wolfi/python:3.11-dev@sha256:6d21dd09efd41b21f4abeab6291bc93af86d1a438225eeac98bdea85f6617b22
+FROM docker.elastic.co/wolfi/python:3.10-dev@sha256:609e3fdb2c2a219941a6ea1e81f935899d05a787af634e4d47a3a3ec9a6d3379
 USER root
 COPY . /connectors
 WORKDIR /connectors
 RUN make clean install
-RUN .venv/bin/pip install -r requirements/ftest.txt
+RUN bin/pip install -r requirements/ftest.txt
 ENTRYPOINT []
diff --git a/Dockerfile.wolfi b/Dockerfile.wolfi
index eef700e8..45fcb7c7 100644
--- a/Dockerfile.wolfi
+++ b/Dockerfile.wolfi
@@ -1,4 +1,4 @@
-FROM docker.elastic.co/wolfi/python:3.11-dev@sha256:6d21dd09efd41b21f4abeab6291bc93af86d1a438225eeac98bdea85f6617b22
+FROM docker.elastic.co/wolfi/python:3.10-dev@sha256:609e3fdb2c2a219941a6ea1e81f935899d05a787af634e4d47a3a3ec9a6d3379
 USER root
 COPY . /app
 WORKDIR /app
diff --git a/Makefile b/Makefile
index 1e7216e6..b0531803 100644
--- a/Makefile
+++ b/Makefile
@@ -1,6 +1,6 @@
-.PHONY: install clean lint autoformat test release ftest ftrace install run default-config release docker-build docker-run docker-push
+.PHONY: test lint autoformat run ftest install release docker-build docker-run docker-push
 
-PYTHON?=python3
+PYTHON=python3.10
 ARCH=$(shell uname -m)
 PERF8?=no
 SLOW_TEST_THRESHOLD=1 # seconds
@@ -13,93 +13,75 @@ DOCKERFILE_FTEST_PATH?=Dockerfile.ftest
 config.yml:
 	- cp -n config.yml.example config.yml
 
-.venv/bin/python: config.yml
-	$(PYTHON) -m venv .venv
-	.venv/bin/pip install --upgrade pip
-	.venv/bin/pip install --upgrade setuptools
+bin/python: config.yml
+	$(PYTHON) -m venv .
+	bin/pip install --upgrade pip
+	bin/pip install --upgrade setuptools
 
-.venv/bin/pip-licenses: .venv/bin/python
-	.venv/bin/pip install pip-licenses
+install: bin/python bin/elastic-ingest
 
-install: .venv/bin/python .venv/bin/pip-licenses .venv/bin/elastic-ingest
-	.venv/bin/pip-licenses --format=plain-vertical --with-license-file --no-license-path > NOTICE.txt
+bin/elastic-ingest: bin/python
+	bin/pip install -r requirements/$(ARCH).txt
+	bin/python setup.py develop
 
-install-agent: install
-	.venv/bin/pip install -r requirements/agent.txt
-
-.venv/bin/elastic-ingest: .venv/bin/python
-	.venv/bin/pip install -r requirements/$(ARCH).txt
-	.venv/bin/python setup.py develop
-
-.venv/bin/ruff: .venv/bin/python
-	.venv/bin/pip install -r requirements/$(ARCH).txt
-	.venv/bin/pip install -r requirements/tests.txt
+bin/black: bin/python
+	bin/pip install -r requirements/$(ARCH).txt
+	bin/pip install -r requirements/tests.txt
 	
 
-.venv/bin/pytest: .venv/bin/python
-	.venv/bin/pip install -r requirements/$(ARCH).txt
-	.venv/bin/pip install -r requirements/tests.txt
-	.venv/bin/pip install -r requirements/ftest.txt
+bin/pytest: bin/python
+	bin/pip install -r requirements/$(ARCH).txt
+	bin/pip install -r requirements/tests.txt
+	bin/pip install -r requirements/ftest.txt
 
 clean:
-	rm -rf bin lib .venv include elasticsearch_connector.egg-info .coverage site-packages pyvenv.cfg include.site.python*.greenlet dist
-
-lint: .venv/bin/python .venv/bin/ruff .venv/bin/elastic-ingest
-	.venv/bin/ruff check connectors
-	.venv/bin/ruff format connectors --check
-	.venv/bin/ruff check tests
-	.venv/bin/ruff format tests --check
-	.venv/bin/ruff check scripts
-	.venv/bin/ruff format scripts --check
-	.venv/bin/ruff check setup.py
-	.venv/bin/ruff format setup.py --check
-	.venv/bin/pyright connectors
-	.venv/bin/pyright tests
-
-autoformat: .venv/bin/python .venv/bin/ruff .venv/bin/elastic-ingest
-	.venv/bin/ruff check connectors --fix
-	.venv/bin/ruff format connectors
-	.venv/bin/ruff check tests --fix
-	.venv/bin/ruff format tests
-	.venv/bin/ruff check scripts --fix
-	.venv/bin/ruff format scripts
-	.venv/bin/ruff check setup.py --fix
-	.venv/bin/ruff format setup.py
-
-test: .venv/bin/pytest .venv/bin/elastic-ingest
-	.venv/bin/pytest --cov-report term-missing --cov-fail-under 92 --cov-report html --cov=connectors --fail-slow=$(SLOW_TEST_THRESHOLD) -sv tests --ignore tests/agent
-
-test-agent: .venv/bin/pytest .venv/bin/elastic-ingest install-agent
-	.venv/bin/pytest --cov-report term-missing --cov-fail-under 92 --cov-report html --cov=connectors/agent --fail-slow=$(SLOW_TEST_THRESHOLD) -sv tests/agent
+	rm -rf bin lib include
+
+lint: bin/python bin/black bin/elastic-ingest
+	bin/black --check connectors
+	bin/black --check tests
+	bin/black --check setup.py
+	bin/black --check scripts
+	bin/ruff connectors
+	bin/ruff tests
+	bin/ruff setup.py
+	bin/ruff scripts
+	bin/pyright connectors
+	bin/pyright tests
+
+autoformat: bin/python bin/black bin/elastic-ingest
+	bin/black connectors
+	bin/black tests
+	bin/black setup.py
+	bin/black scripts
+	bin/ruff connectors --fix
+	bin/ruff tests --fix
+	bin/ruff setup.py --fix
+	bin/ruff scripts --fix
+
+test: bin/pytest bin/elastic-ingest
+	bin/pytest --cov-report term-missing --cov-fail-under 92 --cov-report html --cov=connectors --fail-slow=$(SLOW_TEST_THRESHOLD) -sv tests
 
 release: install
-	.venv/bin/python setup.py sdist
+	bin/python setup.py sdist
 
-ftest: .venv/bin/pytest .venv/bin/elastic-ingest $(DOCKERFILE_FTEST_PATH)
+ftest: bin/pytest bin/elastic-ingest $(DOCKERFILE_FTEST_PATH)
 	tests/ftest.sh $(NAME) $(PERF8)
 
-ftrace: .venv/bin/pytest .venv/bin/elastic-ingest $(DOCKERFILE_FTEST_PATH)
+ftrace: bin/pytest bin/elastic-ingest $(DOCKERFILE_FTEST_PATH)
 	PERF8_TRACE=true tests/ftest.sh $(NAME) $(PERF8)
 
 run: install
-	.venv/bin/elastic-ingest
+	bin/elastic-ingest
 
 default-config: install
-	.venv/bin/elastic-ingest --action config --service-type $(SERVICE_TYPE)
+	bin/elastic-ingest --action config --service-type $(SERVICE_TYPE)
 
 docker-build: $(DOCKERFILE_PATH)
 	docker build -f $(DOCKERFILE_PATH) -t $(DOCKER_IMAGE_NAME):$(VERSION)-SNAPSHOT .
 
 docker-run:
-	docker run -v $(PWD):/config $(DOCKER_IMAGE_NAME):$(VERSION)-SNAPSHOT /app/.venv/bin/elastic-ingest -c /config/config.yml --log-level=DEBUG
+	docker run -v $(PWD):/config $(DOCKER_IMAGE_NAME):$(VERSION)-SNAPSHOT /app/bin/elastic-ingest -c /config/config.yml --log-level=DEBUG
 
 docker-push:
 	docker push $(DOCKER_IMAGE_NAME):$(VERSION)-SNAPSHOT
-
-sdist: .venv/bin/python
-	.venv/bin/python setup.py sdist --formats=zip
-
-deps-csv: .venv/bin/pip-licenses
-	mkdir -p dist
-	.venv/bin/pip-licenses --format=csv --with-urls > dist/dependencies.csv
-	.venv/bin/python scripts/deps-csv.py dist/dependencies.csv
diff --git a/NOTICE.txt b/NOTICE.txt
index 4cb82e75..6151109f 100644
--- a/NOTICE.txt
+++ b/NOTICE.txt
@@ -1,8423 +1,4 @@
-PyJWT
-2.9.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2015-2022 Jos√© Padilla
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-PyMySQL
-1.1.1
-MIT License
-Copyright (c) 2010, 2013 PyMySQL contributors
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-
-PyYAML
-6.0.1
-MIT License
-Copyright (c) 2017-2021 Ingy d√∂t Net
-Copyright (c) 2006-2016 Kirill Simonov
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
-of the Software, and to permit persons to whom the Software is furnished to do
-so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-Pygments
-2.18.0
-BSD License
-Copyright (c) 2006-2022 by the respective authors (see AUTHORS file).
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-* Redistributions of source code must retain the above copyright
-  notice, this list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright
-  notice, this list of conditions and the following disclaimer in the
-  documentation and/or other materials provided with the distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
-LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
-DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
-THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-Pympler
-1.0.1
-Apache Software License
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-
-SQLAlchemy
-2.0.1
-MIT License
-Copyright 2005-2023 SQLAlchemy authors and contributors <see AUTHORS file>.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
-of the Software, and to permit persons to whom the Software is furnished to do
-so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-aioboto3
-12.4.0
-Apache Software License
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2015-2016 Nikolai Novik
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-aiobotocore
-2.12.3
-Apache Software License
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2015-2016 Nikolai Novik
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-aiofiles
-23.2.1
-Apache Software License
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright {yyyy} {name of copyright owner}
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-
-aiogoogle
-5.3.0
-MIT
-MIT License
-
-Copyright (c) 2019 Omar Ryhan
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-aiohappyeyeballs
-2.4.0
-Other/Proprietary License; Python Software Foundation License
-A. HISTORY OF THE SOFTWARE
-==========================
-
-Python was created in the early 1990s by Guido van Rossum at Stichting
-Mathematisch Centrum (CWI, see https://www.cwi.nl) in the Netherlands
-as a successor of a language called ABC.  Guido remains Python's
-principal author, although it includes many contributions from others.
-
-In 1995, Guido continued his work on Python at the Corporation for
-National Research Initiatives (CNRI, see https://www.cnri.reston.va.us)
-in Reston, Virginia where he released several versions of the
-software.
-
-In May 2000, Guido and the Python core development team moved to
-BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
-year, the PythonLabs team moved to Digital Creations, which became
-Zope Corporation.  In 2001, the Python Software Foundation (PSF, see
-https://www.python.org/psf/) was formed, a non-profit organization
-created specifically to own Python-related Intellectual Property.
-Zope Corporation was a sponsoring member of the PSF.
-
-All Python releases are Open Source (see https://opensource.org for
-the Open Source Definition).  Historically, most, but not all, Python
-releases have also been GPL-compatible; the table below summarizes
-the various releases.
-
-    Release         Derived     Year        Owner       GPL-
-                    from                                compatible? (1)
-
-    0.9.0 thru 1.2              1991-1995   CWI         yes
-    1.3 thru 1.5.2  1.2         1995-1999   CNRI        yes
-    1.6             1.5.2       2000        CNRI        no
-    2.0             1.6         2000        BeOpen.com  no
-    1.6.1           1.6         2001        CNRI        yes (2)
-    2.1             2.0+1.6.1   2001        PSF         no
-    2.0.1           2.0+1.6.1   2001        PSF         yes
-    2.1.1           2.1+2.0.1   2001        PSF         yes
-    2.1.2           2.1.1       2002        PSF         yes
-    2.1.3           2.1.2       2002        PSF         yes
-    2.2 and above   2.1.1       2001-now    PSF         yes
-
-Footnotes:
-
-(1) GPL-compatible doesn't mean that we're distributing Python under
-    the GPL.  All Python licenses, unlike the GPL, let you distribute
-    a modified version without making your changes open source.  The
-    GPL-compatible licenses make it possible to combine Python with
-    other software that is released under the GPL; the others don't.
-
-(2) According to Richard Stallman, 1.6.1 is not GPL-compatible,
-    because its license has a choice of law clause.  According to
-    CNRI, however, Stallman's lawyer has told CNRI's lawyer that 1.6.1
-    is "not incompatible" with the GPL.
-
-Thanks to the many outside volunteers who have worked under Guido's
-direction to make these releases possible.
-
-
-B. TERMS AND CONDITIONS FOR ACCESSING OR OTHERWISE USING PYTHON
-===============================================================
-
-Python software and documentation are licensed under the
-Python Software Foundation License Version 2.
-
-Starting with Python 3.8.6, examples, recipes, and other code in
-the documentation are dual licensed under the PSF License Version 2
-and the Zero-Clause BSD license.
-
-Some software incorporated into Python is under different licenses.
-The licenses are listed with code falling under that license.
-
-
-PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
---------------------------------------------
-
-1. This LICENSE AGREEMENT is between the Python Software Foundation
-("PSF"), and the Individual or Organization ("Licensee") accessing and
-otherwise using this software ("Python") in source or binary form and
-its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, PSF hereby
-grants Licensee a nonexclusive, royalty-free, world-wide license to reproduce,
-analyze, test, perform and/or display publicly, prepare derivative works,
-distribute, and otherwise use Python alone or in any derivative version,
-provided, however, that PSF's License Agreement and PSF's notice of copyright,
-i.e., "Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
-2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Python Software Foundation;
-All Rights Reserved" are retained in Python alone or in any derivative version
-prepared by Licensee.
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python.
-
-4. PSF is making Python available to Licensee on an "AS IS"
-basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. Nothing in this License Agreement shall be deemed to create any
-relationship of agency, partnership, or joint venture between PSF and
-Licensee.  This License Agreement does not grant permission to use PSF
-trademarks or trade name in a trademark sense to endorse or promote
-products or services of Licensee, or any third party.
-
-8. By copying, installing or otherwise using Python, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0
--------------------------------------------
-
-BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1
-
-1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
-office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
-Individual or Organization ("Licensee") accessing and otherwise using
-this software in source or binary form and its associated
-documentation ("the Software").
-
-2. Subject to the terms and conditions of this BeOpen Python License
-Agreement, BeOpen hereby grants Licensee a non-exclusive,
-royalty-free, world-wide license to reproduce, analyze, test, perform
-and/or display publicly, prepare derivative works, distribute, and
-otherwise use the Software alone or in any derivative version,
-provided, however, that the BeOpen Python License is retained in the
-Software, alone or in any derivative version prepared by Licensee.
-
-3. BeOpen is making the Software available to Licensee on an "AS IS"
-basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
-SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS
-AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE, OR ANY
-DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-5. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-6. This License Agreement shall be governed by and interpreted in all
-respects by the law of the State of California, excluding conflict of
-law provisions.  Nothing in this License Agreement shall be deemed to
-create any relationship of agency, partnership, or joint venture
-between BeOpen and Licensee.  This License Agreement does not grant
-permission to use BeOpen trademarks or trade names in a trademark
-sense to endorse or promote products or services of Licensee, or any
-third party.  As an exception, the "BeOpen Python" logos available at
-http://www.pythonlabs.com/logos.html may be used according to the
-permissions granted on that web page.
-
-7. By copying, installing or otherwise using the software, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1
----------------------------------------
-
-1. This LICENSE AGREEMENT is between the Corporation for National
-Research Initiatives, having an office at 1895 Preston White Drive,
-Reston, VA 20191 ("CNRI"), and the Individual or Organization
-("Licensee") accessing and otherwise using Python 1.6.1 software in
-source or binary form and its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, CNRI
-hereby grants Licensee a nonexclusive, royalty-free, world-wide
-license to reproduce, analyze, test, perform and/or display publicly,
-prepare derivative works, distribute, and otherwise use Python 1.6.1
-alone or in any derivative version, provided, however, that CNRI's
-License Agreement and CNRI's notice of copyright, i.e., "Copyright (c)
-1995-2001 Corporation for National Research Initiatives; All Rights
-Reserved" are retained in Python 1.6.1 alone or in any derivative
-version prepared by Licensee.  Alternately, in lieu of CNRI's License
-Agreement, Licensee may substitute the following text (omitting the
-quotes): "Python 1.6.1 is made available subject to the terms and
-conditions in CNRI's License Agreement.  This Agreement together with
-Python 1.6.1 may be located on the internet using the following
-unique, persistent identifier (known as a handle): 1895.22/1013.  This
-Agreement may also be obtained from a proxy server on the internet
-using the following URL: http://hdl.handle.net/1895.22/1013".
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python 1.6.1 or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python 1.6.1.
-
-4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
-basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1 WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON 1.6.1,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. This License Agreement shall be governed by the federal
-intellectual property law of the United States, including without
-limitation the federal copyright law, and, to the extent such
-U.S. federal law does not apply, by the law of the Commonwealth of
-Virginia, excluding Virginia's conflict of law provisions.
-Notwithstanding the foregoing, with regard to derivative works based
-on Python 1.6.1 that incorporate non-separable material that was
-previously distributed under the GNU General Public License (GPL), the
-law of the Commonwealth of Virginia shall govern this License
-Agreement only as to issues arising under or with respect to
-Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in this
-License Agreement shall be deemed to create any relationship of
-agency, partnership, or joint venture between CNRI and Licensee.  This
-License Agreement does not grant permission to use CNRI trademarks or
-trade name in a trademark sense to endorse or promote products or
-services of Licensee, or any third party.
-
-8. By clicking on the "ACCEPT" button where indicated, or by copying,
-installing or otherwise using Python 1.6.1, Licensee agrees to be
-bound by the terms and conditions of this License Agreement.
-
-        ACCEPT
-
-
-CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2
---------------------------------------------------
-
-Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
-The Netherlands.  All rights reserved.
-
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose and without fee is hereby granted,
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in
-supporting documentation, and that the name of Stichting Mathematisch
-Centrum or CWI not be used in advertising or publicity pertaining to
-distribution of the software without specific, written prior
-permission.
-
-STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO
-THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
-FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE
-FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
-OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON DOCUMENTATION
-----------------------------------------------------------------------
-
-Permission to use, copy, modify, and/or distribute this software for any
-purpose with or without fee is hereby granted.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
-REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
-AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
-INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
-LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
-OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
-PERFORMANCE OF THIS SOFTWARE.
-
-
-aiohttp
-3.10.3
-Apache Software License
-   Copyright aio-libs contributors.
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-aioitertools
-0.11.0
-MIT License
-MIT License
-
-Copyright (c) 2022 Amethyst Reese
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-aiomysql
-0.1.1
-MIT License
-Copyright (c) 2010, 2013 PyMySQL contributors
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-
-aiosignal
-1.3.1
-Apache Software License
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2013-2019 Nikolay Kim and Andrew Svetlov
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-anyio
-4.4.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2018 Alex Gr√∂nholm
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-async-timeout
-4.0.3
-Apache Software License
-Copyright 2016-2020 aio-libs collaboration.
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-   http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-
-
-asyncpg
-0.29.0
-Apache Software License
-Copyright (C) 2016-present the asyncpg authors and contributors.
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright (C) 2016-present the asyncpg authors and contributors
-   <see AUTHORS file>
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-attrs
-24.2.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2015 Hynek Schlawack and the attrs contributors
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-autocommand
-2.2.2
-GNU Lesser General Public License v3 (LGPLv3)
-GNU LESSER GENERAL PUBLIC LICENSE
-                       Version 3, 29 June 2007
-
- Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-
-  This version of the GNU Lesser General Public License incorporates
-the terms and conditions of version 3 of the GNU General Public
-License, supplemented by the additional permissions listed below.
-
-  0. Additional Definitions.
-
-  As used herein, "this License" refers to version 3 of the GNU Lesser
-General Public License, and the "GNU GPL" refers to version 3 of the GNU
-General Public License.
-
-  "The Library" refers to a covered work governed by this License,
-other than an Application or a Combined Work as defined below.
-
-  An "Application" is any work that makes use of an interface provided
-by the Library, but which is not otherwise based on the Library.
-Defining a subclass of a class defined by the Library is deemed a mode
-of using an interface provided by the Library.
-
-  A "Combined Work" is a work produced by combining or linking an
-Application with the Library.  The particular version of the Library
-with which the Combined Work was made is also called the "Linked
-Version".
-
-  The "Minimal Corresponding Source" for a Combined Work means the
-Corresponding Source for the Combined Work, excluding any source code
-for portions of the Combined Work that, considered in isolation, are
-based on the Application, and not on the Linked Version.
-
-  The "Corresponding Application Code" for a Combined Work means the
-object code and/or source code for the Application, including any data
-and utility programs needed for reproducing the Combined Work from the
-Application, but excluding the System Libraries of the Combined Work.
-
-  1. Exception to Section 3 of the GNU GPL.
-
-  You may convey a covered work under sections 3 and 4 of this License
-without being bound by section 3 of the GNU GPL.
-
-  2. Conveying Modified Versions.
-
-  If you modify a copy of the Library, and, in your modifications, a
-facility refers to a function or data to be supplied by an Application
-that uses the facility (other than as an argument passed when the
-facility is invoked), then you may convey a copy of the modified
-version:
-
-   a) under this License, provided that you make a good faith effort to
-   ensure that, in the event an Application does not supply the
-   function or data, the facility still operates, and performs
-   whatever part of its purpose remains meaningful, or
-
-   b) under the GNU GPL, with none of the additional permissions of
-   this License applicable to that copy.
-
-  3. Object Code Incorporating Material from Library Header Files.
-
-  The object code form of an Application may incorporate material from
-a header file that is part of the Library.  You may convey such object
-code under terms of your choice, provided that, if the incorporated
-material is not limited to numerical parameters, data structure
-layouts and accessors, or small macros, inline functions and templates
-(ten or fewer lines in length), you do both of the following:
-
-   a) Give prominent notice with each copy of the object code that the
-   Library is used in it and that the Library and its use are
-   covered by this License.
-
-   b) Accompany the object code with a copy of the GNU GPL and this license
-   document.
-
-  4. Combined Works.
-
-  You may convey a Combined Work under terms of your choice that,
-taken together, effectively do not restrict modification of the
-portions of the Library contained in the Combined Work and reverse
-engineering for debugging such modifications, if you also do each of
-the following:
-
-   a) Give prominent notice with each copy of the Combined Work that
-   the Library is used in it and that the Library and its use are
-   covered by this License.
-
-   b) Accompany the Combined Work with a copy of the GNU GPL and this license
-   document.
-
-   c) For a Combined Work that displays copyright notices during
-   execution, include the copyright notice for the Library among
-   these notices, as well as a reference directing the user to the
-   copies of the GNU GPL and this license document.
-
-   d) Do one of the following:
-
-       0) Convey the Minimal Corresponding Source under the terms of this
-       License, and the Corresponding Application Code in a form
-       suitable for, and under terms that permit, the user to
-       recombine or relink the Application with a modified version of
-       the Linked Version to produce a modified Combined Work, in the
-       manner specified by section 6 of the GNU GPL for conveying
-       Corresponding Source.
-
-       1) Use a suitable shared library mechanism for linking with the
-       Library.  A suitable mechanism is one that (a) uses at run time
-       a copy of the Library already present on the user's computer
-       system, and (b) will operate properly with a modified version
-       of the Library that is interface-compatible with the Linked
-       Version.
-
-   e) Provide Installation Information, but only if you would otherwise
-   be required to provide such information under section 6 of the
-   GNU GPL, and only to the extent that such information is
-   necessary to install and execute a modified version of the
-   Combined Work produced by recombining or relinking the
-   Application with a modified version of the Linked Version. (If
-   you use option 4d0, the Installation Information must accompany
-   the Minimal Corresponding Source and Corresponding Application
-   Code. If you use option 4d1, you must provide the Installation
-   Information in the manner specified by section 6 of the GNU GPL
-   for conveying Corresponding Source.)
-
-  5. Combined Libraries.
-
-  You may place library facilities that are a work based on the
-Library side by side in a single library together with other library
-facilities that are not Applications and are not covered by this
-License, and convey such a combined library under terms of your
-choice, if you do both of the following:
-
-   a) Accompany the combined library with a copy of the same work based
-   on the Library, uncombined with any other library facilities,
-   conveyed under the terms of this License.
-
-   b) Give prominent notice with the combined library that part of it
-   is a work based on the Library, and explaining where to find the
-   accompanying uncombined form of the same work.
-
-  6. Revised Versions of the GNU Lesser General Public License.
-
-  The Free Software Foundation may publish revised and/or new versions
-of the GNU Lesser General Public License from time to time. Such new
-versions will be similar in spirit to the present version, but may
-differ in detail to address new problems or concerns.
-
-  Each version is given a distinguishing version number. If the
-Library as you received it specifies that a certain numbered version
-of the GNU Lesser General Public License "or any later version"
-applies to it, you have the option of following the terms and
-conditions either of that published version or of any later version
-published by the Free Software Foundation. If the Library as you
-received it does not specify a version number of the GNU Lesser
-General Public License, you may choose any version of the GNU Lesser
-General Public License ever published by the Free Software Foundation.
-
-  If the Library as you received it specifies that a proxy can decide
-whether future versions of the GNU Lesser General Public License shall
-apply, that proxy's public statement of acceptance of any version is
-permanent authorization for you to choose that version for the
-Library.
-
-
-
-azure-core
-1.30.2
-MIT License
-Copyright (c) Microsoft Corporation.
-
-MIT License
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-azure-storage-blob
-12.19.1
-MIT License
-Copyright (c) Microsoft Corporation.
-
-MIT License
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-backports.tarfile
-1.2.0
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-base64io
-1.0.3
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-beautifulsoup4
-4.12.2
-MIT License
-Beautiful Soup is made available under the MIT license:
-
- Copyright (c) Leonard Richardson
-
- Permission is hereby granted, free of charge, to any person obtaining
- a copy of this software and associated documentation files (the
- "Software"), to deal in the Software without restriction, including
- without limitation the rights to use, copy, modify, merge, publish,
- distribute, sublicense, and/or sell copies of the Software, and to
- permit persons to whom the Software is furnished to do so, subject to
- the following conditions:
-
- The above copyright notice and this permission notice shall be
- included in all copies or substantial portions of the Software.
-
- THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
- EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
- MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
- NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
- BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
- ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
- CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
- SOFTWARE.
-
-Beautiful Soup incorporates code from the html5lib library, which is
-also made available under the MIT license. Copyright (c) James Graham
-and other contributors
-
-Beautiful Soup has an optional dependency on the soupsieve library,
-which is also made available under the MIT license. Copyright (c)
-Isaac Muse
-
-
-boto3
-1.34.69
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-
-botocore
-1.34.69
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-
-bracex
-2.5
-MIT License
-MIT License
-
-Copyright (c) 2018 - 2024 Isaac Muse
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-cached-property
-1.5.2
-BSD License
-Copyright (c) 2015, Daniel Greenfeld
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
-
-* Neither the name of cached-property nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-cachetools
-5.5.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2014-2024 Thomas Kemmer
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-certifi
-2024.7.4
-Mozilla Public License 2.0 (MPL 2.0)
-This package contains a modified version of ca-bundle.crt:
-
-ca-bundle.crt -- Bundle of CA Root Certificates
-
-This is a bundle of X.509 certificates of public Certificate Authorities
-(CA). These were automatically extracted from Mozilla's root certificates
-file (certdata.txt).  This file can be found in the mozilla source tree:
-https://hg.mozilla.org/mozilla-central/file/tip/security/nss/lib/ckfw/builtins/certdata.txt
-It contains the certificates in PEM format and therefore
-can be directly used with curl / libcurl / php_curl, or with
-an Apache+mod_ssl webserver for SSL client authentication.
-Just configure this file as the SSLCACertificateFile.#
-
-***** BEGIN LICENSE BLOCK *****
-This Source Code Form is subject to the terms of the Mozilla Public License,
-v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain
-one at http://mozilla.org/MPL/2.0/.
-
-***** END LICENSE BLOCK *****
-@(#) $RCSfile: certdata.txt,v $ $Revision: 1.80 $ $Date: 2011/11/03 15:11:58 $
-
-
-cffi
-1.16.0
-MIT License
-
-Except when otherwise stated (look for LICENSE files in directories or
-information at the beginning of each file) all software and
-documentation is licensed as follows: 
-
-    The MIT License
-
-    Permission is hereby granted, free of charge, to any person 
-    obtaining a copy of this software and associated documentation 
-    files (the "Software"), to deal in the Software without 
-    restriction, including without limitation the rights to use, 
-    copy, modify, merge, publish, distribute, sublicense, and/or 
-    sell copies of the Software, and to permit persons to whom the 
-    Software is furnished to do so, subject to the following conditions:
-
-    The above copyright notice and this permission notice shall be included 
-    in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS 
-    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, 
-    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL 
-    THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER 
-    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
-    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER 
-    DEALINGS IN THE SOFTWARE.
-
-
-
-charset-normalizer
-3.3.2
-MIT License
-MIT License
-
-Copyright (c) 2019 TAHRI Ahmed R.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-click
-8.1.7
-BSD License
-Copyright 2014 Pallets
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-1.  Redistributions of source code must retain the above copyright
-    notice, this list of conditions and the following disclaimer.
-
-2.  Redistributions in binary form must reproduce the above copyright
-    notice, this list of conditions and the following disclaimer in the
-    documentation and/or other materials provided with the distribution.
-
-3.  Neither the name of the copyright holder nor the names of its
-    contributors may be used to endorse or promote products derived from
-    this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
-PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
-TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-colorama
-0.4.6
-BSD License
-Copyright (c) 2010 Jonathan Hartley
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice,
-  this list of conditions and the following disclaimer in the documentation
-  and/or other materials provided with the distribution.
-
-* Neither the name of the copyright holders, nor those of its contributors
-  may be used to endorse or promote products derived from this software without
-  specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-cron-schedule-triggers
-0.0.11
-MIT License
-Copyright (c) 2018 The Python Packaging Authority
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-cryptography
-42.0.8
-Apache Software License; BSD License
-This software is made available under the terms of *either* of the licenses
-found in LICENSE.APACHE or LICENSE.BSD. Contributions to cryptography are made
-under the terms of *both* these licenses.
-
-
-defusedxml
-0.7.1
-Python Software Foundation License
-PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
---------------------------------------------
-
-1. This LICENSE AGREEMENT is between the Python Software Foundation
-("PSF"), and the Individual or Organization ("Licensee") accessing and
-otherwise using this software ("Python") in source or binary form and
-its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, PSF
-hereby grants Licensee a nonexclusive, royalty-free, world-wide
-license to reproduce, analyze, test, perform and/or display publicly,
-prepare derivative works, distribute, and otherwise use Python
-alone or in any derivative version, provided, however, that PSF's
-License Agreement and PSF's notice of copyright, i.e., "Copyright (c)
-2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008 Python Software Foundation; 
-All Rights Reserved" are retained in Python alone or in any derivative 
-version prepared by Licensee.
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python.
-
-4. PSF is making Python available to Licensee on an "AS IS"
-basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. Nothing in this License Agreement shall be deemed to create any
-relationship of agency, partnership, or joint venture between PSF and
-Licensee.  This License Agreement does not grant permission to use PSF
-trademarks or trade name in a trademark sense to endorse or promote
-products or services of Licensee, or any third party.
-
-8. By copying, installing or otherwise using Python, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-
-dnspython
-2.6.1
-ISC License (ISCL)
-ISC License
-
-Copyright (C) Dnspython Contributors
-
-Permission to use, copy, modify, and/or distribute this software for
-any purpose with or without fee is hereby granted, provided that the
-above copyright notice and this permission notice appear in all
-copies.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
-WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE
-AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
-DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
-PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER
-TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
-PERFORMANCE OF THIS SOFTWARE.
-
-
-
-Copyright (C) 2001-2017 Nominum, Inc.
-Copyright (C) Google Inc.
-
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose with or without fee is hereby granted,
-provided that the above copyright notice and this permission notice
-appear in all copies.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND NOMINUM DISCLAIMS ALL WARRANTIES
-WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL NOMINUM BE LIABLE FOR
-ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
-OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-
-dropbox
-11.36.2
-MIT License
-Copyright (c) 2020 Dropbox Inc., http://www.dropbox.com/
-
-    Permission is hereby granted, free of charge, to any person obtaining
-    a copy of this software and associated documentation files (the
-    "Software"), to deal in the Software without restriction, including
-    without limitation the rights to use, copy, modify, merge, publish,
-    distribute, sublicense, and/or sell copies of the Software, and to
-    permit persons to whom the Software is furnished to do so, subject to
-    the following conditions:
-
-    The above copyright notice and this permission notice shall be
-    included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-ecs-logging
-2.0.0
-Apache Software License
-UNKNOWN
-
-elastic-transport
-8.15.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-
-
-elasticsearch
-8.15.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-
-
-elasticsearch-connectors
-8.16.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-envyaml
-1.10.211231
-MIT License
-MIT License
-
-Copyright (c) 2019-2021 Mykola Bubelich
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-exceptiongroup
-1.2.2
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2022 Alex Gr√∂nholm
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-This project contains code copied from the Python standard library.
-The following is the required license notice for those parts.
-
-PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
---------------------------------------------
-
-1. This LICENSE AGREEMENT is between the Python Software Foundation
-("PSF"), and the Individual or Organization ("Licensee") accessing and
-otherwise using this software ("Python") in source or binary form and
-its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, PSF hereby
-grants Licensee a nonexclusive, royalty-free, world-wide license to reproduce,
-analyze, test, perform and/or display publicly, prepare derivative works,
-distribute, and otherwise use Python alone or in any derivative version,
-provided, however, that PSF's License Agreement and PSF's notice of copyright,
-i.e., "Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
-2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022 Python Software Foundation;
-All Rights Reserved" are retained in Python alone or in any derivative version
-prepared by Licensee.
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python.
-
-4. PSF is making Python available to Licensee on an "AS IS"
-basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. Nothing in this License Agreement shall be deemed to create any
-relationship of agency, partnership, or joint venture between PSF and
-Licensee.  This License Agreement does not grant permission to use PSF
-trademarks or trade name in a trademark sense to endorse or promote
-products or services of Licensee, or any third party.
-
-8. By copying, installing or otherwise using Python, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-exchangelib
-5.4.0
-BSD License
-Copyright (c) 2009 Erik Cederstrand <erik@cederstrand.dk>
-
-Redistribution and use in source and binary forms, with or without modification, are
-permitted provided that the following conditions are met:
-
-   1. Redistributions of source code must retain the above copyright notice, this list of
-      conditions and the following disclaimer.
-
-   2. Redistributions in binary form must reproduce the above copyright notice, this list
-   of conditions and the following disclaimer in the documentation and/or other materials
-   provided with the distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS
-OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
-COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
-GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
-AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
-OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-fastjsonschema
-2.16.2
-BSD License
-Copyright (c) 2018, Michal Horejsek
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-  Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-
-  Redistributions in binary form must reproduce the above copyright notice, this
-  list of conditions and the following disclaimer in the documentation and/or
-  other materials provided with the distribution.
-
-  Neither the name of the {organization} nor the names of its
-  contributors may be used to endorse or promote products derived from
-  this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
-ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
-(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
-LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
-ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
-(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-frozenlist
-1.4.1
-Apache Software License
-Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2013-2019 Nikolay Kim and Andrew Svetlov
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-gidgethub
-5.2.1
-Apache Software License
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "{}"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright 2017 Brett Cannon
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-google-auth
-2.34.0
-Apache Software License
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-graphql-core
-3.2.3
-MIT License
-MIT License
-
-Copyright (c) GraphQL Contributors (GraphQL.js)
-Copyright (c) Syrus Akbary (GraphQL-core 2)
-Copyright (c) Christoph Zwerschke (GraphQL-core 3)
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-greenlet
-3.0.3
-MIT License
-The following files are derived from Stackless Python and are subject to the
-same license as Stackless Python:
-
-	src/greenlet/slp_platformselect.h
-	files in src/greenlet/platform/ directory
-
-See LICENSE.PSF and http://www.stackless.com/ for details.
-
-Unless otherwise noted, the files in greenlet have been released under the
-following MIT license:
-
-Copyright (c) Armin Rigo, Christian Tismer and contributors
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-
-h11
-0.14.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2016 Nathaniel J. Smith <njs@pobox.com> and other contributors
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-httpcore
-1.0.5
-BSD License
-Copyright ¬© 2020, [Encode OSS Ltd](https://www.encode.io/).
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice,
-  this list of conditions and the following disclaimer in the documentation
-  and/or other materials provided with the distribution.
-
-* Neither the name of the copyright holder nor the names of its
-  contributors may be used to endorse or promote products derived from
-  this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-httpx
-0.27.0
-BSD License
-Copyright ¬© 2019, [Encode OSS Ltd](https://www.encode.io/).
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
-
-* Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-httpx-ntlm
-1.4.0
-ISC License (ISCL)
-ISC License
-
-Copyright (c) 2013 Ben Toews
-
-Permission to use, copy, modify and/or distribute this software for any
-purpose with or without fee is hereby granted, provided that the above
-copyright notice and this permission notice appear in all copies.
-
-THE SOFTWARE IS PROVIDED "AS-IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-
-idna
-3.7
-BSD License
-BSD 3-Clause License
-
-Copyright (c) 2013-2024, Kim Davies and contributors.
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-1. Redistributions of source code must retain the above copyright
-   notice, this list of conditions and the following disclaimer.
-
-2. Redistributions in binary form must reproduce the above copyright
-   notice, this list of conditions and the following disclaimer in the
-   documentation and/or other materials provided with the distribution.
-
-3. Neither the name of the copyright holder nor the names of its
-   contributors may be used to endorse or promote products derived from
-   this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
-HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
-SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
-TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-importlib_metadata
-8.0.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-importlib_resources
-6.4.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-inflect
-7.3.1
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-isodate
-0.6.1
-BSD License
-UNKNOWN
-
-jaraco.context
-5.3.0
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-jaraco.functools
-4.0.1
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-jaraco.text
-3.12.1
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-jmespath
-1.0.1
-MIT License
-Copyright (c) 2013 Amazon.com, Inc. or its affiliates.  All Rights Reserved
-
-Permission is hereby granted, free of charge, to any person obtaining a
-copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish, dis-
-tribute, sublicense, and/or sell copies of the Software, and to permit
-persons to whom the Software is furnished to do so, subject to the fol-
-lowing conditions:
-
-The above copyright notice and this permission notice shall be included
-in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
-OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-
-ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
-SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
-WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
-ldap3
-2.9.1
-GNU Lesser General Public License v3 (LGPLv3)
-                   GNU LESSER GENERAL PUBLIC LICENSE
-                       Version 3, 29 June 2007
-
- Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
- Everyone is permitted to copy and distribute verbatim copies
- of this license document, but changing it is not allowed.
-
-
-  This version of the GNU Lesser General Public License incorporates
-the terms and conditions of version 3 of the GNU General Public
-License, supplemented by the additional permissions listed below.
-
-  0. Additional Definitions.
-
-  As used herein, "this License" refers to version 3 of the GNU Lesser
-General Public License, and the "GNU GPL" refers to version 3 of the GNU
-General Public License.
-
-  "The Library" refers to a covered work governed by this License,
-other than an Application or a Combined Work as defined below.
-
-  An "Application" is any work that makes use of an interface provided
-by the Library, but which is not otherwise based on the Library.
-Defining a subclass of a class defined by the Library is deemed a mode
-of using an interface provided by the Library.
-
-  A "Combined Work" is a work produced by combining or linking an
-Application with the Library.  The particular version of the Library
-with which the Combined Work was made is also called the "Linked
-Version".
-
-  The "Minimal Corresponding Source" for a Combined Work means the
-Corresponding Source for the Combined Work, excluding any source code
-for portions of the Combined Work that, considered in isolation, are
-based on the Application, and not on the Linked Version.
-
-  The "Corresponding Application Code" for a Combined Work means the
-object code and/or source code for the Application, including any data
-and utility programs needed for reproducing the Combined Work from the
-Application, but excluding the System Libraries of the Combined Work.
-
-  1. Exception to Section 3 of the GNU GPL.
-
-  You may convey a covered work under sections 3 and 4 of this License
-without being bound by section 3 of the GNU GPL.
-
-  2. Conveying Modified Versions.
-
-  If you modify a copy of the Library, and, in your modifications, a
-facility refers to a function or data to be supplied by an Application
-that uses the facility (other than as an argument passed when the
-facility is invoked), then you may convey a copy of the modified
-version:
-
-   a) under this License, provided that you make a good faith effort to
-   ensure that, in the event an Application does not supply the
-   function or data, the facility still operates, and performs
-   whatever part of its purpose remains meaningful, or
-
-   b) under the GNU GPL, with none of the additional permissions of
-   this License applicable to that copy.
-
-  3. Object Code Incorporating Material from Library Header Files.
-
-  The object code form of an Application may incorporate material from
-a header file that is part of the Library.  You may convey such object
-code under terms of your choice, provided that, if the incorporated
-material is not limited to numerical parameters, data structure
-layouts and accessors, or small macros, inline functions and templates
-(ten or fewer lines in length), you do both of the following:
-
-   a) Give prominent notice with each copy of the object code that the
-   Library is used in it and that the Library and its use are
-   covered by this License.
-
-   b) Accompany the object code with a copy of the GNU GPL and this license
-   document.
-
-  4. Combined Works.
-
-  You may convey a Combined Work under terms of your choice that,
-taken together, effectively do not restrict modification of the
-portions of the Library contained in the Combined Work and reverse
-engineering for debugging such modifications, if you also do each of
-the following:
-
-   a) Give prominent notice with each copy of the Combined Work that
-   the Library is used in it and that the Library and its use are
-   covered by this License.
-
-   b) Accompany the Combined Work with a copy of the GNU GPL and this license
-   document.
-
-   c) For a Combined Work that displays copyright notices during
-   execution, include the copyright notice for the Library among
-   these notices, as well as a reference directing the user to the
-   copies of the GNU GPL and this license document.
-
-   d) Do one of the following:
-
-       0) Convey the Minimal Corresponding Source under the terms of this
-       License, and the Corresponding Application Code in a form
-       suitable for, and under terms that permit, the user to
-       recombine or relink the Application with a modified version of
-       the Linked Version to produce a modified Combined Work, in the
-       manner specified by section 6 of the GNU GPL for conveying
-       Corresponding Source.
-
-       1) Use a suitable shared library mechanism for linking with the
-       Library.  A suitable mechanism is one that (a) uses at run time
-       a copy of the Library already present on the user's computer
-       system, and (b) will operate properly with a modified version
-       of the Library that is interface-compatible with the Linked
-       Version.
-
-   e) Provide Installation Information, but only if you would otherwise
-   be required to provide such information under section 6 of the
-   GNU GPL, and only to the extent that such information is
-   necessary to install and execute a modified version of the
-   Combined Work produced by recombining or relinking the
-   Application with a modified version of the Linked Version. (If
-   you use option 4d0, the Installation Information must accompany
-   the Minimal Corresponding Source and Corresponding Application
-   Code. If you use option 4d1, you must provide the Installation
-   Information in the manner specified by section 6 of the GNU GPL
-   for conveying Corresponding Source.)
-
-  5. Combined Libraries.
-
-  You may place library facilities that are a work based on the
-Library side by side in a single library together with other library
-facilities that are not Applications and are not covered by this
-License, and convey such a combined library under terms of your
-choice, if you do both of the following:
-
-   a) Accompany the combined library with a copy of the same work based
-   on the Library, uncombined with any other library facilities,
-   conveyed under the terms of this License.
-
-   b) Give prominent notice with the combined library that part of it
-   is a work based on the Library, and explaining where to find the
-   accompanying uncombined form of the same work.
-
-  6. Revised Versions of the GNU Lesser General Public License.
-
-  The Free Software Foundation may publish revised and/or new versions
-of the GNU Lesser General Public License from time to time. Such new
-versions will be similar in spirit to the present version, but may
-differ in detail to address new problems or concerns.
-
-  Each version is given a distinguishing version number. If the
-Library as you received it specifies that a certain numbered version
-of the GNU Lesser General Public License "or any later version"
-applies to it, you have the option of following the terms and
-conditions either of that published version or of any later version
-published by the Free Software Foundation. If the Library as you
-received it does not specify a version number of the GNU Lesser
-General Public License, you may choose any version of the GNU Lesser
-General Public License ever published by the Free Software Foundation.
-
-  If the Library as you received it specifies that a proxy can decide
-whether future versions of the GNU Lesser General Public License shall
-apply, that proxy's public statement of acceptance of any version is
-permanent authorization for you to choose that version for the
-Library.
-
-lxml
-4.9.3
-BSD License
-Copyright (c) 2004 Infrae. All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are
-met:
-
-  1. Redistributions of source code must retain the above copyright
-     notice, this list of conditions and the following disclaimer.
-   
-  2. Redistributions in binary form must reproduce the above copyright
-     notice, this list of conditions and the following disclaimer in
-     the documentation and/or other materials provided with the
-     distribution.
-
-  3. Neither the name of Infrae nor the names of its contributors may
-     be used to endorse or promote products derived from this software
-     without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL INFRAE OR
-CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-more-itertools
-10.3.0
-MIT License
-Copyright (c) 2012 Erik Rose
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
-of the Software, and to permit persons to whom the Software is furnished to do
-so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-motor
-3.4.0
-Apache Software License
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-msal
-1.30.0
-MIT License
-The MIT License (MIT)
-
-Copyright (c) Microsoft Corporation. 
-All rights reserved.
-
-This code is licensed under the MIT License.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files(the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and / or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions :
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-multidict
-6.0.5
-Apache Software License
-   Copyright 2016 Andrew Svetlov and aio-libs contributors
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-notion-client
-2.2.1
-MIT License
-The MIT License (MIT)
-
-Copyright (c) 2021-2023 Guillaume Gelin
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-oauthlib
-3.2.2
-BSD License
-Copyright (c) 2019 The OAuthlib Community
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-    1. Redistributions of source code must retain the above copyright notice,
-       this list of conditions and the following disclaimer.
-
-    2. Redistributions in binary form must reproduce the above copyright
-       notice, this list of conditions and the following disclaimer in the
-       documentation and/or other materials provided with the distribution.
-
-    3. Neither the name of this project nor the names of its contributors may
-       be used to endorse or promote products derived from this software without
-       specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
-FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
-DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
-SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
-CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
-OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
-OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-oracledb
-2.3.0
-Apache Software License; Universal Permissive License (UPL)
-Copyright (c) 2016, 2024 Oracle and/or its affiliates.
-
-This software is dual-licensed to you under the Universal Permissive License
-(UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License
-2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose
-either license.
-
-If you elect to accept the software under the Apache License, Version 2.0,
-the following applies:
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-   https://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-
-
-The Universal Permissive License (UPL), Version 1.0
-===================================================
-
-Subject to the condition set forth below, permission is hereby granted to any
-person obtaining a copy of this software, associated documentation and/or data
-(collectively the "Software"), free of charge and under any and all copyright
-rights in the Software, and any and all patent rights owned or freely
-licensable by each licensor hereunder covering either (i) the unmodified
-Software as contributed to or provided by such licensor, or (ii) the Larger
-Works (as defined below), to deal in both
-
-(a) the Software, and
-
-(b) any piece of software and/or hardware listed in the lrgrwrks.txt file if
-    one is included with the Software (each a "Larger Work" to which the
-    Software is contributed by such licensors),
-
-without restriction, including without limitation the rights to copy, create
-derivative works of, display, perform, and distribute the Software and make,
-use, sell, offer for sale, import, export, have made, and have sold the
-Software and the Larger Work(s), and to sublicense the foregoing rights on
-either these or other terms.
-
-This license is subject to the following condition:
-
-The above copyright notice and either this complete permission notice or at a
-minimum a reference to the UPL must be included in all copies or substantial
-portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-Apache License
-==============
-
-Version 2.0, January 2004
-
-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-1.  **Definitions**.
-
-    "License" shall mean the terms and conditions for use, reproduction, and
-    distribution as defined by Sections 1 through 9 of this document.
-
-    "Licensor" shall mean the copyright owner or entity authorized by the
-    copyright owner that is granting the License.
-
-    "Legal Entity" shall mean the union of the acting entity and all other
-    entities that control, are controlled by, or are under common control with
-    that entity.  For the purposes of this definition, "control" means (i) the
-    power, direct or indirect, to cause the direction or management of such
-    entity, whether by contract or otherwise, or (ii) ownership of fifty
-    percent (50%) or more of the outstanding shares, or (iii) beneficial
-    ownership of such entity.
-
-    "You" (or "Your") shall mean an individual or Legal Entity exercising
-    permissions granted by this License.
-
-    "Source" form shall mean the preferred form for making modifications,
-    including but not limited to software source code, documentation source,
-    and configuration files.
-
-    "Object" form shall mean any form resulting from mechanical transformation
-    or translation of a Source form, including but not limited to compiled
-    object code, generated documentation, and conversions to other media types.
-
-    "Work" shall mean the work of authorship, whether in Source or Object form,
-    made available under the License, as indicated by a copyright notice that
-    is included in or attached to the work (an example is provided in the
-    Appendix below).
-
-    "Derivative Works" shall mean any work, whether in Source or Object form,
-    that is based on (or derived from) the Work and for which the editorial
-    revisions, annotations, elaborations, or other modifications represent, as
-    a whole, an original work of authorship. For the purposes of this License,
-    Derivative Works shall not include works that remain separable from, or
-    merely link (or bind by name) to the interfaces of, the Work and Derivative
-    Works thereof.
-
-    "Contribution" shall mean any work of authorship, including the original
-    version of the Work and any modifications or additions to that Work or
-    Derivative Works thereof, that is intentionally submitted to Licensor for
-    inclusion in the Work by the copyright owner or by an individual or Legal
-    Entity authorized to submit on behalf of the copyright owner. For the
-    purposes of this definition, "submitted" means any form of electronic,
-    verbal, or written communication sent to the Licensor or its
-    representatives, including but not limited to communication on electronic
-    mailing lists, source code control systems, and issue tracking systems that
-    are managed by, or on behalf of, the Licensor for the purpose of discussing
-    and improving the Work, but excluding communication that is conspicuously
-    marked or otherwise designated in writing by the copyright owner as "Not a
-    Contribution."
-
-    "Contributor" shall mean Licensor and any individual or Legal Entity on
-    behalf of whom a Contribution has been received by Licensor and
-    subsequently incorporated within the Work.
-
-2.  **Grant of Copyright License.** Subject to the terms and conditions of this
-    License, each Contributor hereby grants to You a perpetual, worldwide,
-    non-exclusive, no-charge, royalty-free, irrevocable copyright license to
-    reproduce, prepare Derivative Works of, publicly display, publicly perform,
-    sublicense, and distribute the Work and such Derivative Works in Source or
-    Object form.
-
-3.  **Grant of Patent License.** Subject to the terms and conditions of this
-    License, each Contributor hereby grants to You a perpetual, worldwide,
-    non-exclusive, no-charge, royalty-free, irrevocable (except as stated in
-    this section) patent license to make, have made, use, offer to sell, sell,
-    import, and otherwise transfer the Work, where such license applies only to
-    those patent claims licensable by such Contributor that are necessarily
-    infringed by their Contribution(s) alone or by combination of their
-    Contribution(s) with the Work to which such Contribution(s) was submitted.
-    If You institute patent litigation against any entity (including a
-    cross-claim or counterclaim in a lawsuit) alleging that the Work or a
-    Contribution incorporated within the Work constitutes direct or
-    contributory patent infringement, then any patent licenses granted to You
-    under this License for that Work shall terminate as of the date such
-    litigation is filed.
-
-4.  **Redistribution.** You may reproduce and distribute copies of the Work or
-    Derivative Works thereof in any medium, with or without modifications, and
-    in Source or Object form, provided that You meet the following conditions:
-
-    1.  You must give any other recipients of the Work or Derivative Works a
-        copy of this License; and
-
-    2.  You must cause any modified files to carry prominent notices stating
-        that You changed the files; and
-
-    3.  You must retain, in the Source form of any Derivative Works that You
-        distribute, all copyright, patent, trademark, and attribution notices
-        from the Source form of the Work, excluding those notices that do not
-        pertain to any part of the Derivative Works; and
-
-    4.  If the Work includes a "NOTICE" text file as part of its distribution,
-        then any Derivative Works that You distribute must include a readable
-        copy of the attribution notices contained within such NOTICE file,
-        excluding those notices that do not pertain to any part of the
-        Derivative Works, in at least one of the following places: within a
-        NOTICE text file distributed as part of the Derivative Works; within
-        the Source form or documentation, if provided along with the Derivative
-        Works; or, within a display generated by the Derivative Works, if and
-        wherever such third-party notices normally appear. The contents of the
-        NOTICE file are for informational purposes only and do not modify the
-        License. You may add Your own attribution notices within Derivative
-        Works that You distribute, alongside or as an addendum to the NOTICE
-        text from the Work, provided that such additional attribution notices
-        cannot be construed as modifying the License.
-
-        You may add Your own copyright statement to Your modifications and may
-        provide additional or different license terms and conditions for use,
-        reproduction, or distribution of Your modifications, or for any such
-        Derivative Works as a whole, provided Your use, reproduction, and
-        distribution of the Work otherwise complies with the conditions stated
-        in this License.
-
-5.  **Submission of Contributions.** Unless You explicitly state otherwise, any
-    Contribution intentionally submitted for inclusion in the Work by You to
-    the Licensor shall be under the terms and conditions of this License,
-    without any additional terms or conditions. Notwithstanding the above,
-    nothing herein shall supersede or modify the terms of any separate license
-    agreement you may have executed with Licensor regarding such Contributions.
-
-6.  **Trademarks.** This License does not grant permission to use the trade
-    names, trademarks, service marks, or product names of the Licensor, except
-    as required for reasonable and customary use in describing the origin of
-    the Work and reproducing the content of the NOTICE file.
-
-7.  **Disclaimer of Warranty.** Unless required by applicable law or agreed to
-    in writing, Licensor provides the Work (and each Contributor provides its
-    Contributions) on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
-    KIND, either express or implied, including, without limitation, any
-    warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or
-    FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for
-    determining the appropriateness of using or redistributing the Work and
-    assume any risks associated with Your exercise of permissions under this
-    License.
-
-8.  **Limitation of Liability.** In no event and under no legal theory, whether
-    in tort (including negligence), contract, or otherwise, unless required by
-    applicable law (such as deliberate and grossly negligent acts) or agreed to
-    in writing, shall any Contributor be liable to You for damages, including
-    any direct, indirect, special, incidental, or consequential damages of any
-    character arising as a result of this License or out of the use or
-    inability to use the Work (including but not limited to damages for loss of
-    goodwill, work stoppage, computer failure or malfunction, or any and all
-    other commercial damages or losses), even if such Contributor has been
-    advised of the possibility of such damages.
-
-9.  **Accepting Warranty or Additional Liability.** While redistributing the
-    Work or Derivative Works thereof, You may choose to offer, and charge a fee
-    for, acceptance of support, warranty, indemnity, or other liability
-    obligations and/or rights consistent with this License. However, in
-    accepting such obligations, You may act only on Your own behalf and on Your
-    sole responsibility, not on behalf of any other Contributor, and only if
-    You agree to indemnify, defend, and hold each Contributor harmless for any
-    liability incurred by, or claims asserted against, such Contributor by
-    reason of your accepting any such warranty or additional liability.
-
-END OF TERMS AND CONDITIONS
-
-
-packaging
-24.1
-Apache Software License; BSD License
-This software is made available under the terms of *either* of the licenses
-found in LICENSE.APACHE or LICENSE.BSD. Contributions to this software is made
-under the terms of *both* these licenses.
-
-
-packaging
-24.1
-Apache Software License; BSD License
-This software is made available under the terms of *either* of the licenses
-found in LICENSE.APACHE or LICENSE.BSD. Contributions to this software is made
-under the terms of *both* these licenses.
-
-
-platformdirs
-4.2.2
-MIT License
-MIT License
-
-Copyright (c) 2010-202x The platformdirs developers
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-ply
-3.11
-BSD
-UNKNOWN
-
-pyOpenSSL
-24.1.0
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-pyasn1
-0.6.0
-BSD License
-Copyright (c) 2005-2020, Ilya Etingof <etingof@gmail.com>
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-  * Redistributions of source code must retain the above copyright notice, 
-    this list of conditions and the following disclaimer.
-
-  * Redistributions in binary form must reproduce the above copyright notice,
-    this list of conditions and the following disclaimer in the documentation
-    and/or other materials provided with the distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE. 
-
-
-pyasn1_modules
-0.4.0
-BSD License
-Copyright (c) 2005-2020, Ilya Etingof <etingof@gmail.com>
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-  * Redistributions of source code must retain the above copyright notice, 
-    this list of conditions and the following disclaimer.
-
-  * Redistributions in binary form must reproduce the above copyright notice,
-    this list of conditions and the following disclaimer in the documentation
-    and/or other materials provided with the distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE. 
-
-
-pycparser
-2.22
-BSD License
-pycparser -- A C parser in Python
-
-Copyright (c) 2008-2022, Eli Bendersky
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without modification,
-are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this 
-  list of conditions and the following disclaimer.
-* Redistributions in binary form must reproduce the above copyright notice, 
-  this list of conditions and the following disclaimer in the documentation 
-  and/or other materials provided with the distribution.
-* Neither the name of the copyright holder nor the names of its contributors may 
-  be used to endorse or promote products derived from this software without 
-  specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
-ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
-WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
-DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE 
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR 
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE 
-GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
-HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
-LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT 
-OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-
-pymongo
-4.6.3
-Apache Software License
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-pyspnego
-0.11.1
-MIT License
-MIT License
-
-Copyright (c) 2020 Jordan Borean, Red Hat
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-python-dateutil
-2.8.2
-Apache Software License; BSD License
-Copyright 2017- Paul Ganssle <paul@ganssle.io>
-Copyright 2017- dateutil contributors (see AUTHORS file)
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-The above license applies to all contributions after 2017-12-01, as well as
-all contributions that have been re-licensed (see AUTHORS file for the list of
-contributors who have re-licensed their code).
---------------------------------------------------------------------------------
-dateutil - Extensions to the standard Python datetime module.
-
-Copyright (c) 2003-2011 - Gustavo Niemeyer <gustavo@niemeyer.net>
-Copyright (c) 2012-2014 - Tomi Pievil√§inen <tomi.pievilainen@iki.fi>
-Copyright (c) 2014-2016 - Yaron de Leeuw <me@jarondl.net>
-Copyright (c) 2015-     - Paul Ganssle <paul@ganssle.io>
-Copyright (c) 2015-     - dateutil contributors (see AUTHORS file)
-
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-    * Redistributions of source code must retain the above copyright notice,
-      this list of conditions and the following disclaimer.
-    * Redistributions in binary form must reproduce the above copyright notice,
-      this list of conditions and the following disclaimer in the documentation
-      and/or other materials provided with the distribution.
-    * Neither the name of the copyright holder nor the names of its
-      contributors may be used to endorse or promote products derived from
-      this software without specific prior written permission.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
-CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
-The above BSD License Applies to all code, even that also covered by Apache 2.0.
-
-python-tds
-1.12.0
-MIT
-The MIT License (MIT)
-
-Copyright (c) 2014 Mikhail Denisenko
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-
-pytz
-2019.3
-MIT License
-Copyright (c) 2003-2018 Stuart Bishop <stuart@stuartbishop.net>
-
-Permission is hereby granted, free of charge, to any person obtaining a
-copy of this software and associated documentation files (the "Software"),
-to deal in the Software without restriction, including without limitation
-the rights to use, copy, modify, merge, publish, distribute, sublicense,
-and/or sell copies of the Software, and to permit persons to whom the
-Software is furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
-THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-DEALINGS IN THE SOFTWARE.
-
-
-pywinrm
-0.4.3
-MIT License
-Copyright (c) 2013 Alexey Diyan
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
-THE SOFTWARE.
-
-redis
-5.0.1
-MIT License
-MIT License
-
-Copyright (c) 2022-2023, Redis, inc.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-requests
-2.32.3
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-
-requests-oauthlib
-2.0.0
-BSD License
-ISC License
-
-Copyright (c) 2014 Kenneth Reitz.
-
-Permission to use, copy, modify, and/or distribute this software for any
-purpose with or without fee is hereby granted, provided that the above
-copyright notice and this permission notice appear in all copies.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-
-requests_ntlm
-1.3.0
-ISC License (ISCL)
-ISC License
-
-Copyright (c) 2013 Ben Toews
-
-Permission to use, copy, modify and/or distribute this software for any
-purpose with or without fee is hereby granted, provided that the above
-copyright notice and this permission notice appear in all copies.
-
-THE SOFTWARE IS PROVIDED "AS-IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
-WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
-MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
-ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
-OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-
-rsa
-4.9
-Apache Software License
-Copyright 2011 Sybren A. St√ºvel <sybren@stuvel.eu>
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-   https://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-
-
-s3transfer
-0.10.2
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-simple-term-menu
-1.6.4
-MIT License
-Copyright 2021 Forschungszentrum J√ºlich GmbH
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-six
-1.16.0
-MIT License
-Copyright (c) 2010-2020 Benjamin Peterson
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of
-this software and associated documentation files (the "Software"), to deal in
-the Software without restriction, including without limitation the rights to
-use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
-the Software, and to permit persons to whom the Software is furnished to do so,
-subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
-FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
-COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
-IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
-CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-smbprotocol
-1.9.0
-MIT License
-MIT License
-
-Copyright (c) 2017 Jordan Borean, Red Hat
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-sniffio
-1.3.1
-Apache Software License; MIT License
-This software is made available under the terms of *either* of the
-licenses found in LICENSE.APACHE2 or LICENSE.MIT. Contributions to are
-made under the terms of *both* these licenses.
-
-
-soupsieve
-2.6
-MIT License
-MIT License
-
-Copyright (c) 2018 - 2024 Isaac Muse <isaacmuse@gmail.com>
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-sqlalchemy-pytds
-0.3.5
-MIT
-The MIT License (MIT)
-
-Copyright (c) 2016 Grzegorz Makarewicz
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-stone
-3.3.8
-MIT License
-Copyright (c) 2020 Dropbox Inc., http://www.dropbox.com/
-
-    Permission is hereby granted, free of charge, to any person obtaining
-    a copy of this software and associated documentation files (the
-    "Software"), to deal in the Software without restriction, including
-    without limitation the rights to use, copy, modify, merge, publish,
-    distribute, sublicense, and/or sell copies of the Software, and to
-    permit persons to whom the Software is furnished to do so, subject to
-    the following conditions:
-
-    The above copyright notice and this permission notice shall be
-    included in all copies or substantial portions of the Software.
-
-    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-tabulate
-0.9.0
-MIT License
-Copyright (c) 2011-2020 Sergey Astanin and contributors
-
-Permission is hereby granted, free of charge, to any person obtaining
-a copy of this software and associated documentation files (the
-"Software"), to deal in the Software without restriction, including
-without limitation the rights to use, copy, modify, merge, publish,
-distribute, sublicense, and/or sell copies of the Software, and to
-permit persons to whom the Software is furnished to do so, subject to
-the following conditions:
-
-The above copyright notice and this permission notice shall be
-included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
-EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
-MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
-NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
-LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
-WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-tonyg-rfc3339
-0.1
-UNKNOWN
-UNKNOWN
-
-typeguard
-4.3.0
-MIT License
-This is the MIT license: http://www.opensource.org/licenses/mit-license.php
-
-Copyright (c) Alex Gr√∂nholm
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of this
-software and associated documentation files (the "Software"), to deal in the Software
-without restriction, including without limitation the rights to use, copy, modify, merge,
-publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons
-to whom the Software is furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all copies or
-substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
-INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
-PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
-FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
-OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-DEALINGS IN THE SOFTWARE.
-
-
-typing_extensions
-4.12.2
-Python Software Foundation License
-A. HISTORY OF THE SOFTWARE
-==========================
-
-Python was created in the early 1990s by Guido van Rossum at Stichting
-Mathematisch Centrum (CWI, see https://www.cwi.nl) in the Netherlands
-as a successor of a language called ABC.  Guido remains Python's
-principal author, although it includes many contributions from others.
-
-In 1995, Guido continued his work on Python at the Corporation for
-National Research Initiatives (CNRI, see https://www.cnri.reston.va.us)
-in Reston, Virginia where he released several versions of the
-software.
-
-In May 2000, Guido and the Python core development team moved to
-BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
-year, the PythonLabs team moved to Digital Creations, which became
-Zope Corporation.  In 2001, the Python Software Foundation (PSF, see
-https://www.python.org/psf/) was formed, a non-profit organization
-created specifically to own Python-related Intellectual Property.
-Zope Corporation was a sponsoring member of the PSF.
-
-All Python releases are Open Source (see https://opensource.org for
-the Open Source Definition).  Historically, most, but not all, Python
-releases have also been GPL-compatible; the table below summarizes
-the various releases.
-
-    Release         Derived     Year        Owner       GPL-
-                    from                                compatible? (1)
-
-    0.9.0 thru 1.2              1991-1995   CWI         yes
-    1.3 thru 1.5.2  1.2         1995-1999   CNRI        yes
-    1.6             1.5.2       2000        CNRI        no
-    2.0             1.6         2000        BeOpen.com  no
-    1.6.1           1.6         2001        CNRI        yes (2)
-    2.1             2.0+1.6.1   2001        PSF         no
-    2.0.1           2.0+1.6.1   2001        PSF         yes
-    2.1.1           2.1+2.0.1   2001        PSF         yes
-    2.1.2           2.1.1       2002        PSF         yes
-    2.1.3           2.1.2       2002        PSF         yes
-    2.2 and above   2.1.1       2001-now    PSF         yes
-
-Footnotes:
-
-(1) GPL-compatible doesn't mean that we're distributing Python under
-    the GPL.  All Python licenses, unlike the GPL, let you distribute
-    a modified version without making your changes open source.  The
-    GPL-compatible licenses make it possible to combine Python with
-    other software that is released under the GPL; the others don't.
-
-(2) According to Richard Stallman, 1.6.1 is not GPL-compatible,
-    because its license has a choice of law clause.  According to
-    CNRI, however, Stallman's lawyer has told CNRI's lawyer that 1.6.1
-    is "not incompatible" with the GPL.
-
-Thanks to the many outside volunteers who have worked under Guido's
-direction to make these releases possible.
-
-
-B. TERMS AND CONDITIONS FOR ACCESSING OR OTHERWISE USING PYTHON
-===============================================================
-
-Python software and documentation are licensed under the
-Python Software Foundation License Version 2.
-
-Starting with Python 3.8.6, examples, recipes, and other code in
-the documentation are dual licensed under the PSF License Version 2
-and the Zero-Clause BSD license.
-
-Some software incorporated into Python is under different licenses.
-The licenses are listed with code falling under that license.
-
-
-PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
---------------------------------------------
-
-1. This LICENSE AGREEMENT is between the Python Software Foundation
-("PSF"), and the Individual or Organization ("Licensee") accessing and
-otherwise using this software ("Python") in source or binary form and
-its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, PSF hereby
-grants Licensee a nonexclusive, royalty-free, world-wide license to reproduce,
-analyze, test, perform and/or display publicly, prepare derivative works,
-distribute, and otherwise use Python alone or in any derivative version,
-provided, however, that PSF's License Agreement and PSF's notice of copyright,
-i.e., "Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
-2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Python Software Foundation;
-All Rights Reserved" are retained in Python alone or in any derivative version
-prepared by Licensee.
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python.
-
-4. PSF is making Python available to Licensee on an "AS IS"
-basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. Nothing in this License Agreement shall be deemed to create any
-relationship of agency, partnership, or joint venture between PSF and
-Licensee.  This License Agreement does not grant permission to use PSF
-trademarks or trade name in a trademark sense to endorse or promote
-products or services of Licensee, or any third party.
-
-8. By copying, installing or otherwise using Python, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0
--------------------------------------------
-
-BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1
-
-1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
-office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
-Individual or Organization ("Licensee") accessing and otherwise using
-this software in source or binary form and its associated
-documentation ("the Software").
-
-2. Subject to the terms and conditions of this BeOpen Python License
-Agreement, BeOpen hereby grants Licensee a non-exclusive,
-royalty-free, world-wide license to reproduce, analyze, test, perform
-and/or display publicly, prepare derivative works, distribute, and
-otherwise use the Software alone or in any derivative version,
-provided, however, that the BeOpen Python License is retained in the
-Software, alone or in any derivative version prepared by Licensee.
-
-3. BeOpen is making the Software available to Licensee on an "AS IS"
-basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
-SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS
-AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE, OR ANY
-DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-5. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-6. This License Agreement shall be governed by and interpreted in all
-respects by the law of the State of California, excluding conflict of
-law provisions.  Nothing in this License Agreement shall be deemed to
-create any relationship of agency, partnership, or joint venture
-between BeOpen and Licensee.  This License Agreement does not grant
-permission to use BeOpen trademarks or trade names in a trademark
-sense to endorse or promote products or services of Licensee, or any
-third party.  As an exception, the "BeOpen Python" logos available at
-http://www.pythonlabs.com/logos.html may be used according to the
-permissions granted on that web page.
-
-7. By copying, installing or otherwise using the software, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1
----------------------------------------
-
-1. This LICENSE AGREEMENT is between the Corporation for National
-Research Initiatives, having an office at 1895 Preston White Drive,
-Reston, VA 20191 ("CNRI"), and the Individual or Organization
-("Licensee") accessing and otherwise using Python 1.6.1 software in
-source or binary form and its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, CNRI
-hereby grants Licensee a nonexclusive, royalty-free, world-wide
-license to reproduce, analyze, test, perform and/or display publicly,
-prepare derivative works, distribute, and otherwise use Python 1.6.1
-alone or in any derivative version, provided, however, that CNRI's
-License Agreement and CNRI's notice of copyright, i.e., "Copyright (c)
-1995-2001 Corporation for National Research Initiatives; All Rights
-Reserved" are retained in Python 1.6.1 alone or in any derivative
-version prepared by Licensee.  Alternately, in lieu of CNRI's License
-Agreement, Licensee may substitute the following text (omitting the
-quotes): "Python 1.6.1 is made available subject to the terms and
-conditions in CNRI's License Agreement.  This Agreement together with
-Python 1.6.1 may be located on the internet using the following
-unique, persistent identifier (known as a handle): 1895.22/1013.  This
-Agreement may also be obtained from a proxy server on the internet
-using the following URL: http://hdl.handle.net/1895.22/1013".
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python 1.6.1 or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python 1.6.1.
-
-4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
-basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1 WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON 1.6.1,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. This License Agreement shall be governed by the federal
-intellectual property law of the United States, including without
-limitation the federal copyright law, and, to the extent such
-U.S. federal law does not apply, by the law of the Commonwealth of
-Virginia, excluding Virginia's conflict of law provisions.
-Notwithstanding the foregoing, with regard to derivative works based
-on Python 1.6.1 that incorporate non-separable material that was
-previously distributed under the GNU General Public License (GPL), the
-law of the Commonwealth of Virginia shall govern this License
-Agreement only as to issues arising under or with respect to
-Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in this
-License Agreement shall be deemed to create any relationship of
-agency, partnership, or joint venture between CNRI and Licensee.  This
-License Agreement does not grant permission to use CNRI trademarks or
-trade name in a trademark sense to endorse or promote products or
-services of Licensee, or any third party.
-
-8. By clicking on the "ACCEPT" button where indicated, or by copying,
-installing or otherwise using Python 1.6.1, Licensee agrees to be
-bound by the terms and conditions of this License Agreement.
-
-        ACCEPT
-
-
-CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2
---------------------------------------------------
-
-Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
-The Netherlands.  All rights reserved.
-
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose and without fee is hereby granted,
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in
-supporting documentation, and that the name of Stichting Mathematisch
-Centrum or CWI not be used in advertising or publicity pertaining to
-distribution of the software without specific, written prior
-permission.
-
-STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO
-THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
-FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE
-FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
-OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON DOCUMENTATION
-----------------------------------------------------------------------
-
-Permission to use, copy, modify, and/or distribute this software for any
-purpose with or without fee is hereby granted.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
-REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
-AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
-INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
-LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
-OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
-PERFORMANCE OF THIS SOFTWARE.
-
-
-typing_extensions
-4.12.2
-Python Software Foundation License
-A. HISTORY OF THE SOFTWARE
-==========================
-
-Python was created in the early 1990s by Guido van Rossum at Stichting
-Mathematisch Centrum (CWI, see https://www.cwi.nl) in the Netherlands
-as a successor of a language called ABC.  Guido remains Python's
-principal author, although it includes many contributions from others.
-
-In 1995, Guido continued his work on Python at the Corporation for
-National Research Initiatives (CNRI, see https://www.cnri.reston.va.us)
-in Reston, Virginia where he released several versions of the
-software.
-
-In May 2000, Guido and the Python core development team moved to
-BeOpen.com to form the BeOpen PythonLabs team.  In October of the same
-year, the PythonLabs team moved to Digital Creations, which became
-Zope Corporation.  In 2001, the Python Software Foundation (PSF, see
-https://www.python.org/psf/) was formed, a non-profit organization
-created specifically to own Python-related Intellectual Property.
-Zope Corporation was a sponsoring member of the PSF.
-
-All Python releases are Open Source (see https://opensource.org for
-the Open Source Definition).  Historically, most, but not all, Python
-releases have also been GPL-compatible; the table below summarizes
-the various releases.
-
-    Release         Derived     Year        Owner       GPL-
-                    from                                compatible? (1)
-
-    0.9.0 thru 1.2              1991-1995   CWI         yes
-    1.3 thru 1.5.2  1.2         1995-1999   CNRI        yes
-    1.6             1.5.2       2000        CNRI        no
-    2.0             1.6         2000        BeOpen.com  no
-    1.6.1           1.6         2001        CNRI        yes (2)
-    2.1             2.0+1.6.1   2001        PSF         no
-    2.0.1           2.0+1.6.1   2001        PSF         yes
-    2.1.1           2.1+2.0.1   2001        PSF         yes
-    2.1.2           2.1.1       2002        PSF         yes
-    2.1.3           2.1.2       2002        PSF         yes
-    2.2 and above   2.1.1       2001-now    PSF         yes
-
-Footnotes:
-
-(1) GPL-compatible doesn't mean that we're distributing Python under
-    the GPL.  All Python licenses, unlike the GPL, let you distribute
-    a modified version without making your changes open source.  The
-    GPL-compatible licenses make it possible to combine Python with
-    other software that is released under the GPL; the others don't.
-
-(2) According to Richard Stallman, 1.6.1 is not GPL-compatible,
-    because its license has a choice of law clause.  According to
-    CNRI, however, Stallman's lawyer has told CNRI's lawyer that 1.6.1
-    is "not incompatible" with the GPL.
-
-Thanks to the many outside volunteers who have worked under Guido's
-direction to make these releases possible.
-
-
-B. TERMS AND CONDITIONS FOR ACCESSING OR OTHERWISE USING PYTHON
-===============================================================
-
-Python software and documentation are licensed under the
-Python Software Foundation License Version 2.
-
-Starting with Python 3.8.6, examples, recipes, and other code in
-the documentation are dual licensed under the PSF License Version 2
-and the Zero-Clause BSD license.
-
-Some software incorporated into Python is under different licenses.
-The licenses are listed with code falling under that license.
-
-
-PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2
---------------------------------------------
-
-1. This LICENSE AGREEMENT is between the Python Software Foundation
-("PSF"), and the Individual or Organization ("Licensee") accessing and
-otherwise using this software ("Python") in source or binary form and
-its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, PSF hereby
-grants Licensee a nonexclusive, royalty-free, world-wide license to reproduce,
-analyze, test, perform and/or display publicly, prepare derivative works,
-distribute, and otherwise use Python alone or in any derivative version,
-provided, however, that PSF's License Agreement and PSF's notice of copyright,
-i.e., "Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,
-2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023 Python Software Foundation;
-All Rights Reserved" are retained in Python alone or in any derivative version
-prepared by Licensee.
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python.
-
-4. PSF is making Python available to Licensee on an "AS IS"
-basis.  PSF MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, PSF MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. Nothing in this License Agreement shall be deemed to create any
-relationship of agency, partnership, or joint venture between PSF and
-Licensee.  This License Agreement does not grant permission to use PSF
-trademarks or trade name in a trademark sense to endorse or promote
-products or services of Licensee, or any third party.
-
-8. By copying, installing or otherwise using Python, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0
--------------------------------------------
-
-BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1
-
-1. This LICENSE AGREEMENT is between BeOpen.com ("BeOpen"), having an
-office at 160 Saratoga Avenue, Santa Clara, CA 95051, and the
-Individual or Organization ("Licensee") accessing and otherwise using
-this software in source or binary form and its associated
-documentation ("the Software").
-
-2. Subject to the terms and conditions of this BeOpen Python License
-Agreement, BeOpen hereby grants Licensee a non-exclusive,
-royalty-free, world-wide license to reproduce, analyze, test, perform
-and/or display publicly, prepare derivative works, distribute, and
-otherwise use the Software alone or in any derivative version,
-provided, however, that the BeOpen Python License is retained in the
-Software, alone or in any derivative version prepared by Licensee.
-
-3. BeOpen is making the Software available to Licensee on an "AS IS"
-basis.  BEOPEN MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, BEOPEN MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-4. BEOPEN SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF THE
-SOFTWARE FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS
-AS A RESULT OF USING, MODIFYING OR DISTRIBUTING THE SOFTWARE, OR ANY
-DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-5. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-6. This License Agreement shall be governed by and interpreted in all
-respects by the law of the State of California, excluding conflict of
-law provisions.  Nothing in this License Agreement shall be deemed to
-create any relationship of agency, partnership, or joint venture
-between BeOpen and Licensee.  This License Agreement does not grant
-permission to use BeOpen trademarks or trade names in a trademark
-sense to endorse or promote products or services of Licensee, or any
-third party.  As an exception, the "BeOpen Python" logos available at
-http://www.pythonlabs.com/logos.html may be used according to the
-permissions granted on that web page.
-
-7. By copying, installing or otherwise using the software, Licensee
-agrees to be bound by the terms and conditions of this License
-Agreement.
-
-
-CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1
----------------------------------------
-
-1. This LICENSE AGREEMENT is between the Corporation for National
-Research Initiatives, having an office at 1895 Preston White Drive,
-Reston, VA 20191 ("CNRI"), and the Individual or Organization
-("Licensee") accessing and otherwise using Python 1.6.1 software in
-source or binary form and its associated documentation.
-
-2. Subject to the terms and conditions of this License Agreement, CNRI
-hereby grants Licensee a nonexclusive, royalty-free, world-wide
-license to reproduce, analyze, test, perform and/or display publicly,
-prepare derivative works, distribute, and otherwise use Python 1.6.1
-alone or in any derivative version, provided, however, that CNRI's
-License Agreement and CNRI's notice of copyright, i.e., "Copyright (c)
-1995-2001 Corporation for National Research Initiatives; All Rights
-Reserved" are retained in Python 1.6.1 alone or in any derivative
-version prepared by Licensee.  Alternately, in lieu of CNRI's License
-Agreement, Licensee may substitute the following text (omitting the
-quotes): "Python 1.6.1 is made available subject to the terms and
-conditions in CNRI's License Agreement.  This Agreement together with
-Python 1.6.1 may be located on the internet using the following
-unique, persistent identifier (known as a handle): 1895.22/1013.  This
-Agreement may also be obtained from a proxy server on the internet
-using the following URL: http://hdl.handle.net/1895.22/1013".
-
-3. In the event Licensee prepares a derivative work that is based on
-or incorporates Python 1.6.1 or any part thereof, and wants to make
-the derivative work available to others as provided herein, then
-Licensee hereby agrees to include in any such work a brief summary of
-the changes made to Python 1.6.1.
-
-4. CNRI is making Python 1.6.1 available to Licensee on an "AS IS"
-basis.  CNRI MAKES NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR
-IMPLIED.  BY WAY OF EXAMPLE, BUT NOT LIMITATION, CNRI MAKES NO AND
-DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS
-FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1 WILL NOT
-INFRINGE ANY THIRD PARTY RIGHTS.
-
-5. CNRI SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON
-1.6.1 FOR ANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS
-A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING PYTHON 1.6.1,
-OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY THEREOF.
-
-6. This License Agreement will automatically terminate upon a material
-breach of its terms and conditions.
-
-7. This License Agreement shall be governed by the federal
-intellectual property law of the United States, including without
-limitation the federal copyright law, and, to the extent such
-U.S. federal law does not apply, by the law of the Commonwealth of
-Virginia, excluding Virginia's conflict of law provisions.
-Notwithstanding the foregoing, with regard to derivative works based
-on Python 1.6.1 that incorporate non-separable material that was
-previously distributed under the GNU General Public License (GPL), the
-law of the Commonwealth of Virginia shall govern this License
-Agreement only as to issues arising under or with respect to
-Paragraphs 4, 5, and 7 of this License Agreement.  Nothing in this
-License Agreement shall be deemed to create any relationship of
-agency, partnership, or joint venture between CNRI and Licensee.  This
-License Agreement does not grant permission to use CNRI trademarks or
-trade name in a trademark sense to endorse or promote products or
-services of Licensee, or any third party.
-
-8. By clicking on the "ACCEPT" button where indicated, or by copying,
-installing or otherwise using Python 1.6.1, Licensee agrees to be
-bound by the terms and conditions of this License Agreement.
-
-        ACCEPT
-
-
-CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2
---------------------------------------------------
-
-Copyright (c) 1991 - 1995, Stichting Mathematisch Centrum Amsterdam,
-The Netherlands.  All rights reserved.
-
-Permission to use, copy, modify, and distribute this software and its
-documentation for any purpose and without fee is hereby granted,
-provided that the above copyright notice appear in all copies and that
-both that copyright notice and this permission notice appear in
-supporting documentation, and that the name of Stichting Mathematisch
-Centrum or CWI not be used in advertising or publicity pertaining to
-distribution of the software without specific, written prior
-permission.
-
-STICHTING MATHEMATISCH CENTRUM DISCLAIMS ALL WARRANTIES WITH REGARD TO
-THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
-FITNESS, IN NO EVENT SHALL STICHTING MATHEMATISCH CENTRUM BE LIABLE
-FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
-WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
-ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
-OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-
-ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON DOCUMENTATION
-----------------------------------------------------------------------
-
-Permission to use, copy, modify, and/or distribute this software for any
-purpose with or without fee is hereby granted.
-
-THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
-REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
-AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
-INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
-LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
-OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
-PERFORMANCE OF THIS SOFTWARE.
-
-
-tzcron
-1.0.0
-Apache Software License
-UNKNOWN
-
-tzdata
-2024.1
-Apache Software License
-Apache Software License 2.0
-
-Copyright (c) 2020, Paul Ganssle (Google)
-
-Licensed under the Apache License, Version 2.0 (the "License");
-you may not use this file except in compliance with the License.
-You may obtain a copy of the License at
-
-http://www.apache.org/licenses/LICENSE-2.0
-
-Unless required by applicable law or agreed to in writing, software
-distributed under the License is distributed on an "AS IS" BASIS,
-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-See the License for the specific language governing permissions and
-limitations under the License.
-
-
-tzlocal
-5.2
-MIT License
-Copyright 2011-2017 Lennart Regebro
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-uritemplate
-4.1.1
-Apache Software License; BSD License
-This software is made available under the terms of *either* of the licenses
-found in LICENSE.APACHE or LICENSE.BSD. Contributions to uritemplate are
-made under the terms of *both* these licenses.
-
-
-urllib3
-2.2.2
-MIT License
-MIT License
-
-Copyright (c) 2008-2020 Andrey Petrov and contributors.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-uvloop
-0.18.0
-Apache Software License; MIT License
-Copyright (C) 2016-present the uvloop authors and contributors.
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright (c) 2015-present MagicStack Inc.  http://magic.io
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-wcmatch
-8.4.1
-MIT License
-MIT License
-
-Copyright (c) 2018 - 2022 Isaac Muse
-
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to deal
-in the Software without restriction, including without limitation the rights
-to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
-copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all
-copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
-OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
-SOFTWARE.
-
-
-wrapt
-1.16.0
-BSD License
-Copyright (c) 2013-2023, Graham Dumpleton
-All rights reserved.
-
-Redistribution and use in source and binary forms, with or without
-modification, are permitted provided that the following conditions are met:
-
-* Redistributions of source code must retain the above copyright notice, this
-  list of conditions and the following disclaimer.
-
-* Redistributions in binary form must reproduce the above copyright notice,
-  this list of conditions and the following disclaimer in the documentation
-  and/or other materials provided with the distribution.
-
-THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
-AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
-IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
-ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
-LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
-CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
-SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
-INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
-CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
-ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
-POSSIBILITY OF SUCH DAMAGE.
-
-
-xmltodict
-0.13.0
-MIT License
-Copyright (C) 2012 Martin Blech and individual contributors.
-
-Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
-
-
-yarl
-1.9.4
-Apache Software License
-
-                                 Apache License
-                           Version 2.0, January 2004
-                        http://www.apache.org/licenses/
-
-   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION
-
-   1. Definitions.
-
-      "License" shall mean the terms and conditions for use, reproduction,
-      and distribution as defined by Sections 1 through 9 of this document.
-
-      "Licensor" shall mean the copyright owner or entity authorized by
-      the copyright owner that is granting the License.
-
-      "Legal Entity" shall mean the union of the acting entity and all
-      other entities that control, are controlled by, or are under common
-      control with that entity. For the purposes of this definition,
-      "control" means (i) the power, direct or indirect, to cause the
-      direction or management of such entity, whether by contract or
-      otherwise, or (ii) ownership of fifty percent (50%) or more of the
-      outstanding shares, or (iii) beneficial ownership of such entity.
-
-      "You" (or "Your") shall mean an individual or Legal Entity
-      exercising permissions granted by this License.
-
-      "Source" form shall mean the preferred form for making modifications,
-      including but not limited to software source code, documentation
-      source, and configuration files.
-
-      "Object" form shall mean any form resulting from mechanical
-      transformation or translation of a Source form, including but
-      not limited to compiled object code, generated documentation,
-      and conversions to other media types.
-
-      "Work" shall mean the work of authorship, whether in Source or
-      Object form, made available under the License, as indicated by a
-      copyright notice that is included in or attached to the work
-      (an example is provided in the Appendix below).
-
-      "Derivative Works" shall mean any work, whether in Source or Object
-      form, that is based on (or derived from) the Work and for which the
-      editorial revisions, annotations, elaborations, or other modifications
-      represent, as a whole, an original work of authorship. For the purposes
-      of this License, Derivative Works shall not include works that remain
-      separable from, or merely link (or bind by name) to the interfaces of,
-      the Work and Derivative Works thereof.
-
-      "Contribution" shall mean any work of authorship, including
-      the original version of the Work and any modifications or additions
-      to that Work or Derivative Works thereof, that is intentionally
-      submitted to Licensor for inclusion in the Work by the copyright owner
-      or by an individual or Legal Entity authorized to submit on behalf of
-      the copyright owner. For the purposes of this definition, "submitted"
-      means any form of electronic, verbal, or written communication sent
-      to the Licensor or its representatives, including but not limited to
-      communication on electronic mailing lists, source code control systems,
-      and issue tracking systems that are managed by, or on behalf of, the
-      Licensor for the purpose of discussing and improving the Work, but
-      excluding communication that is conspicuously marked or otherwise
-      designated in writing by the copyright owner as "Not a Contribution."
-
-      "Contributor" shall mean Licensor and any individual or Legal Entity
-      on behalf of whom a Contribution has been received by Licensor and
-      subsequently incorporated within the Work.
-
-   2. Grant of Copyright License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      copyright license to reproduce, prepare Derivative Works of,
-      publicly display, publicly perform, sublicense, and distribute the
-      Work and such Derivative Works in Source or Object form.
-
-   3. Grant of Patent License. Subject to the terms and conditions of
-      this License, each Contributor hereby grants to You a perpetual,
-      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
-      (except as stated in this section) patent license to make, have made,
-      use, offer to sell, sell, import, and otherwise transfer the Work,
-      where such license applies only to those patent claims licensable
-      by such Contributor that are necessarily infringed by their
-      Contribution(s) alone or by combination of their Contribution(s)
-      with the Work to which such Contribution(s) was submitted. If You
-      institute patent litigation against any entity (including a
-      cross-claim or counterclaim in a lawsuit) alleging that the Work
-      or a Contribution incorporated within the Work constitutes direct
-      or contributory patent infringement, then any patent licenses
-      granted to You under this License for that Work shall terminate
-      as of the date such litigation is filed.
-
-   4. Redistribution. You may reproduce and distribute copies of the
-      Work or Derivative Works thereof in any medium, with or without
-      modifications, and in Source or Object form, provided that You
-      meet the following conditions:
-
-      (a) You must give any other recipients of the Work or
-          Derivative Works a copy of this License; and
-
-      (b) You must cause any modified files to carry prominent notices
-          stating that You changed the files; and
-
-      (c) You must retain, in the Source form of any Derivative Works
-          that You distribute, all copyright, patent, trademark, and
-          attribution notices from the Source form of the Work,
-          excluding those notices that do not pertain to any part of
-          the Derivative Works; and
-
-      (d) If the Work includes a "NOTICE" text file as part of its
-          distribution, then any Derivative Works that You distribute must
-          include a readable copy of the attribution notices contained
-          within such NOTICE file, excluding those notices that do not
-          pertain to any part of the Derivative Works, in at least one
-          of the following places: within a NOTICE text file distributed
-          as part of the Derivative Works; within the Source form or
-          documentation, if provided along with the Derivative Works; or,
-          within a display generated by the Derivative Works, if and
-          wherever such third-party notices normally appear. The contents
-          of the NOTICE file are for informational purposes only and
-          do not modify the License. You may add Your own attribution
-          notices within Derivative Works that You distribute, alongside
-          or as an addendum to the NOTICE text from the Work, provided
-          that such additional attribution notices cannot be construed
-          as modifying the License.
-
-      You may add Your own copyright statement to Your modifications and
-      may provide additional or different license terms and conditions
-      for use, reproduction, or distribution of Your modifications, or
-      for any such Derivative Works as a whole, provided Your use,
-      reproduction, and distribution of the Work otherwise complies with
-      the conditions stated in this License.
-
-   5. Submission of Contributions. Unless You explicitly state otherwise,
-      any Contribution intentionally submitted for inclusion in the Work
-      by You to the Licensor shall be under the terms and conditions of
-      this License, without any additional terms or conditions.
-      Notwithstanding the above, nothing herein shall supersede or modify
-      the terms of any separate license agreement you may have executed
-      with Licensor regarding such Contributions.
-
-   6. Trademarks. This License does not grant permission to use the trade
-      names, trademarks, service marks, or product names of the Licensor,
-      except as required for reasonable and customary use in describing the
-      origin of the Work and reproducing the content of the NOTICE file.
-
-   7. Disclaimer of Warranty. Unless required by applicable law or
-      agreed to in writing, Licensor provides the Work (and each
-      Contributor provides its Contributions) on an "AS IS" BASIS,
-      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
-      implied, including, without limitation, any warranties or conditions
-      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
-      PARTICULAR PURPOSE. You are solely responsible for determining the
-      appropriateness of using or redistributing the Work and assume any
-      risks associated with Your exercise of permissions under this License.
-
-   8. Limitation of Liability. In no event and under no legal theory,
-      whether in tort (including negligence), contract, or otherwise,
-      unless required by applicable law (such as deliberate and grossly
-      negligent acts) or agreed to in writing, shall any Contributor be
-      liable to You for damages, including any direct, indirect, special,
-      incidental, or consequential damages of any character arising as a
-      result of this License or out of the use or inability to use the
-      Work (including but not limited to damages for loss of goodwill,
-      work stoppage, computer failure or malfunction, or any and all
-      other commercial damages or losses), even if such Contributor
-      has been advised of the possibility of such damages.
-
-   9. Accepting Warranty or Additional Liability. While redistributing
-      the Work or Derivative Works thereof, You may choose to offer,
-      and charge a fee for, acceptance of support, warranty, indemnity,
-      or other liability obligations and/or rights consistent with this
-      License. However, in accepting such obligations, You may act only
-      on Your own behalf and on Your sole responsibility, not on behalf
-      of any other Contributor, and only if You agree to indemnify,
-      defend, and hold each Contributor harmless for any liability
-      incurred by, or claims asserted against, such Contributor by reason
-      of your accepting any such warranty or additional liability.
-
-   END OF TERMS AND CONDITIONS
-
-   APPENDIX: How to apply the Apache License to your work.
-
-      To apply the Apache License to your work, attach the following
-      boilerplate notice, with the fields enclosed by brackets "[]"
-      replaced with your own identifying information. (Don't include
-      the brackets!)  The text should be enclosed in the appropriate
-      comment syntax for the file format. We also recommend that a
-      file or class name and description of purpose be included on the
-      same "printed page" as the copyright notice for easier
-      identification within third-party archives.
-
-   Copyright [yyyy] [name of copyright owner]
-
-   Licensed under the Apache License, Version 2.0 (the "License");
-   you may not use this file except in compliance with the License.
-   You may obtain a copy of the License at
-
-       http://www.apache.org/licenses/LICENSE-2.0
-
-   Unless required by applicable law or agreed to in writing, software
-   distributed under the License is distributed on an "AS IS" BASIS,
-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
-   See the License for the specific language governing permissions and
-   limitations under the License.
-
-
-zipp
-3.19.2
-MIT License
-Permission is hereby granted, free of charge, to any person obtaining a copy
-of this software and associated documentation files (the "Software"), to
-deal in the Software without restriction, including without limitation the
-rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
-sell copies of the Software, and to permit persons to whom the Software is
-furnished to do so, subject to the following conditions:
-
-The above copyright notice and this permission notice shall be included in
-all copies or substantial portions of the Software.
-
-THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
-AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
-IN THE SOFTWARE.
-
-
+Elastic Python connectors
+Copyright 2022 Elasticsearch B.V.
 
+The software uses 3rd-party library certifi, transitively, which is under Mozilla Public License 2.0 (MPL 2.0). The source code to this library is https://github.com/certifi/python-certifi.
\ No newline at end of file
diff --git a/catalog-info.yaml b/catalog-info.yaml
index 6d050e76..f74ec75c 100644
--- a/catalog-info.yaml
+++ b/catalog-info.yaml
@@ -48,14 +48,8 @@ spec:
       branch_configuration: "main"
       pipeline_file: ".buildkite/pipeline.yml"
       repository: "elastic/connectors"
-      schedules:
-        Daily main:
-          branch: main
-          cronline: '@daily'
-          message: "Builds, tests, and pushes daily `main` DRA artifacts"
       provider_settings:
         skip_pull_request_builds_for_existing_commits: false
-        build_pull_request_labels_changed: true
       teams:
         everyone:
           access_level: "READ_ONLY"
@@ -93,14 +87,14 @@ spec:
         trigger_mode: "none"
       repository: "elastic/connectors"
       schedules:
+        Daily 8_13:
+          branch: '8.13'
+          cronline: '@daily'
+          message: "Runs daily `8.13` e2e test"
         Daily 8_14:
           branch: '8.14'
           cronline: '@daily'
           message: "Runs daily `8.14` e2e test"
-        Daily 8_15:
-          branch: '8.15'
-          cronline: '@daily'
-          message: "Runs daily `8.15` e2e test"
         Daily main:
           branch: main
           cronline: '@daily'
@@ -139,14 +133,14 @@ spec:
         trigger_mode: "none"
       repository: "elastic/connectors"
       schedules:
+        Daily 8_13:
+          branch: '8.13'
+          cronline: '@daily'
+          message: "Runs daily `8.13` e2e aarch64 test"
         Daily 8_14:
           branch: '8.14'
           cronline: '@daily'
           message: "Runs daily `8.14` e2e aarch64 test"
-        Daily 8_15:
-          branch: '8.15'
-          cronline: '@daily'
-          message: "Runs daily `8.15` e2e aarch64 test"
         Daily main:
           branch: main
           cronline: '@daily'
@@ -157,11 +151,6 @@ spec:
         ingestion-team: {}
         search-productivity-team: {}
 
-########
-# Nightly Docker SNAPSHOT image build and publish
-#  This is in place to release versions < 8.16
-#  Once we are no longer maintaining versions that old, this can be removed
-########
 ---
 apiVersion: "backstage.io/v1alpha1"
 kind: "Resource"
@@ -190,10 +179,18 @@ spec:
         trigger_mode: "none"
       repository: "elastic/connectors"
       schedules:
-        Daily 8_15:
-          branch: '8.15'
+        Daily 8_13:
+          branch: '8.13'
+          cronline: '@daily'
+          message: "Builds and pushes daily `8.13` docker images"
+        Daily 8_14:
+          branch: '8.14'
+          cronline: '@daily'
+          message: "Builds and pushes daily `8.14` docker images"
+        Daily main:
+          branch: main
           cronline: '@daily'
-          message: "Builds and pushes daily `8.15` docker images"
+          message: "Builds and pushes daily `main` docker images"
       teams:
         everyone:
           access_level: "READ_ONLY"
@@ -202,8 +199,6 @@ spec:
 
 ########
 # Docker image build and publish - manual release
-#  This is in place to release versions < 8.16
-#  Once we are no longer maintaining versions that old, this can be removed
 ########
 ---
 apiVersion: "backstage.io/v1alpha1"
diff --git a/connectors/VERSION b/connectors/VERSION
index 894aa0bc..23bd319d 100644
--- a/connectors/VERSION
+++ b/connectors/VERSION
@@ -1 +1 @@
-8.16.0
+8.15.1.0
diff --git a/connectors/agent/README.md b/connectors/agent/README.md
deleted file mode 100644
index e69de29b..00000000
diff --git a/connectors/agent/cli.py b/connectors/agent/cli.py
deleted file mode 100644
index d3e10664..00000000
--- a/connectors/agent/cli.py
+++ /dev/null
@@ -1,42 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-import asyncio
-import functools
-import signal
-
-from elastic_agent_client.util.async_tools import (
-    sleeps_for_retryable,
-)
-from elastic_agent_client.util.logger import logger
-
-from connectors.agent.component import ConnectorsAgentComponent
-
-
-def main(args=None):
-    """Script entry point into running Connectors Service on Agent.
-
-    It initialises an event loop, creates a component and runs the component.
-    Additionally, signals are handled for graceful termination of the component.
-    """
-    loop = asyncio.get_event_loop()
-    logger.info("Running agent")
-    component = ConnectorsAgentComponent()
-
-    def _shutdown(signal_name):
-        sleeps_for_retryable.cancel(signal_name)
-        component.stop(signal_name)
-
-    for sig in (signal.SIGINT, signal.SIGTERM):
-        loop.add_signal_handler(sig, functools.partial(_shutdown, sig.name))
-
-    return loop.run_until_complete(component.run())
-
-
-if __name__ == "__main__":
-    try:
-        main()
-    finally:
-        logger.info("Bye")
diff --git a/connectors/agent/component.py b/connectors/agent/component.py
deleted file mode 100644
index 4d5d7e0e..00000000
--- a/connectors/agent/component.py
+++ /dev/null
@@ -1,74 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-import sys
-
-from elastic_agent_client.client import V2Options, VersionInfo
-from elastic_agent_client.reader import new_v2_from_reader
-from elastic_agent_client.service.actions import ActionsService
-from elastic_agent_client.service.checkin import CheckinV2Service
-
-from connectors.agent.config import ConnectorsAgentConfigurationWrapper
-from connectors.agent.protocol import ConnectorActionHandler, ConnectorCheckinHandler
-from connectors.agent.service_manager import ConnectorServiceManager
-from connectors.services.base import MultiService
-
-CONNECTOR_SERVICE = "connector-service"
-
-
-class ConnectorsAgentComponent:
-    """Entry point into running connectors service in Agent.
-
-    This class provides a simple abstraction over Agent components and Connectors Service manager.
-
-    It instantiates everything needed to read from Agent protocol, creates a wrapper around Connectors Service
-    and provides applied interface to be able to run it in 2 simple methods: run and stop.
-    """
-
-    def __init__(self):
-        """Inits the class.
-
-        Init should be safe to call without expectations of side effects (connections to Agent, blocking or anything).
-        """
-        self.ver = VersionInfo(
-            name=CONNECTOR_SERVICE, meta={"input": CONNECTOR_SERVICE}
-        )
-        self.opts = V2Options()
-        self.buffer = sys.stdin.buffer
-        self.config_wrapper = ConnectorsAgentConfigurationWrapper()
-
-    async def run(self):
-        """Start reading from Agent protocol and run Connectors Service with settings reported by agent.
-
-        This method can block if it's not running from Agent - it expects the client to be able to read messages
-        on initialisation. These messages are a handshake and it's a sync handshake.
-        If no messages are sent, this method can and will hang.
-
-        However, if ran under agent, this method will read configuration from Agent and attempt to start an
-        instance of Connectors Service with this configuration.
-
-        Additionally services for handling Check-in and Actions will be started to implement the protocol correctly.
-        """
-        client = new_v2_from_reader(self.buffer, self.ver, self.opts)
-        action_handler = ConnectorActionHandler()
-        self.connector_service_manager = ConnectorServiceManager(self.config_wrapper)
-        checkin_handler = ConnectorCheckinHandler(
-            client, self.config_wrapper, self.connector_service_manager
-        )
-
-        self.multi_service = MultiService(
-            CheckinV2Service(client, checkin_handler),
-            ActionsService(client, action_handler),
-            self.connector_service_manager,
-        )
-
-        await self.multi_service.run()
-
-    def stop(self, sig):
-        """Shutdown everything running in the component.
-
-        Attempts to gracefully shutdown the services that are running under the component.
-        """
-        self.multi_service.shutdown(sig)
diff --git a/connectors/agent/config.py b/connectors/agent/config.py
deleted file mode 100644
index da7698e3..00000000
--- a/connectors/agent/config.py
+++ /dev/null
@@ -1,110 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-from connectors.config import add_defaults
-
-
-class ConnectorsAgentConfigurationWrapper:
-    """A wrapper that facilitates passing configuration from Agent to Connectors Service.
-
-    This class is responsible for:
-    - Storing in-memory configuration of Connectors Service running on Agent
-    - Transforming configuration reported by Agent to valid Connectors Service configuration
-    - Indicating that configuration has changed so that the user of the class can trigger the restart
-    """
-
-    def __init__(self):
-        """Inits the class.
-
-        There's default config that allows us to run connectors natively (see _force_allow_native flag),
-        when final configuration is reported these defaults will be merged with defaults from Connectors
-        Service config and specific config coming from Agent.
-        """
-        self._default_config = {
-            "_force_allow_native": True,
-            "native_service_types": [
-                "azure_blob_storage",
-                "box",
-                "confluence",
-                "dropbox",
-                "github",
-                "gmail",
-                "google_cloud_storage",
-                "google_drive",
-                "jira",
-                "mongodb",
-                "mssql",
-                "mysql",
-                "notion",
-                "onedrive",
-                "oracle",
-                "outlook",
-                "network_drive",
-                "postgresql",
-                "s3",
-                "salesforce",
-                "servicenow",
-                "sharepoint_online",
-                "slack",
-                "microsoft_teams",
-                "zoom",
-            ],
-        }
-
-        self.specific_config = {}
-
-    def try_update(self, source):
-        """Try update the configuration and see if it changed.
-
-        This method takes the check-in event coming from Agent and checks if config needs an update.
-
-        If update is needed, configuration is updated and method returns True. If no update is needed
-        the method returns False.
-        """
-
-        # TODO: find a good link to what this object is.
-        has_hosts = source.fields.get("hosts")
-        has_api_key = source.fields.get("api_key")
-        has_basic_auth = source.fields.get("username") and source.fields.get("password")
-        if has_hosts and (has_api_key or has_basic_auth):
-            es_creds = {
-                "host": source["hosts"][0],
-            }
-
-            if source.fields.get("api_key"):
-                es_creds["api_key"] = source["api_key"]
-            elif source.fields.get("username") and source.fields.get("password"):
-                es_creds["username"] = source["username"]
-                es_creds["password"] = source["password"]
-            else:
-                msg = "Invalid Elasticsearch credentials"
-                raise ValueError(msg)
-
-            new_config = {
-                "elasticsearch": es_creds,
-            }
-            self.specific_config = new_config
-            return True
-
-        return False
-
-    def get(self):
-        """Get current Connectors Service configuration.
-
-        This method combines three configs with higher ones taking precedence:
-        - Config reported from Agent
-        - Default config stored in this class
-        - Default config of Connectors Service
-
-        Resulting config should be sufficient to run Connectors Service with.
-        """
-        # First take "default config"
-        config = self._default_config.copy()
-        # Then override with what we get from Agent
-        config.update(self.specific_config)
-        # Then merge with default connectors config
-        configuration = dict(add_defaults(config))
-
-        return configuration
diff --git a/connectors/agent/protocol.py b/connectors/agent/protocol.py
deleted file mode 100644
index b45a4dc1..00000000
--- a/connectors/agent/protocol.py
+++ /dev/null
@@ -1,77 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-from elastic_agent_client.generated import elastic_agent_client_pb2 as proto
-from elastic_agent_client.handler.action import BaseActionHandler
-from elastic_agent_client.handler.checkin import BaseCheckinHandler
-from elastic_agent_client.util.logger import logger
-
-
-class ConnectorActionHandler(BaseActionHandler):
-    """Class handling Agent actions.
-
-    As there are no actions that we can respond to, we don't actually do anything here.
-    """
-
-    async def handle_action(self, action: proto.ActionRequest):
-        """Implementation of BaseActionHandler.handle_action
-
-        Right now does nothing as Connectors Service has no actions to respond to.
-        """
-        msg = (
-            f"This connector component can't handle action requests. Received: {action}"
-        )
-        raise NotImplementedError(msg)
-
-
-class ConnectorCheckinHandler(BaseCheckinHandler):
-    """Class handling to Agent check-in events.
-
-    Agent sends check-in events from time to time that might contain
-    information that's needed to run Connectors Service.
-
-    This class reads the events, sees if there's a reported change to connector-specific settings,
-    tries to update the configuration and, if the configuration is updated, restarts the Connectors Service.
-    """
-
-    def __init__(self, client, agent_connectors_config_wrapper, service_manager):
-        """Inits the class.
-
-        Initing this class should not produce side-effects.
-        """
-        super().__init__(client)
-        self.agent_connectors_config_wrapper = agent_connectors_config_wrapper
-        self.service_manager = service_manager
-
-    async def apply_from_client(self):
-        """Implementation of BaseCheckinHandler.apply_from_client
-
-        This method is called by the Agent Protocol handlers when there's a check-in event
-        coming from Agent. This class reads the event and runs business logic based on the
-        content of the event.
-
-        If this class blocks for too long, the component will mark the agent as failed:
-        agent expects the components to respond within 30 seconds.
-        See comment in https://github.com/elastic/elastic-agent-client/blob/main/elastic-agent-client.proto#L29
-        """
-        logger.info("There's new information for the components/units!")
-        if self.client.units:
-            logger.debug("Client reported units")
-            outputs = [
-                unit
-                for unit in self.client.units
-                if unit.unit_type == proto.UnitType.OUTPUT
-            ]
-
-            if len(outputs) > 0 and outputs[0].config:
-                logger.debug("Outputs were found")
-                source = outputs[0].config.source
-
-                changed = self.agent_connectors_config_wrapper.try_update(source)
-                if changed:
-                    logger.info("Updating connector service manager config")
-                    self.service_manager.restart()
-                else:
-                    logger.debug("No changes to connectors config")
diff --git a/connectors/agent/service_manager.py b/connectors/agent/service_manager.py
deleted file mode 100644
index a9e59e11..00000000
--- a/connectors/agent/service_manager.py
+++ /dev/null
@@ -1,96 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-from connectors.logger import DocumentLogger
-from connectors.services.base import (
-    ServiceAlreadyRunningError,
-    get_services,
-)
-from connectors.utils import CancellableSleeps
-
-
-class ConnectorServiceManager:
-    """Class responsible for properly configuring and running Connectors Service in Elastic Agent
-
-    ConnectorServiceManager is a middle man between Elastic Agent and ConnectorsService.
-
-    This class is taking care of starting Connectors Service subservices with correct configuration.
-    If configuration changes, as reported by Agent, then this Manager class gracefully shuts down the
-    subservices and starts them again with new configuration.
-
-    """
-
-    name = "connector-service-manager"
-
-    def __init__(self, configuration):
-        """Inits ConnectorServiceManager with shared ConnectorsAgentConfigurationWrapper.
-
-        This service is supposed to be ran once, and after it's stopped or finished running it's not
-        supposed to be started again.
-
-        There is nothing enforcing it, but expect problems if that happens.
-        """
-        service_name = self.__class__.name
-        self._logger = DocumentLogger(
-            f"[{service_name}]", {"service_name": service_name}
-        )
-        self._agent_config = configuration
-        self._multi_service = None
-        self._running = False
-        self._sleeps = CancellableSleeps()
-
-    async def run(self):
-        """Starts the running loop of the service.
-
-        Once started, the service attempts to run all needed connector subservices
-        in parallel via MultiService.
-
-        Service can be restarted - it will keep running but with refreshed config,
-        or it can be stopped - it will just gracefully shut down.
-        """
-        if self._running:
-            msg = f"{self.__class__.__name__} is already running."
-            raise ServiceAlreadyRunningError(msg)
-
-        self._running = True
-
-        try:
-            while self._running:
-                try:
-                    self._logger.info("Starting connector services")
-                    self._multi_service = get_services(
-                        ["schedule", "sync_content", "sync_access_control", "cleanup"],
-                        self._agent_config.get(),
-                    )
-                    await self._multi_service.run()
-                except Exception as e:
-                    self._logger.exception(
-                        f"Error while running services in ConnectorServiceManager: {e}"
-                    )
-                    raise
-        finally:
-            self._logger.info("Finished running, exiting")
-
-    def stop(self):
-        """Stop the service manager and all running subservices.
-
-        Running stop attempts to gracefully shutdown all subservices currently running.
-        """
-        self._logger.info("Stopping connector services.")
-        self._running = False
-        self._done = True
-        if self._multi_service:
-            self._multi_service.shutdown(None)
-
-    def restart(self):
-        """Restart the service manager and all running subservices.
-
-        Running restart attempts to gracefully shutdown all subservices currently running.
-        After services are gracefully stopped, they will be started again with fresh configuration
-        that comes from ConnectorsAgentConfigurationWrapper.
-        """
-        self._logger.info("Restarting connector services")
-        if self._multi_service:
-            self._multi_service.shutdown(None)
diff --git a/connectors/cli/auth.py b/connectors/cli/auth.py
index c2417641..11692fcf 100644
--- a/connectors/cli/auth.py
+++ b/connectors/cli/auth.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import asyncio
 import os
 
diff --git a/connectors/cli/connector.py b/connectors/cli/connector.py
index 9e90c3ee..79aa1b94 100644
--- a/connectors/cli/connector.py
+++ b/connectors/cli/connector.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import asyncio
 from collections import OrderedDict
 
diff --git a/connectors/cli/index.py b/connectors/cli/index.py
index 4f0d91af..eb791031 100644
--- a/connectors/cli/index.py
+++ b/connectors/cli/index.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import asyncio
 
 from elasticsearch import ApiError
diff --git a/connectors/cli/job.py b/connectors/cli/job.py
index 86e80fb1..c3e570b0 100644
--- a/connectors/cli/job.py
+++ b/connectors/cli/job.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import asyncio
 
 from elasticsearch import ApiError
diff --git a/connectors/config.py b/connectors/config.py
index d635c912..e6820e5f 100644
--- a/connectors/config.py
+++ b/connectors/config.py
@@ -1,4 +1,3 @@
-#
 # Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
@@ -28,11 +27,6 @@ def load_config(config_file):
     return configuration
 
 
-def add_defaults(config):
-    configuration = dict(_merge_dicts(_default_config(), config))
-    return configuration
-
-
 # Left - in Enterprise Search; Right - in Connectors
 config_mappings = {
     "elasticsearch.host": "elasticsearch.host",
diff --git a/connectors/connectors_cli.py b/connectors/connectors_cli.py
index ae413868..39a9d9b3 100644
--- a/connectors/connectors_cli.py
+++ b/connectors/connectors_cli.py
@@ -10,7 +10,6 @@ This is the main entry point of the framework. When the project is installed as
 a Python package, an `elastic-ingest` executable is added in the PATH and
 executes the `main` function of this module, which starts the service.
 """
-
 import asyncio
 import json
 import os
diff --git a/connectors/es/sink.py b/connectors/es/sink.py
index 1410b9fd..542bbc26 100644
--- a/connectors/es/sink.py
+++ b/connectors/es/sink.py
@@ -17,7 +17,6 @@
 Elasticsearch <== Sink <== queue <== Extractor <== generator
 
 """
-
 import asyncio
 import copy
 import functools
diff --git a/connectors/logger.py b/connectors/logger.py
index b7b10742..eaf26584 100644
--- a/connectors/logger.py
+++ b/connectors/logger.py
@@ -6,17 +6,14 @@
 """
 Logger -- sets the logging and provides a `logger` global object.
 """
-
 import contextlib
 import inspect
 import logging
 import time
-from datetime import datetime, timezone
-from functools import wraps
+from functools import cached_property, wraps
 from typing import AsyncGenerator
 
 import ecs_logging
-from dateutil.tz import tzlocal
 
 from connectors import __version__
 
@@ -30,40 +27,46 @@ class ColorFormatter(logging.Formatter):
     RED = "\x1b[31;20m"
     BOLD_RED = "\x1b[31;1m"
     RESET = "\x1b[0m"
-    COLORS = {
-        logging.DEBUG: GREY,
-        logging.INFO: GREEN,
-        logging.WARNING: YELLOW,
-        logging.ERROR: RED,
-        logging.CRITICAL: BOLD_RED,
-    }
 
     DATE_FMT = "%H:%M:%S"
 
     def __init__(self, prefix):
         self.custom_format = "[" + prefix + "][%(asctime)s][%(levelname)s] %(message)s"
-        super().__init__(datefmt=self.DATE_FMT)
-        self.local_tz = tzlocal()
-
-    def converter(self, timestamp):
-        dt = datetime.fromtimestamp(timestamp, self.local_tz)
-        return dt.astimezone(timezone.utc)
-
-    # override logging.Formatter to use an aware datetime object
-    def formatTime(self, record, datefmt=None):
-        dt = self.converter(record.created)
-        if datefmt:
-            s = dt.strftime(datefmt)
-        else:
-            try:
-                s = dt.isoformat(timespec="milliseconds")
-            except TypeError:
-                s = dt.isoformat()
-        return s
+        super().__init__()
+
+    @cached_property
+    def debug_formatter(self):
+        return logging.Formatter(
+            fmt=self.GREY + self.custom_format + self.RESET, datefmt=self.DATE_FMT
+        )
+
+    @cached_property
+    def info_formatter(self):
+        return logging.Formatter(
+            fmt=self.GREEN + self.custom_format + self.RESET, datefmt=self.DATE_FMT
+        )
+
+    @cached_property
+    def warning_formatter(self):
+        return logging.Formatter(
+            fmt=self.YELLOW + self.custom_format + self.RESET, datefmt=self.DATE_FMT
+        )
+
+    @cached_property
+    def error_formatter(self):
+        return logging.Formatter(
+            fmt=self.RED + self.custom_format + self.RESET, datefmt=self.DATE_FMT
+        )
+
+    @cached_property
+    def critical_formatter(self):
+        return logging.Formatter(
+            fmt=self.BOLD_RED + self.custom_format + self.RESET, datefmt=self.DATE_FMT
+        )
 
     def format(self, record):  # noqa: A003
-        self._style._fmt = self.COLORS[record.levelno] + self.custom_format + self.RESET
-        return super().format(record)
+        formatter = getattr(self, f"{record.levelname.lower()}_formatter")
+        return formatter.format(record)
 
 
 class DocumentLogger:
diff --git a/connectors/protocol/connectors.py b/connectors/protocol/connectors.py
index 5a05bf38..be86f6cf 100644
--- a/connectors/protocol/connectors.py
+++ b/connectors/protocol/connectors.py
@@ -12,7 +12,6 @@ Main classes are :
 - SyncJob: represents a document in `.elastic-connectors-sync-jobs`
 
 """
-
 import socket
 from collections import UserDict
 from copy import deepcopy
@@ -994,9 +993,9 @@ class Connector(ESDocument):
             filtering = self.filtering.to_list()
             for filter_ in filtering:
                 if filter_.get("domain", "") == Filtering.DEFAULT_DOMAIN:
-                    filter_.get("draft", {"validation": {}})["validation"] = (
-                        validation_result.to_dict()
-                    )
+                    filter_.get("draft", {"validation": {}})[
+                        "validation"
+                    ] = validation_result.to_dict()
                     if validation_result.state == FilteringValidationState.VALID:
                         filter_["active"] = filter_.get("draft")
 
diff --git a/connectors/service_cli.py b/connectors/service_cli.py
index bc940c6d..89d4ed75 100755
--- a/connectors/service_cli.py
+++ b/connectors/service_cli.py
@@ -10,7 +10,6 @@ This is the main entry point of the framework. When the project is installed as
 a Python package, an `elastic-ingest` executable is added in the PATH and
 executes the `main` function of this module, which starts the service.
 """
-
 import asyncio
 import functools
 import json
@@ -73,19 +72,13 @@ async def _start_service(actions, config, loop):
         return await multi_service.run()
 
 
-def _get_uvloop():
-    import uvloop
-
-    return uvloop
-
-
 def get_event_loop(uvloop=False):
     if uvloop:
         # activate uvloop if lib is present
         try:
             import uvloop
 
-            asyncio.set_event_loop_policy(_get_uvloop().EventLoopPolicy())
+            asyncio.set_event_loop_policy(uvloop.EventLoopPolicy())
         except Exception as e:
             logger.warning(
                 f"Unable to enable uvloop: {e}. Running with default event loop"
diff --git a/connectors/services/base.py b/connectors/services/base.py
index b5ff8c89..d243a100 100644
--- a/connectors/services/base.py
+++ b/connectors/services/base.py
@@ -10,7 +10,6 @@
   config
 - `get_services` and `get_service`: factories
 """
-
 import asyncio
 import time
 from copy import deepcopy
@@ -173,7 +172,7 @@ class MultiService:
         """Runs every service in a task and wait for all tasks."""
         tasks = [asyncio.create_task(service.run()) for service in self._services]
 
-        _, pending = await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)
+        done, pending = await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)
 
         for task in pending:
             task.cancel()
diff --git a/connectors/services/job_cleanup.py b/connectors/services/job_cleanup.py
index a1ca16f0..0b9098ee 100644
--- a/connectors/services/job_cleanup.py
+++ b/connectors/services/job_cleanup.py
@@ -34,8 +34,6 @@ class JobCleanUpService(BaseService):
             while self.running:
                 await self._process_orphaned_idle_jobs()
                 await self._process_idle_jobs()
-                if not self.running:
-                    break
                 await self._sleeps.sleep(self.idling)
         finally:
             if self.connector_index is not None:
diff --git a/connectors/services/job_scheduling.py b/connectors/services/job_scheduling.py
index b07314e7..ae592ff5 100644
--- a/connectors/services/job_scheduling.py
+++ b/connectors/services/job_scheduling.py
@@ -10,7 +10,6 @@ Event loop
 - instantiates connector plugins
 - mirrors an Elasticsearch index with a collection of documents
 """
-
 from datetime import datetime, timezone
 
 from connectors.es.client import License, with_concurrency_control
@@ -112,7 +111,9 @@ class JobSchedulingService(BaseService):
             (
                 is_platinum_license_enabled,
                 license_enabled,
-            ) = await self.connector_index.has_active_license_enabled(License.PLATINUM)  # pyright: ignore
+            ) = await self.connector_index.has_active_license_enabled(
+                License.PLATINUM
+            )  # pyright: ignore
 
             if is_platinum_license_enabled:
                 await self._try_schedule_sync(connector, JobType.ACCESS_CONTROL)
diff --git a/connectors/source.py b/connectors/source.py
index 2dd1b204..24ed1042 100644
--- a/connectors/source.py
+++ b/connectors/source.py
@@ -3,7 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Helpers to build sources + FQN-based Registry"""
+""" Helpers to build sources + FQN-based Registry
+"""
 
 import asyncio
 import importlib
@@ -139,7 +140,7 @@ class Field:
             return value
 
         # list requires special type casting
-        if cast_type is list:
+        if cast_type == list:
             if isinstance(value, str):
                 return [item.strip() for item in value.split(",")] if value else []
             elif isinstance(value, int):
diff --git a/connectors/sources/__init__.py b/connectors/sources/__init__.py
new file mode 100644
index 00000000..4c513b29
--- /dev/null
+++ b/connectors/sources/__init__.py
@@ -0,0 +1,5 @@
+#
+# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
+# or more contributor license agreements. Licensed under the Elastic License 2.0;
+# you may not use this file except in compliance with the Elastic License 2.0.
+#
diff --git a/connectors/sources/atlassian.py b/connectors/sources/atlassian.py
index b44cb431..f259483e 100644
--- a/connectors/sources/atlassian.py
+++ b/connectors/sources/atlassian.py
@@ -108,13 +108,15 @@ class AtlassianAccessControl:
         return es_access_control_query(access_control)
 
     async def fetch_all_users(self, url):
+        from connectors.sources.confluence import CONFLUENCE_CLOUD
         from connectors.sources.jira import JIRA_CLOUD
 
         start_at = 0
         while True:
             url_ = (
                 f"{url}?startAt={start_at}"
-                if self.source.configuration["data_source"] == JIRA_CLOUD
+                if self.source.configuration["data_source"]
+                in [JIRA_CLOUD, CONFLUENCE_CLOUD]
                 else url.format(start_at=start_at, max_results=NON_CLOUD_USER_BATCH)
             )
             async for users in self.client.api_call(url=url_):
@@ -122,39 +124,18 @@ class AtlassianAccessControl:
                 if len(response) == 0:
                     return
                 yield response
-                if self.source.configuration["data_source"] != JIRA_CLOUD:
+                if self.source.configuration["data_source"] not in [
+                    JIRA_CLOUD,
+                    CONFLUENCE_CLOUD,
+                ]:
                     start_at += NON_CLOUD_USER_BATCH
                 else:
                     start_at += CLOUD_USER_BATCH
 
-    async def fetch_all_users_for_confluence(self, url):
-        from connectors.sources.confluence import CONFLUENCE_CLOUD
-
-        start_at = 0
-        while True:
-            url_ = (
-                f"{url}?startAt={start_at}"
-                if self.source.configuration["data_source"] == CONFLUENCE_CLOUD
-                else url.format(start_at=start_at, max_results=NON_CLOUD_USER_BATCH)
-            )
-            users = await self.client.api_call(url=url_)
-            response = await users.json()
-            if len(response) == 0:
-                return
-            yield response
-            if self.source.configuration["data_source"] != CONFLUENCE_CLOUD:
-                start_at += NON_CLOUD_USER_BATCH
-            else:
-                start_at += CLOUD_USER_BATCH
-
     async def fetch_user(self, url):
         async for user in self.client.api_call(url=url):
             yield await user.json()
 
-    async def fetch_user_for_confluence(self, url):
-        user = await self.client.api_call(url=url)
-        yield await user.json()
-
     async def user_access_control_doc(self, user):
         """Generate a user access control document.
 
diff --git a/connectors/sources/azure_blob_storage.py b/connectors/sources/azure_blob_storage.py
index cee4950d..862742a5 100644
--- a/connectors/sources/azure_blob_storage.py
+++ b/connectors/sources/azure_blob_storage.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Azure Blob Storage source module responsible to fetch documents from Azure Blob Storage"""
-
 from functools import partial
 
 from azure.storage.blob.aio import BlobServiceClient, ContainerClient
@@ -206,12 +205,12 @@ class AzureBlobStorageDataSource(BaseDataSource):
     def _get_container_client(self, container_name):
         if self.container_clients.get(container_name) is None:
             try:
-                self.container_clients[container_name] = (
-                    ContainerClient.from_connection_string(
-                        conn_str=self.connection_string,
-                        container_name=container_name,
-                        retry_total=self.retry_count,
-                    )
+                self.container_clients[
+                    container_name
+                ] = ContainerClient.from_connection_string(
+                    conn_str=self.connection_string,
+                    container_name=container_name,
+                    retry_total=self.retry_count,
                 )
                 return self.container_clients[container_name]
             except Exception as exception:
diff --git a/connectors/sources/box.py b/connectors/sources/box.py
index dbf720d9..99bc7d98 100644
--- a/connectors/sources/box.py
+++ b/connectors/sources/box.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Box source module responsible to fetch documents from Box"""
-
 import asyncio
 import os
 from datetime import datetime, timedelta
diff --git a/connectors/sources/confluence.py b/connectors/sources/confluence.py
index ce66b05a..ea5b735c 100644
--- a/connectors/sources/confluence.py
+++ b/connectors/sources/confluence.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Confluence source module responsible to fetch documents from Confluence Cloud/Server."""
-
+"""Confluence source module responsible to fetch documents from Confluence Cloud/Server.
+"""
 import asyncio
 import os
 from copy import copy
@@ -32,7 +32,6 @@ from connectors.utils import (
     ConcurrentTasks,
     MemQueue,
     RetryStrategy,
-    html_to_text,
     iso_utc,
     nested_get_from_dict,
     retryable,
@@ -223,12 +222,12 @@ class ConfluenceClient:
             response: Client response
         """
         self._logger.debug(f"Making a GET call for url: {url}")
-
         try:
-            return await self._get_session().get(
+            async with self._get_session().get(
                 url=url,
                 ssl=self.ssl_ctx,
-            )
+            ) as response:
+                yield response
         except ServerDisconnectedError:
             await self.close_session()
             raise
@@ -248,16 +247,18 @@ class ConfluenceClient:
         url = os.path.join(self.host_url, URLS[url_name].format(**url_kwargs))
         while True:
             try:
-                response = await self.api_call(url=url)
-                json_response = await response.json()
-                links = json_response.get("_links")
-                yield json_response
-                if links.get("next") is None:
-                    return
-                url = os.path.join(
-                    self.host_url,
-                    links.get("next")[1:],
-                )
+                async for response in self.api_call(
+                    url=url,
+                ):
+                    json_response = await response.json()
+                    links = json_response.get("_links")
+                    yield json_response
+                    if links.get("next") is None:
+                        return
+                    url = os.path.join(
+                        self.host_url,
+                        links.get("next")[1:],
+                    )
             except Exception as exception:
                 self._logger.warning(
                     f"Skipping data for type {url_name} from {url}. Exception: {exception}."
@@ -278,13 +279,15 @@ class ConfluenceClient:
             url = os.path.join(self.host_url, URLS[url_name].format(**url_kwargs))
             json_response = {}
             try:
-                response = await self.api_call(url=url)
-                json_response = await response.json()
-                yield json_response
-
-                start = url_kwargs.get("start", 0)
-                start += LIMIT
-                url_kwargs["start"] = start
+                async for response in self.api_call(
+                    url=url,
+                ):
+                    json_response = await response.json()
+                    yield json_response
+
+                    start = url_kwargs.get("start", 0)
+                    start += LIMIT
+                    url_kwargs["start"] = start
                 if len(json_response.get("results", [])) < LIMIT:
                     break
             except Exception as exception:
@@ -293,9 +296,6 @@ class ConfluenceClient:
                 )
                 break
 
-    async def download_func(self, url):
-        yield await self.api_call(url)
-
     async def search_by_query(self, query):
         if self.data_source_type == CONFLUENCE_DATA_CENTER:
             search_documents = self.paginated_api_call_for_datacenter_syncrule(
@@ -324,9 +324,11 @@ class ConfluenceClient:
 
     async def fetch_server_space_permission(self, url):
         try:
-            permissions = await self.api_call(url=os.path.join(self.host_url, url))
-            permission = await permissions.json()
-            return permission
+            async for permissions in self.api_call(
+                url=os.path.join(self.host_url, url),
+            ):
+                permission = await permissions.json()
+                return permission
         except ClientResponseError as exception:
             self._logger.warning(
                 f"Something went wrong. Make sure you have installed Extender for running confluence datacenter/server DLS. Exception: {exception}."
@@ -361,8 +363,10 @@ class ConfluenceClient:
                 yield attachment
 
     async def ping(self):
-        await self.api_call(
-            url=os.path.join(self.host_url, PING_URL),
+        await anext(
+            self.api_call(
+                url=os.path.join(self.host_url, PING_URL),
+            )
         )
 
     async def fetch_confluence_server_users(self):
@@ -378,18 +382,19 @@ class ConfluenceClient:
 
         while True:
             url_ = url.format(start=start_at, limit=limit)
-            users = await self.api_call(url=url_)
-            response = await users.json()
-            if len(response.get(key)) == 0:
-                return
-            yield response.get(key)
-            start_at += limit
+            async for users in self.api_call(url=url_):
+                response = await users.json()
+                if len(response.get(key)) == 0:
+                    return
+                yield response.get(key)
+                start_at += limit
 
     async def fetch_label(self, label_id):
-        url = os.path.join(self.host_url, URLS[LABEL].format(id=label_id))
-        label_data = await self.api_call(url=url)
-        labels = await label_data.json()
-        return [label.get("name") for label in labels["results"]]
+        async for label_data in self.api_call(
+            url=os.path.join(self.host_url, URLS[LABEL].format(id=label_id))
+        ):
+            labels = await label_data.json()
+            return [label.get("name") for label in labels["results"]]
 
 
 class ConfluenceDataSource(BaseDataSource):
@@ -698,15 +703,13 @@ class ConfluenceDataSource(BaseDataSource):
 
     async def get_user(self):
         url = os.path.join(self.configuration["confluence_url"], URLS[USER])
-        async for users in self.atlassian_access_control.fetch_all_users_for_confluence(
-            url=url
-        ):
+        async for users in self.atlassian_access_control.fetch_all_users(url=url):
             active_atlassian_users = filter(
                 self.atlassian_access_control.is_active_atlassian_user, users
             )
             tasks = [
                 anext(
-                    self.atlassian_access_control.fetch_user_for_confluence(
+                    self.atlassian_access_control.fetch_user(
                         url=f"{user_info.get('self')}&{USER_QUERY}"
                     )
                 )
@@ -878,10 +881,7 @@ class ConfluenceDataSource(BaseDataSource):
             List: List of permissions attached to document
             Dictionary: Dictionary of restrictions attached to document
         """
-        async for (
-            document,
-            attachment_count,
-        ) in self.confluence_client.fetch_page_blog_documents(
+        async for document, attachment_count in self.confluence_client.fetch_page_blog_documents(
             api_query=api_query,
         ):
             document_url = os.path.join(
@@ -899,21 +899,21 @@ class ConfluenceDataSource(BaseDataSource):
                 "title": document.get("title"),
                 "ancestors": ancestor_title,
                 "space": document["space"]["name"],
-                "body": html_to_text(document["body"]["storage"]["value"]),
+                "body": document["body"]["storage"]["value"],
                 "url": document_url,
                 "author": document["history"]["createdBy"][self.authorkey],
                 "createdDate": document["history"]["createdDate"],
             }
             if self.confluence_client.index_labels:
                 doc["labels"] = document["labels"]
-            yield (
-                doc,
-                attachment_count,
-                document.get("space", {}).get("key"),
-                document.get("space", {}).get("permissions", []),
-                document.get("restrictions", {})
-                .get("read", {})
-                .get("restrictions", {}),
+            yield doc, attachment_count, document.get("space", {}).get(
+                "key"
+            ), document.get("space", {}).get("permissions", []), document.get(
+                "restrictions", {}
+            ).get(
+                "read", {}
+            ).get(
+                "restrictions", {}
             )
 
     async def fetch_attachments(
@@ -941,22 +941,19 @@ class ConfluenceDataSource(BaseDataSource):
                 self.confluence_client.host_url,
                 attachment.get("_links", {}).get("webui", "")[1:],
             )
-            yield (
-                {
-                    "type": attachment.get("type"),
-                    "title": attachment.get("title"),
-                    "_id": attachment.get("id"),
-                    "space": parent_space,
-                    parent_type: parent_name,
-                    "_timestamp": attachment.get("version", {}).get("when", iso_utc()),
-                    "size": attachment.get("extensions", {}).get("fileSize", 0),
-                    "url": attachment_url,
-                    "createdDate": nested_get_from_dict(
-                        attachment, ["history", "createdDate"]
-                    ),
-                },
-                attachment.get("_links", {}).get("download"),
-            )
+            yield {
+                "type": attachment.get("type"),
+                "title": attachment.get("title"),
+                "_id": attachment.get("id"),
+                "space": parent_space,
+                parent_type: parent_name,
+                "_timestamp": attachment.get("version", {}).get("when", iso_utc()),
+                "size": attachment.get("extensions", {}).get("fileSize", 0),
+                "url": attachment_url,
+                "createdDate": nested_get_from_dict(
+                    attachment, ["history", "createdDate"]
+                ),
+            }, attachment.get("_links", {}).get("download")
 
     async def search_by_query(self, query):
         async for entity in self.confluence_client.search_by_query(query=query):
@@ -973,9 +970,7 @@ class ConfluenceDataSource(BaseDataSource):
                 "_id": entity_details.get("id"),
                 "title": entity.get("title"),
                 "_timestamp": entity.get("lastModified"),
-                "body": html_to_text(
-                    entity_details.get("body", {}).get("storage", {}).get("value")
-                ),
+                "body": entity_details.get("body", {}).get("storage", {}).get("value"),
                 "type": entity.get("entityType"),
                 "url": os.path.join(
                     self.confluence_client.host_url, entity.get("url")[1:]
@@ -1049,7 +1044,7 @@ class ConfluenceDataSource(BaseDataSource):
             partial(
                 self.generic_chunked_download_func,
                 partial(
-                    self.confluence_client.download_func,
+                    self.confluence_client.api_call,
                     url=os.path.join(self.confluence_client.host_url, url),
                 ),
             ),
@@ -1101,7 +1096,6 @@ class ConfluenceDataSource(BaseDataSource):
             "title": space.get("name"),
             "_timestamp": iso_utc(),
             "url": space_url,
-            "key": space.get("key"),
         }
         if self.confluence_client.data_source_type == CONFLUENCE_CLOUD:
             document["createdDate"] = nested_get_from_dict(
@@ -1139,10 +1133,12 @@ class ConfluenceDataSource(BaseDataSource):
                 space = self._decorate_with_access_control(
                     document=space, access_control=access_control
                 )
-                yield space
+                await self.queue.put((space, None))  # pyright: ignore
         except Exception as exception:
             self._logger.exception(f"Error while fetching spaces: {exception}")
             raise
+        finally:
+            await self.queue.put(END_SIGNAL)  # pyright: ignore
 
     async def _page_blog_coro(self, api_query, target_type):
         """Coroutine to add pages/blogposts to Queue
@@ -1155,16 +1151,9 @@ class ConfluenceDataSource(BaseDataSource):
             self._logger.info(
                 f"Fetching {target_type} and its permissions from Confluence"
             )
-            self._logger.debug(
-                f"Fetching {target_type} using Confluence query: '{api_query}'"
-            )
-            async for (
-                document,
-                attachment_count,
-                space_key,
-                permissions,
-                restrictions,
-            ) in self.fetch_documents(api_query):
+            async for document, attachment_count, space_key, permissions, restrictions in self.fetch_documents(
+                api_query
+            ):
                 # Pages and blog posts are open to viewing or editing by default,
                 # but you can restrict either viewing or editing to certain users or groups.
                 if self.confluence_client.data_source_type == CONFLUENCE_CLOUD:
@@ -1239,38 +1228,41 @@ class ConfluenceDataSource(BaseDataSource):
                 logger.debug(f"Fetching confluence content using custom query: {query}")
                 async for document, download_link in self.search_by_query(query):
                     if download_link:
-                        yield (
-                            document,
-                            partial(
-                                self.download_attachment,
-                                download_link[1:],
-                                copy(document),
-                            ),
+                        yield document, partial(
+                            self.download_attachment,
+                            download_link[1:],
+                            copy(document),
                         )
                     else:
                         yield document, None
 
         else:
-            async for space in self._space_coro():
-                yield space, None
-                self._logger.info(f"Fetching docs from space: {space['key']}")
-                configured_spaces_query = f"cql=space in ('{space['key']}') AND type="
-                await self.fetchers.put(
-                    partial(
-                        self._page_blog_coro,
-                        f"{configured_spaces_query}{BLOGPOST}&{CONTENT_QUERY}",
-                        BLOGPOST,
-                    )
+            if self.spaces == [WILDCARD]:
+                logger.debug("Including docs from all spaces")
+                configured_spaces_query = "cql=type="
+            else:
+                quoted_spaces = "','".join(self.spaces)
+                logger.debug(
+                    f"Including docs from the following spaces: {quoted_spaces}"
                 )
-                await self.fetchers.put(
-                    partial(
-                        self._page_blog_coro,
-                        f"{configured_spaces_query}{PAGE}&{CONTENT_QUERY}",
-                        PAGE,
-                    )
+                configured_spaces_query = f"cql=space in ('{quoted_spaces}') AND type="
+            await self.fetchers.put(self._space_coro)
+            await self.fetchers.put(
+                partial(
+                    self._page_blog_coro,
+                    f"{configured_spaces_query}{BLOGPOST}&{CONTENT_QUERY}",
+                    BLOGPOST,
+                )
+            )
+            await self.fetchers.put(
+                partial(
+                    self._page_blog_coro,
+                    f"{configured_spaces_query}{PAGE}&{CONTENT_QUERY}",
+                    PAGE,
                 )
-                self.fetcher_count += 2
+            )
+            self.fetcher_count += 3
 
-                async for item in self._consumer():
-                    yield item
+            async for item in self._consumer():
+                yield item
             await self.fetchers.join()
diff --git a/connectors/sources/directory.py b/connectors/sources/directory.py
index ab62c501..991eaf6a 100644
--- a/connectors/sources/directory.py
+++ b/connectors/sources/directory.py
@@ -6,7 +6,6 @@
 """
 Demo of a standalone source
 """
-
 import functools
 import os
 from datetime import datetime, timezone
diff --git a/connectors/sources/dropbox.py b/connectors/sources/dropbox.py
index fc71eb67..ab2956ea 100644
--- a/connectors/sources/dropbox.py
+++ b/connectors/sources/dropbox.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Dropbox source module responsible to fetch documents from Dropbox online."""
-
+"""Dropbox source module responsible to fetch documents from Dropbox online.
+"""
 import json
 import os
 from datetime import datetime
@@ -48,9 +48,6 @@ PAPER = "paper"
 FILE = "File"
 FOLDER = "Folder"
 RECEIVED_FILE = "Received File"
-AUTHENTICATED_ADMIN_URL = (
-    "https://api.dropboxapi.com/2/team/token/get_authenticated_admin"
-)
 
 API_VERSION = 2
 
@@ -178,7 +175,6 @@ class DropboxClient:
         self.access_token = None
         self.token_expiration_time = None
         self.member_id = None
-        self.root_namespace_id = None
         self._logger = logger
 
     def set_logger(self, logger_):
@@ -250,9 +246,9 @@ class DropboxClient:
         if file_type == FILE:
             request_headers["Dropbox-API-Arg"] = f'{{"path": "{kwargs["path"]}"}}'
         elif file_type == PAPER:
-            request_headers["Dropbox-API-Arg"] = (
-                f'{{"path": "{kwargs["path"]}", "export_format": "markdown"}}'
-            )
+            request_headers[
+                "Dropbox-API-Arg"
+            ] = f'{{"path": "{kwargs["path"]}", "export_format": "markdown"}}'
         elif file_type == RECEIVED_FILE:
             request_headers["Dropbox-API-Arg"] = f'{{"url": "{kwargs["url"]}"}}'
         else:
@@ -269,17 +265,9 @@ class DropboxClient:
             ]
         ):
             request_headers["Dropbox-API-Select-User"] = self.member_id
-
-        if url_name not in [
-            ENDPOINTS.get(EndpointName.AUTHENTICATED_ADMIN.value),
-            ENDPOINTS.get(EndpointName.TEAM_FOLDER_LIST.value),
-            ENDPOINTS.get(EndpointName.MEMBERS.value),
-        ] and (self.root_namespace_id or kwargs.get("folder_id")):
+        if kwargs.get("folder_id"):
             request_headers["Dropbox-API-Path-Root"] = json.dumps(
-                {
-                    ".tag": "namespace_id",
-                    "namespace_id": self.root_namespace_id or kwargs.get("folder_id"),
-                }
+                {".tag": "namespace_id", "namespace_id": kwargs["folder_id"]}
             )
         return request_headers
 
@@ -405,7 +393,7 @@ class DropboxClient:
                 return
 
     async def ping(self, endpoint):
-        return await anext(
+        await anext(
             self.api_call(
                 base_url=BASE_URLS["FILES_FOLDERS_BASE_URL"],
                 url_name=ENDPOINTS.get(endpoint),
@@ -828,7 +816,6 @@ class DropboxDataSource(BaseDataSource):
     async def _remote_validation(self):
         try:
             if self.dropbox_client.path not in ["", None]:
-                await self.set_user_info()
                 if self._dls_enabled():
                     _, member_id = await self.get_account_details()
                     self.dropbox_client.member_id = member_id
@@ -857,37 +844,11 @@ class DropboxDataSource(BaseDataSource):
         await self.dropbox_client.close()
 
     async def ping(self):
-        try:
-            endpoint = EndpointName.AUTHENTICATED_ADMIN.value
-            await self.dropbox_client.ping(endpoint=endpoint)
-            self._logger.info("Successfully connected to Dropbox")
-        except ClientResponseError as exception:
-            if str(exception.request_info.url) == AUTHENTICATED_ADMIN_URL:
-                endpoint = EndpointName.PING.value
-                await self.dropbox_client.ping(endpoint=endpoint)
-                self._logger.info("Successfully connected to Dropbox")
-            else:
-                raise
-
-    async def set_user_info(self):
-        try:
+        endpoint = EndpointName.PING.value
+        if self._dls_enabled():
             endpoint = EndpointName.AUTHENTICATED_ADMIN.value
-            response = await self.dropbox_client.ping(endpoint=endpoint)
-        except ClientResponseError as exception:
-            if str(exception.request_info.url) == AUTHENTICATED_ADMIN_URL:
-                endpoint = EndpointName.PING.value
-                response = await self.dropbox_client.ping(endpoint=endpoint)
-            else:
-                raise
-        _json = await response.json()
-
-        admin_profile = _json.get("admin_profile", {}) or {}
-        root_info = _json.get("root_info", {}) or {}
-
-        self.dropbox_client.member_id = admin_profile.get("team_member_id")
-        self.dropbox_client.root_namespace_id = admin_profile.get(
-            "root_folder_id"
-        ) or root_info.get("root_namespace_id")
+        await self.dropbox_client.ping(endpoint=endpoint)
+        self._logger.info("Successfully connected to Dropbox")
 
     async def get_content(
         self, attachment, is_shared=False, folder_id=None, timestamp=None, doit=False
@@ -996,30 +957,22 @@ class DropboxDataSource(BaseDataSource):
                     url=entry["preview_url"]
                 ):
                     json_metadata = await metadata.json()
-                    yield (
-                        self._adapt_dropbox_shared_file_doc_to_es_doc(
-                            response=json_metadata
-                        ),
-                        json_metadata,
-                    )
+                    yield self._adapt_dropbox_shared_file_doc_to_es_doc(
+                        response=json_metadata
+                    ), json_metadata
 
     async def advanced_sync(self, rule):
         async for response in self.dropbox_client.search_files_folders(rule=rule):
             for entry in response.get("matches"):
                 data = entry.get("metadata", {}).get("metadata")
                 if data.get("preview_url") and not data.get("export_info"):
-                    async for (
-                        metadata
-                    ) in self.dropbox_client.get_received_file_metadata(
+                    async for metadata in self.dropbox_client.get_received_file_metadata(
                         url=data["preview_url"]
                     ):
                         json_metadata = await metadata.json()
-                        yield (
-                            self._adapt_dropbox_shared_file_doc_to_es_doc(
-                                response=json_metadata
-                            ),
-                            json_metadata,
-                        )
+                        yield self._adapt_dropbox_shared_file_doc_to_es_doc(
+                            response=json_metadata
+                        ), json_metadata
                 else:
                     yield self._adapt_dropbox_doc_to_es_doc(response=data), data
 
@@ -1057,10 +1010,7 @@ class DropboxDataSource(BaseDataSource):
         return permissions
 
     async def get_folder_permission(self, shared_folder_id, account_id):
-        if (
-            not shared_folder_id
-            or shared_folder_id == self.dropbox_client.root_namespace_id
-        ):
+        if not shared_folder_id:
             return [account_id]
 
         async for permission in self.dropbox_client.list_folder_permission(
@@ -1071,9 +1021,9 @@ class DropboxDataSource(BaseDataSource):
             )
 
     async def get_file_permission_without_batching(self, file_id, account_id):
-        async for (
-            permission
-        ) in self.dropbox_client.list_file_permission_without_batching(file_id=file_id):
+        async for permission in self.dropbox_client.list_file_permission_without_batching(
+            file_id=file_id
+        ):
             return await self.get_permission(
                 permission=permission, account_id=account_id
             )
@@ -1123,10 +1073,9 @@ class DropboxDataSource(BaseDataSource):
                 )
                 file_id = batched_document[permission["file"]]
 
-                yield (
-                    self._decorate_with_access_control(file_id[0], file_permission),
-                    file_id[1],
-                )
+                yield self._decorate_with_access_control(
+                    file_id[0], file_permission
+                ), file_id[1]
 
     def document_tuple(self, document, attachment, folder_id=None):
         if document.get("type") == FILE:
@@ -1144,9 +1093,13 @@ class DropboxDataSource(BaseDataSource):
         else:
             return document, None
 
-    async def add_document_to_list(self, func, account_id, is_shared=False):
+    async def add_document_to_list(self, func, account_id, folder_id, is_shared=False):
         batched_document = {}
-        calling_func = func() if is_shared else func(path=self.dropbox_client.path)
+        calling_func = (
+            func()
+            if is_shared
+            else func(path=self.dropbox_client.path, folder_id=folder_id)
+        )
 
         async for document, attachment in calling_func:
             if (
@@ -1163,50 +1116,50 @@ class DropboxDataSource(BaseDataSource):
                 yield self.document_tuple(
                     document=self._decorate_with_access_control(document, permissions),
                     attachment=attachment,
+                    folder_id=folder_id,
                 )
             else:
                 if len(batched_document) == REQUEST_BATCH_SIZE:
-                    async for (
-                        mapped_document,
-                        mapped_attachment,
-                    ) in self.map_permission_with_document(
+                    async for mapped_document, mapped_attachment in self.map_permission_with_document(
                         batched_document=batched_document, account_id=account_id
                     ):
                         yield self.document_tuple(
                             document=mapped_document,
                             attachment=mapped_attachment,
+                            folder_id=folder_id,
                         )
                     batched_document = {attachment["id"]: (document, attachment)}
                 else:
                     batched_document[attachment["id"]] = (document, attachment)
 
         if len(batched_document) > 0:
-            async for (
-                mapped_document,
-                mapped_attachment,
-            ) in self.map_permission_with_document(
+            async for mapped_document, mapped_attachment in self.map_permission_with_document(
                 batched_document=batched_document, account_id=account_id
             ):
                 yield self.document_tuple(
                     document=mapped_document,
                     attachment=mapped_attachment,
+                    folder_id=folder_id,
                 )
             batched_document = {}
 
     async def fetch_file_folders_with_dls(self):
         account_id, member_id = await self.get_account_details()
         self.dropbox_client.member_id = member_id
-        async for mapped_document in self.add_document_to_list(
-            func=self._fetch_files_folders,
-            account_id=account_id,
-        ):
-            yield mapped_document
-        async for mapped_document in self.add_document_to_list(
-            func=self._fetch_shared_files,
-            account_id=account_id,
-            is_shared=True,
-        ):
-            yield mapped_document
+        async for folder_id in self.get_team_folder_id():
+            async for mapped_document in self.add_document_to_list(
+                func=self._fetch_files_folders,
+                account_id=account_id,
+                folder_id=folder_id,
+            ):
+                yield mapped_document
+            async for mapped_document in self.add_document_to_list(
+                func=self._fetch_shared_files,
+                account_id=account_id,
+                folder_id=folder_id,
+                is_shared=True,
+            ):
+                yield mapped_document
 
     async def get_docs(self, filtering=None):
         """Executes the logic to fetch dropbox objects in async manner
@@ -1218,7 +1171,6 @@ class DropboxDataSource(BaseDataSource):
             dictionary: dictionary containing meta-data of the files.
         """
 
-        await self.set_user_info()
         if self._dls_enabled():
             async for document in self.fetch_file_folders_with_dls():
                 yield document
@@ -1229,21 +1181,12 @@ class DropboxDataSource(BaseDataSource):
                 self._logger.debug(f"Fetching files using advanced sync rule: {rule}")
 
                 async for document, attachment in self.advanced_sync(rule=rule):
-                    yield self.document_tuple(
-                        document=document,
-                        attachment=attachment,
-                    )
+                    yield self.document_tuple(document=document, attachment=attachment)
         else:
             async for document, attachment in self._fetch_files_folders(
                 path=self.dropbox_client.path
             ):
-                yield self.document_tuple(
-                    document=document,
-                    attachment=attachment,
-                )
+                yield self.document_tuple(document=document, attachment=attachment)
 
             async for document, attachment in self._fetch_shared_files():
-                yield self.document_tuple(
-                    document=document,
-                    attachment=attachment,
-                )
+                yield self.document_tuple(document=document, attachment=attachment)
diff --git a/connectors/sources/github.py b/connectors/sources/github.py
index 11cd2437..7c49f6ad 100644
--- a/connectors/sources/github.py
+++ b/connectors/sources/github.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """GitHub source module responsible to fetch documents from GitHub Cloud and Server."""
-
 import json
 import time
 from enum import Enum
@@ -43,7 +42,6 @@ from connectors.utils import (
 
 WILDCARD = "*"
 BLOB = "blob"
-FILE = "file"
 GITHUB_CLOUD = "github_cloud"
 GITHUB_SERVER = "github_server"
 PERSONAL_ACCESS_TOKEN = "personal_access_token"  # noqa: S105
@@ -69,14 +67,6 @@ FILE_SCHEMA = {
     "extension": "extension",
     "_timestamp": "_timestamp",
 }
-PATH_SCHEMA = {
-    "name": "name",
-    "size": "size",
-    "type": "type",
-    "path": "path",
-    "extension": "extension",
-    "_timestamp": "_timestamp",
-}
 
 
 def _prefix_email(email):
@@ -634,7 +624,6 @@ class ObjectType(Enum):
     PULL_REQUEST = "Pull request"
     PR = "pr"
     BRANCH = "branch"
-    PATH = "path"
 
 
 class UnauthorizedException(Exception):
@@ -668,13 +657,11 @@ class GitHubClient:
             self.endpoints = {
                 "TREE": "/repos/{repo_name}/git/trees/{default_branch}?recursive=1",
                 "COMMITS": "/repos/{repo_name}/commits?path={path}",
-                "PATH": "/repos/{repo_name}/contents/{path}",
             }
         else:
             self.endpoints = {
                 "TREE": "/api/v3/repos/{repo_name}/git/trees/{default_branch}?recursive=1",
                 "COMMITS": "api/v3/repos/{repo_name}/commits?path={path}",
-                "PATH": "api/v3/repos/{repo_name}/contents/{path}",
             }
         if ssl_enabled and ssl_ca:
             self.ssl_ctx = ssl_context(certificate=ssl_ca)
@@ -1061,7 +1048,6 @@ class GitHubAdvancedRulesValidator(AdvancedRulesValidator):
                     ObjectType.ISSUE.value.lower(): {"type": "string", "minLength": 1},
                     ObjectType.PR.value: {"type": "string", "minLength": 1},
                     ObjectType.BRANCH.value: {"type": "string", "minLength": 1},
-                    ObjectType.PATH.value: {"type": "string", "minLength": 1},
                 },
                 "minProperties": 1,
                 "additionalProperties": False,
@@ -1361,7 +1347,7 @@ class GitHubDataSource(BaseDataSource):
             cached_repo = self.org_repos
         else:
             if owner not in self.user_repos:
-                # get repos for a user can cached it in self.user_repos
+                # get repos for a user cna cached it in self.user_repos
                 async for _ in self._get_personal_repos(owner):
                     pass
 
@@ -1885,31 +1871,6 @@ class GitHubDataSource(BaseDataSource):
         )
         return commit["commit"]["committer"]["date"]
 
-    async def _format_file_document(self, repo_object, repo_name, schema):
-        file_name = repo_object["path"].split("/")[-1]
-        file_extension = (
-            file_name[file_name.rfind(".") :] if "." in file_name else ""  # noqa
-        )
-        if file_extension.lower() in SUPPORTED_EXTENSION:
-            last_commit_timestamp = await self._fetch_last_commit_timestamp(
-                repo_name=repo_name, path=repo_object["path"]
-            )
-            repo_object.update(
-                {
-                    "_timestamp": last_commit_timestamp,
-                    "repo_name": repo_name,
-                    "name": file_name,
-                    "extension": file_extension,
-                }
-            )
-
-            document = self.adapt_gh_doc_to_es_doc(
-                github_document=repo_object, schema=schema
-            )
-
-            document["_id"] = f"{repo_name}/{repo_object['path']}"
-            return document, repo_object
-
     async def _fetch_files(self, repo_name, default_branch):
         self._logger.info(
             f"Fetching files from repo: '{repo_name}' (branch: '{default_branch}')"
@@ -1923,35 +1884,31 @@ class GitHubDataSource(BaseDataSource):
 
             for repo_object in file_tree.get("tree", []):
                 if repo_object["type"] == BLOB:
-                    if document := await self._format_file_document(
-                        repo_object=repo_object, repo_name=repo_name, schema=FILE_SCHEMA
-                    ):
-                        yield document
-        except UnauthorizedException:
-            raise
-        except ForbiddenException:
-            raise
-        except Exception as exception:
-            self._logger.warning(
-                f"Something went wrong while fetching the files of {repo_name}. Exception: {exception}",
-                exc_info=True,
-            )
+                    file_name = repo_object["path"].split("/")[-1]
+                    file_extension = (
+                        file_name[file_name.rfind(".") :]  # noqa
+                        if "." in file_name
+                        else ""
+                    )
+                    if file_extension.lower() in SUPPORTED_EXTENSION:
+                        last_commit_timestamp = await self._fetch_last_commit_timestamp(
+                            repo_name=repo_name, path=repo_object["path"]
+                        )
+                        repo_object.update(
+                            {
+                                "_timestamp": last_commit_timestamp,
+                                "repo_name": repo_name,
+                                "name": file_name,
+                                "extension": file_extension,
+                            }
+                        )
 
-    async def _fetch_files_by_path(self, repo_name, path):
-        self._logger.info(f"Fetching files from repo: '{repo_name}' (path: '{path}')")
-        try:
-            for repo_object in await self.github_client.get_github_item(
-                resource=self.github_client.endpoints["PATH"].format(
-                    repo_name=repo_name, path=path
-                )
-            ):  # pyright: ignore
-                if repo_object["type"] == FILE:
-                    if document := await self._format_file_document(
-                        repo_object=repo_object,
-                        repo_name=repo_name,
-                        schema=PATH_SCHEMA,
-                    ):
-                        yield document
+                        document = self.adapt_gh_doc_to_es_doc(
+                            github_document=repo_object, schema=FILE_SCHEMA
+                        )
+
+                        document["_id"] = f"{repo_name}/{repo_object['path']}"
+                        yield document, repo_object
         except UnauthorizedException:
             raise
         except ForbiddenException:
@@ -2133,27 +2090,8 @@ class GitHubDataSource(BaseDataSource):
                         repo_name=repo_name, default_branch=branch
                     ):
                         if file_document["type"] == BLOB:
-                            yield (
-                                file_document,
-                                partial(
-                                    self.get_content, attachment=attachment_metadata
-                                ),
-                            )
-                        else:
-                            yield file_document, None
-
-                if path := rule["filter"].get(ObjectType.PATH.value):
-                    async for (
-                        file_document,
-                        attachment_metadata,
-                    ) in self._fetch_files_by_path(repo_name=repo_name, path=path):
-                        if file_document["type"] == FILE:
-                            attachment_metadata["url"] = attachment_metadata["git_url"]
-                            yield (
-                                file_document,
-                                partial(
-                                    self.get_content, attachment=attachment_metadata
-                                ),
+                            yield file_document, partial(
+                                self.get_content, attachment=attachment_metadata
                             )
                         else:
                             yield file_document, None
@@ -2172,12 +2110,9 @@ class GitHubDataSource(BaseDataSource):
                     )
 
                 if needs_access_control:
-                    yield (
-                        self._decorate_with_access_control(
-                            document=repo, access_control=access_control
-                        ),
-                        None,
-                    )
+                    yield self._decorate_with_access_control(
+                        document=repo, access_control=access_control
+                    ), None
                 else:
                     yield repo, None
 
@@ -2193,12 +2128,9 @@ class GitHubDataSource(BaseDataSource):
                     response_key=[REPOSITORY_OBJECT, "pullRequests"],
                 ):
                     if needs_access_control:
-                        yield (
-                            self._decorate_with_access_control(
-                                document=pull_request, access_control=access_control
-                            ),
-                            None,
-                        )
+                        yield self._decorate_with_access_control(
+                            document=pull_request, access_control=access_control
+                        ), None
                     else:
                         yield pull_request, None
 
@@ -2206,12 +2138,9 @@ class GitHubDataSource(BaseDataSource):
                     repo_name=repo_name, response_key=[REPOSITORY_OBJECT, "issues"]
                 ):
                     if needs_access_control:
-                        yield (
-                            self._decorate_with_access_control(
-                                document=issue, access_control=access_control
-                            ),
-                            None,
-                        )
+                        yield self._decorate_with_access_control(
+                            document=issue, access_control=access_control
+                        ), None
                     else:
                         yield issue, None
 
@@ -2221,30 +2150,21 @@ class GitHubDataSource(BaseDataSource):
                     ):
                         if file_document["type"] == BLOB:
                             if needs_access_control:
-                                yield (
-                                    self._decorate_with_access_control(
-                                        document=file_document,
-                                        access_control=access_control,
-                                    ),
-                                    partial(
-                                        self.get_content, attachment=attachment_metadata
-                                    ),
+                                yield self._decorate_with_access_control(
+                                    document=file_document,
+                                    access_control=access_control,
+                                ), partial(
+                                    self.get_content, attachment=attachment_metadata
                                 )
                             else:
-                                yield (
-                                    file_document,
-                                    partial(
-                                        self.get_content, attachment=attachment_metadata
-                                    ),
+                                yield file_document, partial(
+                                    self.get_content, attachment=attachment_metadata
                                 )
                         else:
                             if needs_access_control:
-                                yield (
-                                    self._decorate_with_access_control(
-                                        document=file_document,
-                                        access_control=access_control,
-                                    ),
-                                    None,
-                                )
+                                yield self._decorate_with_access_control(
+                                    document=file_document,
+                                    access_control=access_control,
+                                ), None
                             else:
                                 yield file_document, None
diff --git a/connectors/sources/google_cloud_storage.py b/connectors/sources/google_cloud_storage.py
index 1d43934a..9c956fbc 100644
--- a/connectors/sources/google_cloud_storage.py
+++ b/connectors/sources/google_cloud_storage.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Google Cloud Storage source module responsible to fetch documents from Google Cloud Storage."""
-
+"""Google Cloud Storage source module responsible to fetch documents from Google Cloud Storage.
+"""
 import os
 import urllib.parse
 from functools import cached_property, partial
@@ -320,9 +320,9 @@ class GoogleCloudStorageDataSource(BaseDataSource):
         for elasticsearch_field, google_cloud_storage_field in BLOB_ADAPTER.items():
             blob_document[elasticsearch_field] = blob.get(google_cloud_storage_field)
         blob_name = urllib.parse.quote(blob_document["name"], safe="'")
-        blob_document["url"] = (
-            f"{CLOUD_STORAGE_BASE_URL}{blob_document['bucket_name']}/{blob_name};tab=live_object?project={self._google_storage_client.user_project_id}"
-        )
+        blob_document[
+            "url"
+        ] = f"{CLOUD_STORAGE_BASE_URL}{blob_document['bucket_name']}/{blob_name};tab=live_object?project={self._google_storage_client.user_project_id}"
         return blob_document
 
     def get_blob_document(self, blobs):
diff --git a/connectors/sources/google_drive.py b/connectors/sources/google_drive.py
index 186521a1..fb108c8e 100644
--- a/connectors/sources/google_drive.py
+++ b/connectors/sources/google_drive.py
@@ -13,12 +13,7 @@ from connectors.access_control import (
     es_access_control_query,
     prefix_identity,
 )
-from connectors.es.sink import OP_DELETE, OP_INDEX
-from connectors.source import (
-    CURSOR_SYNC_TIMESTAMP,
-    BaseDataSource,
-    ConfigurableFieldValueError,
-)
+from connectors.source import BaseDataSource, ConfigurableFieldValueError
 from connectors.sources.google import (
     GoogleServiceAccountClient,
     UserFields,
@@ -28,13 +23,11 @@ from connectors.sources.google import (
 )
 from connectors.utils import (
     EMAIL_REGEX_PATTERN,
-    iso_zulu,
     validate_email_address,
 )
 
 GOOGLE_DRIVE_SERVICE_NAME = "Google Drive"
 GOOGLE_ADMIN_DIRECTORY_SERVICE_NAME = "Google Admin Directory"
-CURSOR_GOOGLE_DRIVE_KEY = "google_drives"
 
 RETRIES = 3
 RETRY_INTERVAL = 2
@@ -45,7 +38,7 @@ DRIVE_API_TIMEOUT = 1 * 60  # 1 min
 
 FOLDER_MIME_TYPE = "application/vnd.google-apps.folder"
 
-DRIVE_ITEMS_FIELDS = "id,createdTime,driveId,modifiedTime,name,size,mimeType,fileExtension,webViewLink,owners,parents,trashed,trashedTime"
+DRIVE_ITEMS_FIELDS = "id,createdTime,driveId,modifiedTime,name,size,mimeType,fileExtension,webViewLink,owners,parents"
 DRIVE_ITEMS_FIELDS_WITH_PERMISSIONS = f"{DRIVE_ITEMS_FIELDS},permissions"
 
 # Export Google Workspace documents to TIKA compatible format, prefer 'text/plain' where possible to be
@@ -57,12 +50,6 @@ GOOGLE_MIME_TYPES_MAPPING = {
 }
 
 
-class SyncCursorEmpty(Exception):
-    """Exception class to notify that incremental sync can't run because sync_cursor is empty."""
-
-    pass
-
-
 class GoogleDriveClient(GoogleServiceAccountClient):
     """A google drive client to handle api calls made to Google Drive API."""
 
@@ -155,12 +142,11 @@ class GoogleDriveClient(GoogleServiceAccountClient):
 
         return folders
 
-    async def list_files(self, fetch_permissions=False, last_sync_time=None):
+    async def list_files(self, fetch_permissions=False):
         """Get files from Google Drive. Files can have any type.
 
         Args:
             include_permissions (bool): flag to select permissions in the request query
-            last_sync_time (str): time when last sync happened
 
         Yields:
             dict: Documents from Google Drive.
@@ -171,15 +157,12 @@ class GoogleDriveClient(GoogleServiceAccountClient):
             if fetch_permissions
             else DRIVE_ITEMS_FIELDS
         )
-        if last_sync_time is None:
-            list_query = "trashed=false"
-        else:
-            list_query = f"trashed=true or modifiedTime > '{last_sync_time}' or createdTime > '{last_sync_time}'"
+
         async for file in self.api_call_paged(
             resource="files",
             method="list",
             corpora="allDrives",
-            q=list_query,
+            q="trashed=false",
             orderBy="modifiedTime desc",
             fields=f"files({files_fields}),incompleteSearch,nextPageToken",
             includeItemsFromAllDrives=True,
@@ -188,9 +171,7 @@ class GoogleDriveClient(GoogleServiceAccountClient):
         ):
             yield file
 
-    async def list_files_from_my_drive(
-        self, fetch_permissions=False, last_sync_time=None
-    ):
+    async def list_files_from_my_drive(self, fetch_permissions=False):
         """Retrieves files from Google Drive, with an option to fetch permissions (DLS).
 
         This function optimizes the retrieval process based on the 'fetch_permissions' flag.
@@ -201,22 +182,15 @@ class GoogleDriveClient(GoogleServiceAccountClient):
 
         Args:
             include_permissions (bool): flag to select permissions in the request query
-            last_sync_time (str): time when last sync happened
 
         Yields:
             dict: Documents from Google Drive.
         """
 
-        if fetch_permissions and last_sync_time:
-            files_fields = DRIVE_ITEMS_FIELDS_WITH_PERMISSIONS
-            list_query = f"(trashed=true or modifiedTime > '{last_sync_time}' or createdTime > '{last_sync_time}') and 'me' in writers"
-        elif fetch_permissions and not last_sync_time:
+        if fetch_permissions:
             files_fields = DRIVE_ITEMS_FIELDS_WITH_PERMISSIONS
             # Google Drive API required write access to fetch file's permissions
             list_query = "trashed=false and 'me' in writers"
-        elif not fetch_permissions and last_sync_time:
-            files_fields = DRIVE_ITEMS_FIELDS
-            list_query = f"trashed=true or modifiedTime > '{last_sync_time}' or createdTime > '{last_sync_time}'"
         else:
             files_fields = DRIVE_ITEMS_FIELDS
             list_query = "trashed=false"
@@ -704,9 +678,9 @@ class GoogleDriveDataSource(BaseDataSource):
         user_email = user.get("primaryEmail")
         user_domain = _get_domain_from_email(user_email)
         user_groups = []
-        async for (
-            groups_page
-        ) in self.google_admin_directory_client.list_groups_for_user(user_id):
+        async for groups_page in self.google_admin_directory_client.list_groups_for_user(
+            user_id
+        ):
             for group in groups_page.get("groups", []):
                 user_groups.append(group.get("email"))
 
@@ -867,7 +841,7 @@ class GoogleDriveDataSource(BaseDataSource):
         # We need to do sanity size after downloading the file because:
         # 1. We use files/export endpoint which converts large media-rich google slides/docs
         #    into text/plain format. We usually we end up with tiny .txt files.
-        # 2. Google will offer report the Google Workspace shared documents to have size 0
+        # 2. Google will ofter report the Google Workspace shared documents to have size 0
         #    as they don't count against user's storage quota.
         if not self.is_file_size_within_limit(file_size, file_name):
             return
@@ -1014,7 +988,7 @@ class GoogleDriveDataSource(BaseDataSource):
             file (dict): File metadata returned from the Drive.
 
         Returns:
-            file_document, trashedTime (tuple): Formatted file metadata along with trashedTime for files deleted from shared drive
+            dict: Formatted file metadata.
         """
 
         file_id, file_name = file.get("id"), file.get("name")
@@ -1029,7 +1003,6 @@ class GoogleDriveDataSource(BaseDataSource):
             "mime_type": file.get("mimeType"),
             "file_extension": file.get("fileExtension"),
             "url": file.get("webViewLink"),
-            "trashed": file.get("trashed"),
         }
 
         # record "file" or "folder" type
@@ -1088,7 +1061,8 @@ class GoogleDriveDataSource(BaseDataSource):
                         self._logger.error(exception_log_msg)
 
             file_document[ACCESS_CONTROL] = self._process_permissions(permissions)
-        return file_document, file.get("trashedTime")
+
+        return file_document
 
     async def prepare_files(self, client, files_page, paths, seen_ids):
         """Generate file document.
@@ -1105,12 +1079,7 @@ class GoogleDriveDataSource(BaseDataSource):
         new_files = [file for file in files if file.get("id") not in seen_ids]
 
         prepared_files = await self._process_items_concurrently(
-            new_files,
-            lambda f: self.prepare_file(
-                client=client,
-                file=f,
-                paths=paths,
-            ),
+            new_files, lambda f: self.prepare_file(client=client, file=f, paths=paths)
         )
 
         for file in prepared_files:
@@ -1120,7 +1089,7 @@ class GoogleDriveDataSource(BaseDataSource):
         """Executes the logic to fetch Google Drive objects in an async manner.
 
         Args:
-            filtering (optional): Advanced filtering rules. Defaults to None.
+            filtering (optional): Advenced filtering rules. Defaults to None.
 
         Yields:
             dict, partial: dict containing meta-data of the Google Drive objects,
@@ -1132,8 +1101,6 @@ class GoogleDriveDataSource(BaseDataSource):
         # This is an optimization to process unique files only once.
         seen_ids = set()
 
-        self.init_sync_cursor()
-
         if self._domain_wide_delegation_sync_enabled():
             # sync personal drives first
             async for user in self.google_admin_directory_client.users():
@@ -1143,7 +1110,7 @@ class GoogleDriveDataSource(BaseDataSource):
                 async for files_page in google_drive_client.list_files_from_my_drive(
                     fetch_permissions=self._dls_enabled()
                 ):
-                    async for file, _ in self.prepare_files(
+                    async for file in self.prepare_files(
                         client=google_drive_client,
                         files_page=files_page,
                         paths={},
@@ -1171,7 +1138,7 @@ class GoogleDriveDataSource(BaseDataSource):
             async for files_page in shared_drives_client.list_files(
                 fetch_permissions=self._dls_enabled()
             ):
-                async for file, _ in self.prepare_files(
+                async for file in self.prepare_files(
                     client=shared_drives_client,
                     files_page=files_page,
                     paths=resolved_paths,
@@ -1189,156 +1156,10 @@ class GoogleDriveDataSource(BaseDataSource):
             async for files_page in google_drive_client.list_files(
                 fetch_permissions=self._dls_enabled()
             ):
-                async for file, _ in self.prepare_files(
+                async for file in self.prepare_files(
                     client=google_drive_client,
                     files_page=files_page,
                     paths=resolved_paths,
                     seen_ids=seen_ids,
                 ):
                     yield file, partial(self.get_content, google_drive_client, file)
-
-    async def get_docs_incrementally(self, sync_cursor, filtering=None):
-        """Executes the logic to fetch Google Drive objects incrementally in an async manner.
-
-        Args:
-            sync_cursor (str): Last sync time.
-            filtering (optional): Advanced filtering rules. Defaults to None.
-
-        Yields:
-            dict, partial: dict containing meta-data of the Google Drive objects,
-                                partial download content function
-        """
-        self._sync_cursor = sync_cursor
-        timestamp = iso_zulu()
-        self._logger.debug(f"Current Sync Time {timestamp}")
-
-        if not self._sync_cursor:
-            msg = "Unable to start incremental sync. Please perform a full sync to re-enable incremental syncs."
-            raise SyncCursorEmpty(msg)
-
-        seen_ids = set()
-
-        if self._domain_wide_delegation_sync_enabled():
-            # sync personal drives first
-            async for user in self.google_admin_directory_client.users():
-                email = user.get(UserFields.EMAIL.value)
-                self._logger.debug(f"Syncing personal drive content for: {email}")
-                google_drive_client = self.google_drive_client(impersonate_email=email)
-                async for files_page in google_drive_client.list_files_from_my_drive(
-                    fetch_permissions=self._dls_enabled(),
-                    last_sync_time=self.last_sync_time(),
-                ):
-                    # personal drive files have no property called trashedTime(time when file was deleted)
-                    async for file, _ in self.prepare_files(
-                        client=google_drive_client,
-                        files_page=files_page,
-                        paths={},
-                        seen_ids=seen_ids,
-                    ):
-                        if file.get("trashed") is True:
-                            yield (
-                                file,
-                                partial(self.get_content, google_drive_client, file),
-                                OP_DELETE,
-                            )
-                        else:
-                            yield (
-                                file,
-                                partial(self.get_content, google_drive_client, file),
-                                OP_INDEX,
-                            )
-
-            email_for_shared_drives_sync = (
-                self._google_google_workspace_email_for_shared_drives_sync()
-            )
-
-            shared_drives_client = self.google_drive_client(
-                impersonate_email=email_for_shared_drives_sync
-            )
-
-            # Build a path lookup, parentId -> parent path
-            resolved_paths = await self.resolve_paths(
-                google_drive_client=shared_drives_client
-            )
-
-            # sync shared drives
-            self._logger.debug(
-                f"Syncing shared drives using admin account: {email_for_shared_drives_sync}"
-            )
-            async for files_page in shared_drives_client.list_files(
-                fetch_permissions=self._dls_enabled(),
-                last_sync_time=self.last_sync_time(),
-            ):
-                # trashedTime(time when file was deleted) is a property exclusive to files present in shared drive
-                async for file, trashedTime in self.prepare_files(
-                    client=shared_drives_client,
-                    files_page=files_page,
-                    paths=resolved_paths,
-                    seen_ids=seen_ids,
-                ):
-                    if (
-                        trashedTime is None or trashedTime > self.last_sync_time()
-                    ) and file.get("trashed") is True:
-                        yield (
-                            file,
-                            partial(self.get_content, shared_drives_client, file),
-                            OP_DELETE,
-                        )
-                    elif (
-                        trashedTime is not None and trashedTime < self.last_sync_time()
-                    ) and file.get("trashed") is True:
-                        continue
-                    else:
-                        yield (
-                            file,
-                            partial(self.get_content, shared_drives_client, file),
-                            OP_INDEX,
-                        )
-
-        else:
-            # Build a path lookup, parentId -> parent path
-            resolved_paths = await self.resolve_paths()
-
-            google_drive_client = self.google_drive_client()
-
-            # sync anything shared with the service account
-            # shared drives can also be shared with service account
-            # making it possible to sync shared drives without domain wide delegation
-            async for files_page in google_drive_client.list_files(
-                fetch_permissions=self._dls_enabled(),
-                last_sync_time=self.last_sync_time(),
-            ):
-                async for file, trashedTime in self.prepare_files(
-                    client=google_drive_client,
-                    files_page=files_page,
-                    paths=resolved_paths,
-                    seen_ids=seen_ids,
-                ):
-                    if (
-                        trashedTime is None or trashedTime > self.last_sync_time()
-                    ) and file.get("trashed") is True:
-                        yield (
-                            file,
-                            partial(self.get_content, google_drive_client, file),
-                            OP_DELETE,
-                        )
-                    elif (
-                        trashedTime is not None and trashedTime < self.last_sync_time()
-                    ) and file.get("trashed") is True:
-                        continue
-                    else:
-                        yield (
-                            file,
-                            partial(self.get_content, google_drive_client, file),
-                            OP_INDEX,
-                        )
-        self.update_sync_timestamp_cursor(timestamp)
-
-    def init_sync_cursor(self):
-        if not self._sync_cursor:
-            self._sync_cursor = {
-                CURSOR_GOOGLE_DRIVE_KEY: {},
-                CURSOR_SYNC_TIMESTAMP: iso_zulu(),
-            }
-
-        return self._sync_cursor
diff --git a/connectors/sources/graphql.py b/connectors/sources/graphql.py
index c4541029..4319d8d9 100644
--- a/connectors/sources/graphql.py
+++ b/connectors/sources/graphql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """GraphQL source module responsible to fetch documents based on GraphQL Query."""
-
 import json
 import re
 from copy import deepcopy
@@ -60,9 +59,9 @@ class FieldVisitor(Visitor):
             for arg in node.arguments:
                 self.fields_dict[node.name.value].append(arg.name.value)
                 if isinstance(arg.value, VariableNode):
-                    self.variables_dict[node.name.value][arg.name.value] = (
-                        arg.value.name.value
-                    )
+                    self.variables_dict[node.name.value][
+                        arg.name.value
+                    ] = arg.value.name.value
 
 
 class UnauthorizedException(Exception):
@@ -212,9 +211,9 @@ class GraphQLClient:
                 ) = self.extract_pagination_info(data)
 
                 if has_next_page and end_cursor:
-                    self.variables[visitor.variables_dict[pagination_key]["after"]] = (
-                        end_cursor
-                    )
+                    self.variables[
+                        visitor.variables_dict[pagination_key]["after"]
+                    ] = end_cursor
                     has_new_page = True
 
                 for documents in self.extract_graphql_data_items(data=data):
diff --git a/connectors/sources/jira.py b/connectors/sources/jira.py
index f256e01f..711ddfa4 100644
--- a/connectors/sources/jira.py
+++ b/connectors/sources/jira.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Jira source module responsible to fetch documents from Jira on-prem or cloud server."""
-
+"""Jira source module responsible to fetch documents from Jira on-prem or cloud server.
+"""
 import asyncio
 from copy import copy
 from datetime import datetime
@@ -239,8 +239,7 @@ class JiraClient:
             response: Return api response.
         """
         url = url_kwargs.get("url") or parse.urljoin(
-            self.host_url,
-            URLS[url_name].format(**url_kwargs),  # pyright: ignore
+            self.host_url, URLS[url_name].format(**url_kwargs)  # pyright: ignore
         )
         self._logger.debug(f"Making a GET call for url: {url}")
         while True:
@@ -941,7 +940,9 @@ class JiraDataSource(BaseDataSource):
             document_with_access_control = self._decorate_with_access_control(
                 document=document, access_control=issue_access_control
             )
-            await self.queue.put((document_with_access_control, None))  # pyright: ignore
+            await self.queue.put(
+                (document_with_access_control, None)
+            )  # pyright: ignore
             attachments = issue_metadata.get("fields", {}).get("attachment")
             if len(attachments) > 0:
                 await self._put_attachment(
diff --git a/connectors/sources/microsoft_teams.py b/connectors/sources/microsoft_teams.py
index 28a619f0..15aecdff 100644
--- a/connectors/sources/microsoft_teams.py
+++ b/connectors/sources/microsoft_teams.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Microsoft Teams source module responsible to fetch documents from Microsoft Teams."""
-
+"""Microsoft Teams source module responsible to fetch documents from Microsoft Teams.
+"""
 import asyncio
 import os
 from calendar import month_name
diff --git a/connectors/sources/mssql.py b/connectors/sources/mssql.py
index 377b9bde..c05c3a51 100644
--- a/connectors/sources/mssql.py
+++ b/connectors/sources/mssql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Microsoft SQL source module is responsible to fetch documents from Microsoft SQL."""
-
 import asyncio
 import os
 from functools import cached_property, partial
@@ -82,7 +81,6 @@ class MSSQLAdvancedRulesValidator(AdvancedRulesValidator):
         "properties": {
             "tables": {"type": "array", "minItems": 1},
             "query": {"type": "string", "minLength": 1},
-            "id_columns": {"type": "array", "minItems": 1},
         },
         "required": ["tables", "query"],
         "additionalProperties": False,
@@ -232,8 +230,7 @@ class MSSQLClient:
             loop = asyncio.get_running_loop()
             if self.connection is None:
                 self.connection = await loop.run_in_executor(
-                    executor=None,
-                    func=self.engine.connect,  # pyright: ignore
+                    executor=None, func=self.engine.connect  # pyright: ignore
                 )
             cursor = await loop.run_in_executor(
                 executor=None,
@@ -319,15 +316,23 @@ class MSSQLClient:
 
     async def get_table_last_update_time(self, table):
         self._logger.debug(f"Fetching last updated time for table: {table}")
-        async for [last_update_time] in fetch(
-            cursor_func=partial(
-                self.get_cursor,
-                self.queries.table_last_update_time(schema=self.schema, table=table),
-            ),
-            fetch_size=1,
-            retry_count=self.retry_count,
-        ):
-            return last_update_time
+        [last_update_time] = await anext(
+            fetch(
+                cursor_func=partial(
+                    self.get_cursor,
+                    self.queries.table_last_update_time(
+                        schema=self.schema,
+                        table=table,
+                    ),
+                ),
+                fetch_size=1,
+                retry_count=self.retry_count,
+            )
+        )
+        self._logger.debug(
+            f'Last updated time for table "{table}" is {last_update_time}'
+        )
+        return last_update_time
 
     async def data_streamer(self, table=None, query=None):
         """Streaming data from a table
@@ -533,7 +538,7 @@ class MSSQLDataSource(BaseDataSource):
             column_names=column_names, schema=self.schema, tables=tables
         )
 
-        if (not set(primary_key_columns) - set(column_names)) or primary_key_columns:
+        if not set(primary_key_columns) - set(column_names):
             async for row in streamer:
                 row = dict(zip(column_names, row, strict=True))
                 yield row
@@ -561,7 +566,7 @@ class MSSQLDataSource(BaseDataSource):
                 f'Something went wrong while fetching document for table "{table}". Error: {exception}'
             )
 
-    async def fetch_documents_from_query(self, tables, query, id_columns):
+    async def fetch_documents_from_query(self, tables, query):
         """Fetches all the data from the given query and format them in Elasticsearch documents
 
         Args:
@@ -572,12 +577,10 @@ class MSSQLDataSource(BaseDataSource):
             Dict: Document to be indexed
         """
         self._logger.info(
-            f"Fetching records for tables {tables} using the custom query: {query} and available id_columns: {id_columns}"
+            f"Fetching records for tables {tables} using the custom query: {query}"
         )
         try:
-            docs_generator = self._yield_docs_custom_query(
-                tables=tables, query=query, id_columns=id_columns
-            )
+            docs_generator = self._yield_docs_custom_query(tables=tables, query=query)
             async for doc in docs_generator:
                 yield doc
         except (InternalClientError, ProgrammingError) as exception:
@@ -585,12 +588,8 @@ class MSSQLDataSource(BaseDataSource):
                 f"Something went wrong while fetching document for query {query} and tables {', '.join(tables)}. Error: {exception}"
             )
 
-    async def _yield_docs_custom_query(self, tables, query, id_columns=None):
+    async def _yield_docs_custom_query(self, tables, query):
         primary_key_columns = await self.get_primary_key(tables=tables)
-
-        if id_columns:
-            primary_key_columns = id_columns
-
         if not primary_key_columns:
             self._logger.warning(
                 f"Skipping tables {', '.join(tables)} from database {self.database} since no primary key is associated with them. Assign primary key to the tables to index it in the next sync interval."
@@ -606,19 +605,12 @@ class MSSQLDataSource(BaseDataSource):
                 ],
             )
         )
-
-        last_update_times = [
-            time_value for time_value in last_update_times if time_value is not None
-        ]
-
         last_update_time = (
             max(last_update_times) if len(last_update_times) else iso_utc()
         )
 
         async for row in self.yield_rows_for_query(
-            primary_key_columns=primary_key_columns,
-            tables=tables,
-            query=query,
+            primary_key_columns=primary_key_columns, tables=tables, query=query
         ):
             doc_id = f"{self.database}_{self.schema}_{hash_id(list(tables), row, primary_key_columns)}"
 
@@ -682,18 +674,9 @@ class MSSQLDataSource(BaseDataSource):
             for rule in advanced_rules:
                 query = rule.get("query")
                 tables = rule.get("tables")
-                id_columns = rule.get("id_columns", [])
-
-                id_columns_str = ""
-                for i, table in enumerate(tables):
-                    if i == 0:
-                        id_columns_str = f"{self.schema}_{table}"
-                    else:
-                        id_columns_str = f"{id_columns_str}_{table}"
-                id_columns = [f"{id_columns_str}_{column}" for column in id_columns]
 
                 async for row in self.fetch_documents_from_query(
-                    tables=tables, query=query, id_columns=id_columns
+                    tables=tables, query=query
                 ):
                     yield row, None
         else:
diff --git a/connectors/sources/mysql.py b/connectors/sources/mysql.py
index 9dfc236d..5755f20f 100644
--- a/connectors/sources/mysql.py
+++ b/connectors/sources/mysql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """MySQL source module responsible to fetch documents from MySQL"""
-
 import re
 
 import aiomysql
@@ -32,7 +31,7 @@ from connectors.utils import (
 SPLIT_BY_COMMA_OUTSIDE_BACKTICKS_PATTERN = re.compile(r"`(?:[^`]|``)+`|\w+")
 
 MAX_POOL_SIZE = 10
-DEFAULT_FETCH_SIZE = 5000
+DEFAULT_FETCH_SIZE = 50
 RETRIES = 3
 RETRY_INTERVAL = 2
 
@@ -51,11 +50,8 @@ class MySQLQueries(Queries):
     def table_primary_key(self, table):
         return f"SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '{self.database}' AND TABLE_NAME = '{table}' AND COLUMN_KEY = 'PRI'"
 
-    def table_data(self, table, primary_keys=None, limit=None, offset=None):
-        if primary_keys:
-            return f"SELECT * FROM `{self.database}`.`{table}` ORDER BY '{', '.join(primary_keys)}' LIMIT {limit} OFFSET {offset}"
-        else:
-            return f"SELECT * FROM `{self.database}`.`{table}`"
+    def table_data(self, table):
+        return f"SELECT * FROM `{self.database}`.`{table}`"
 
     def table_last_update_time(self, table):
         return f"SELECT UPDATE_TIME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '{self.database}' AND TABLE_NAME = '{table}'"
@@ -66,8 +62,8 @@ class MySQLQueries(Queries):
     def ping(self):
         pass
 
-    def table_data_count(self, table):
-        return f"SELECT COUNT(*) FROM `{self.database}`.`{table}`"
+    def table_data_count(self, **kwargs):
+        pass
 
     def all_schemas(self):
         pass
@@ -79,7 +75,6 @@ class MySQLAdvancedRulesValidator(AdvancedRulesValidator):
         "properties": {
             "tables": {"type": "array", "minItems": 1},
             "query": {"type": "string", "minLength": 1},
-            "id_columns": {"type": "array", "minItems": 1},
         },
         "required": ["tables", "query"],
         "additionalProperties": False,
@@ -255,71 +250,18 @@ class MySQLClient:
         interval=RETRY_INTERVAL,
         strategy=RetryStrategy.EXPONENTIAL_BACKOFF,
     )
-    async def yield_rows_for_table(self, table, primary_keys, table_row_count):
-        offset = 0
-        while offset < table_row_count:
-            async for row in self._fetchmany_in_batches(
-                self.queries.table_data(
-                    table,
-                    primary_keys=primary_keys,
-                    limit=self.fetch_size,
-                    offset=offset,
-                )
-            ):
-                if row:
-                    yield row
-                else:
-                    break
-            offset += self.fetch_size
-
-    async def _get_table_row_count_for_query(self, query):
-        table_row_count_query = re.sub(
-            r"SELECT\s.*?\sFROM",
-            "SELECT COUNT(*) FROM",
-            query,
-            flags=re.IGNORECASE | re.DOTALL,
-        )
-        async with self.connection.cursor(aiomysql.cursors.SSCursor) as cursor:
-            await cursor.execute(table_row_count_query)
-            table_row_count = await cursor.fetchone()
-            return int(table_row_count[0])
-
-    def _update_query_with_pagination_attributes(
-        self, query, offset, primary_key_columns
-    ):
-        updated_query = ""
-        has_orderby = bool(re.search(r"\bORDER\s+BY\b", query, flags=re.IGNORECASE))
-        # Checking if custom query has a semicolon at the end or not
-        if query.endswith(";"):
-            query = query[:-1]
-        if has_orderby:
-            updated_query = f"{query} LIMIT {self.fetch_size} OFFSET {offset};"
-        else:
-            updated_query = f"{query} ORDER BY {', '.join(primary_key_columns)} LIMIT {self.fetch_size} OFFSET {offset};"
-
-        return updated_query
+    async def yield_rows_for_table(self, table):
+        async for row in self._fetchmany_in_batches(self.queries.table_data(table)):
+            yield row
 
     @retryable(
         retries=RETRIES,
         interval=RETRY_INTERVAL,
         strategy=RetryStrategy.EXPONENTIAL_BACKOFF,
     )
-    async def yield_rows_for_query(self, query, primary_key_columns):
-        table_row_count_for_query = await self._get_table_row_count_for_query(
-            query=query
-        )
-        offset = 0
-        while offset < table_row_count_for_query:
-            async for row in self._fetchmany_in_batches(
-                query=self._update_query_with_pagination_attributes(
-                    query=query, offset=offset, primary_key_columns=primary_key_columns
-                )
-            ):
-                if row:
-                    yield row
-                else:
-                    break
-            offset += self.fetch_size
+    async def yield_rows_for_query(self, query):
+        async for row in self._fetchmany_in_batches(query):
+            yield row
 
     async def _fetchmany_in_batches(self, query):
         async with self.connection.cursor(aiomysql.cursors.SSCursor) as cursor:
@@ -329,15 +271,19 @@ class MySQLClient:
             successful_batches = 0
 
             try:
-                rows = await cursor.fetchall()
+                while True:
+                    rows = await cursor.fetchmany(self.fetch_size)
 
-                for row in rows:
-                    yield row
+                    if not rows:
+                        break
 
-                fetched_rows += len(rows)
-                successful_batches += 1
+                    for row in rows:
+                        yield row
 
-                await self._sleeps.sleep(0)
+                    fetched_rows += len(rows)
+                    successful_batches += 1
+
+                    await self._sleeps.sleep(0)
             except IndexError as e:
                 self._logger.exception(
                     f"Fetched {fetched_rows} rows in {successful_batches} batches. Encountered exception {e} in batch {successful_batches + 1}."
@@ -540,12 +486,12 @@ class MySqlDataSource(BaseDataSource):
             for query_info in advanced_rules:
                 tables = query_info.get("tables", [])
                 query = query_info.get("query", "")
-                id_columns = query_info.get("id_columns", [])
+
                 self._logger.debug(
-                    f"Fetching rows from table '{format_list(tables)}' in database '{self.database}' with a custom query and given ID column '{id_columns}'."
+                    f"Fetching rows from table '{format_list(tables)}' in database '{self.database}' with a custom query."
                 )
 
-                async for row in self.fetch_documents(tables, query, id_columns):
+                async for row in self.fetch_documents(tables, query):
                     yield row, None
 
                 await self._sleeps.sleep(0)
@@ -555,7 +501,7 @@ class MySqlDataSource(BaseDataSource):
             async for row in self.fetch_documents(tables):
                 yield row, None
 
-    async def fetch_documents(self, tables, query=None, id_columns=None):
+    async def fetch_documents(self, tables, query=None):
         """If query is not present it fetches all rows from all tables.
         Otherwise, the custom query is executed.
 
@@ -571,7 +517,7 @@ class MySqlDataSource(BaseDataSource):
 
         async with self.mysql_client() as client:
             docs_generator = (
-                self._yield_docs_custom_query(client, tables, query, id_columns)
+                self._yield_docs_custom_query(client, tables, query)
                 if query is not None
                 else self._yield_all_docs_from_tables(client, tables)
             )
@@ -592,13 +538,7 @@ class MySqlDataSource(BaseDataSource):
             last_update_time = await client.get_last_update_time(table)
             column_names = await client.get_column_names_for_table(table)
 
-            async with client.connection.cursor(aiomysql.cursors.SSCursor) as cursor:
-                await cursor.execute(client.queries.table_data_count(table=table))
-                table_row_count = await cursor.fetchone()
-
-            async for row in client.yield_rows_for_table(
-                table, primary_key_columns, int(table_row_count[0])
-            ):
+            async for row in client.yield_rows_for_table(table):
                 yield row2doc(
                     row=row,
                     column_names=column_names,
@@ -607,7 +547,7 @@ class MySqlDataSource(BaseDataSource):
                     timestamp=last_update_time,
                 )
 
-    async def _yield_docs_custom_query(self, client, tables, query, id_columns):
+    async def _yield_docs_custom_query(self, client, tables, query):
         primary_key_columns = [
             await client.get_primary_key_column_names(table) for table in tables
         ]
@@ -615,9 +555,6 @@ class MySqlDataSource(BaseDataSource):
             [column for columns in primary_key_columns for column in columns]
         )
 
-        if id_columns:
-            primary_key_columns = id_columns
-
         if not primary_key_columns:
             self._logger.warning(
                 f"Skipping tables {format_list(tables)} from database {self.database} since no primary key is associated with them. Assign primary key to the tables to index it in the next sync interval."
@@ -632,12 +569,6 @@ class MySqlDataSource(BaseDataSource):
         )
         column_names = await client.get_column_names_for_query(query=query)
 
-        if set(primary_key_columns) - set(column_names):
-            self._logger.warning(
-                f"Skipping query {query} for tables {', '.join(tables)} as primary key column name/id_column is not present in query."
-            )
-            return
-
         async for row in client.yield_rows_for_query(query):
             yield row2doc(
                 row=row,
diff --git a/connectors/sources/network_drive.py b/connectors/sources/network_drive.py
index 1928c5ea..965bb6e6 100644
--- a/connectors/sources/network_drive.py
+++ b/connectors/sources/network_drive.py
@@ -3,17 +3,17 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Network Drive source module responsible to fetch documents from Network Drive."""
-
+"""Network Drive source module responsible to fetch documents from Network Drive.
+"""
 import asyncio
 import csv
 from collections import deque
 from functools import cached_property, partial
 
 import fastjsonschema
-import requests.exceptions
 import smbclient
 import winrm
+from requests.exceptions import ConnectionError
 from smbprotocol.exceptions import (
     SMBConnectionClosed,
     SMBException,
@@ -805,9 +805,9 @@ class NASDataSource(BaseDataSource):
                         user=user,
                         sid=sid,
                     )
-            except requests.exceptions.ConnectionError as exception:
+            except ConnectionError as exception:
                 msg = "Something went wrong"
-                raise requests.exceptions.ConnectionError(msg) from exception
+                raise ConnectionError(msg) from exception
 
     async def get_entity_permission(self, file_path, file_type, groups_info):
         """Processes permissions for a network drive, focusing on key terms:
@@ -880,12 +880,9 @@ class NASDataSource(BaseDataSource):
         if filtering and filtering.has_advanced_rules():
             advanced_rules = filtering.get_advanced_rules()
             async for document in self.fetch_filtered_directory(advanced_rules):
-                yield (
-                    document,
-                    partial(self.get_content, document)
-                    if document["type"] == "file"
-                    else None,
-                )
+                yield document, partial(self.get_content, document) if document[
+                    "type"
+                ] == "file" else None
 
         else:
             groups_info = {}
@@ -895,11 +892,8 @@ class NASDataSource(BaseDataSource):
             async for document in self.traverse_diretory(
                 path=rf"\\{self.server_ip}/{self.drive_path}"
             ):
-                yield (
-                    await self._decorate_with_access_control(
-                        document, document["path"], document["type"], groups_info
-                    ),
-                    partial(self.get_content, document)
-                    if document["type"] == "file"
-                    else None,
-                )
+                yield await self._decorate_with_access_control(
+                    document, document["path"], document["type"], groups_info
+                ), partial(self.get_content, document) if document[
+                    "type"
+                ] == "file" else None
diff --git a/connectors/sources/notion.py b/connectors/sources/notion.py
index 9cff562f..c426bf82 100644
--- a/connectors/sources/notion.py
+++ b/connectors/sources/notion.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Notion source module responsible to fetch documents from the Notion Platform."""
-
 import asyncio
 import json
 import os
@@ -174,7 +173,9 @@ class NotionClient:
                 ):
                     yield child_block
 
-                    async for grandchild in fetch_children_recursively(child_block):  # pyright: ignore
+                    async for grandchild in fetch_children_recursively(
+                        child_block
+                    ):  # pyright: ignore
                         yield grandchild
 
         try:
@@ -622,9 +623,8 @@ class NotionDataSource(BaseDataSource):
                 else:
                     file_url = child_block.get("file", {}).get("file", {}).get("url")
                     child_block = self._format_doc(child_block)
-                    yield (
-                        child_block,
-                        partial(self.get_content, copy(child_block), file_url),
+                    yield child_block, partial(
+                        self.get_content, copy(child_block), file_url
                     )
 
         if self.index_comments is True:
diff --git a/connectors/sources/onedrive.py b/connectors/sources/onedrive.py
index 709c451b..7a8d08df 100644
--- a/connectors/sources/onedrive.py
+++ b/connectors/sources/onedrive.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""OneDrive source module responsible to fetch documents from OneDrive."""
-
+"""OneDrive source module responsible to fetch documents from OneDrive.
+"""
 import asyncio
 import json
 import os
@@ -573,8 +573,6 @@ class OneDriveDataSource(BaseDataSource):
         )
 
     def prepare_doc(self, file):
-        file_info = file.get("file", {}) or {}
-
         modified_document = {
             "type": FILE if file.get(FILE) else FOLDER,
             "title": file.get("name"),
@@ -583,7 +581,6 @@ class OneDriveDataSource(BaseDataSource):
             "created_at": file.get("createdDateTime"),
             "size": file.get("size"),
             "url": file.get("webUrl"),
-            "mime_type": file_info.get("mimeType"),
         }
         if self._dls_enabled():
             modified_document[ACCESS_CONTROL] = file[ACCESS_CONTROL]
diff --git a/connectors/sources/oracle.py b/connectors/sources/oracle.py
index e5de6393..1c11c764 100644
--- a/connectors/sources/oracle.py
+++ b/connectors/sources/oracle.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Oracle source module is responsible to fetch documents from Oracle."""
-
 import asyncio
 import os
 from functools import cached_property, partial
@@ -144,8 +143,7 @@ class OracleClient:
             loop = asyncio.get_running_loop()
             if self.connection is None:
                 self.connection = await loop.run_in_executor(
-                    executor=None,
-                    func=self.engine.connect,  # pyright: ignore
+                    executor=None, func=self.engine.connect  # pyright: ignore
                 )
             cursor = await loop.run_in_executor(
                 executor=None,
diff --git a/connectors/sources/outlook.py b/connectors/sources/outlook.py
index 47a49516..dc3c612a 100644
--- a/connectors/sources/outlook.py
+++ b/connectors/sources/outlook.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Microsoft Outlook source module is responsible to fetch documents from Outlook server or cloud platforms."""
-
+"""Microsoft Outlook source module is responsible to fetch documents from Outlook server or cloud platforms.
+"""
 import asyncio
 import os
 from copy import copy
@@ -941,14 +941,9 @@ class OutlookDataSource(BaseDataSource):
                 attachment_type=attachment_type,
                 timezone=timezone,
             )
-            yield (
-                self._decorate_with_access_control(
-                    document, [account.primary_smtp_address]
-                ),
-                partial(
-                    self.get_content, attachment=copy(attachment), timezone=timezone
-                ),
-            )
+            yield self._decorate_with_access_control(
+                document, [account.primary_smtp_address]
+            ), partial(self.get_content, attachment=copy(attachment), timezone=timezone)
 
     async def _fetch_mails(self, account, timezone):
         async for mail, mail_type in self.client.get_mails(account=account):
@@ -957,12 +952,9 @@ class OutlookDataSource(BaseDataSource):
                 mail_type=mail_type,
                 timezone=timezone,
             )
-            yield (
-                self._decorate_with_access_control(
-                    document, [account.primary_smtp_address]
-                ),
-                None,
-            )
+            yield self._decorate_with_access_control(
+                document, [account.primary_smtp_address]
+            ), None
 
             if mail.has_attachments:
                 async for doc in self._fetch_attachments(
@@ -980,12 +972,9 @@ class OutlookDataSource(BaseDataSource):
                 contact=contact,
                 timezone=timezone,
             )
-            yield (
-                self._decorate_with_access_control(
-                    document, [account.primary_smtp_address]
-                ),
-                None,
-            )
+            yield self._decorate_with_access_control(
+                document, [account.primary_smtp_address]
+            ), None
 
     async def _fetch_tasks(self, account, timezone):
         self._logger.debug(f"Fetching tasks for {account.primary_smtp_address}")
@@ -993,12 +982,9 @@ class OutlookDataSource(BaseDataSource):
             document = self.doc_formatter.task_doc_formatter(
                 task=task, timezone=timezone
             )
-            yield (
-                self._decorate_with_access_control(
-                    document, [account.primary_smtp_address]
-                ),
-                None,
-            )
+            yield self._decorate_with_access_control(
+                document, [account.primary_smtp_address]
+            ), None
 
             if task.has_attachments:
                 async for doc in self._fetch_attachments(
@@ -1041,12 +1027,9 @@ class OutlookDataSource(BaseDataSource):
             child_calendar=str(child_calendar),
             timezone=timezone,
         )
-        yield (
-            self._decorate_with_access_control(
-                document, [account.primary_smtp_address]
-            ),
-            None,
-        )
+        yield self._decorate_with_access_control(
+            document, [account.primary_smtp_address]
+        ), None
 
         if calendar.has_attachments:
             async for doc in self._fetch_attachments(
diff --git a/connectors/sources/postgresql.py b/connectors/sources/postgresql.py
index 596b27da..62b8a250 100644
--- a/connectors/sources/postgresql.py
+++ b/connectors/sources/postgresql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Postgresql source module is responsible to fetch documents from PostgreSQL."""
-
 import ssl
 from functools import cached_property, partial
 from urllib.parse import quote
diff --git a/connectors/sources/s3.py b/connectors/sources/s3.py
index 3de3210d..4602600f 100644
--- a/connectors/sources/s3.py
+++ b/connectors/sources/s3.py
@@ -296,13 +296,10 @@ class S3DataSource(BaseDataSource):
                     document = await self.format_document(
                         bucket_name=bucket, bucket_object=obj_summary
                     )
-                    yield (
-                        document,
-                        partial(
-                            self.get_content,
-                            doc=document,
-                            s3_client=s3_client,
-                        ),
+                    yield document, partial(
+                        self.get_content,
+                        doc=document,
+                        s3_client=s3_client,
                     )
 
     async def get_content(self, doc, s3_client, timestamp=None, doit=None):
diff --git a/connectors/sources/salesforce.py b/connectors/sources/salesforce.py
index aed8d7a9..8f5f3e00 100644
--- a/connectors/sources/salesforce.py
+++ b/connectors/sources/salesforce.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Salesforce source module responsible to fetch documents from Salesforce."""
-
 import os
 import re
 from datetime import datetime
@@ -1494,12 +1493,9 @@ class SalesforceDataSource(BaseDataSource):
                     access_control = self.permissions.get(
                         doc.get("attributes", {}).get("type"), []
                     )
-                    yield (
-                        self.doc_mapper.map_salesforce_objects(
-                            self._decorate_with_access_control(doc, access_control)
-                        ),
-                        None,
-                    )
+                    yield self.doc_mapper.map_salesforce_objects(
+                        self._decorate_with_access_control(doc, access_control)
+                    ), None
 
         else:
             for sobject in [
@@ -1518,76 +1514,53 @@ class SalesforceDataSource(BaseDataSource):
             async for account in self.salesforce_client.get_accounts():
                 content_docs.extend(self._parse_content_documents(account))
                 access_control = self.permissions.get("Account", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(account, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(account, access_control)
+                ), None
 
             async for opportunity in self.salesforce_client.get_opportunities():
                 content_docs.extend(self._parse_content_documents(opportunity))
                 access_control = self.permissions.get("Opportunity", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(opportunity, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(opportunity, access_control)
+                ), None
 
             async for contact in self.salesforce_client.get_contacts():
                 content_docs.extend(self._parse_content_documents(contact))
                 access_control = self.permissions.get("Contact", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(contact, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(contact, access_control)
+                ), None
 
             async for lead in self.salesforce_client.get_leads():
                 content_docs.extend(self._parse_content_documents(lead))
                 access_control = self.permissions.get("Lead", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(lead, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(lead, access_control)
+                ), None
 
             async for campaign in self.salesforce_client.get_campaigns():
                 content_docs.extend(self._parse_content_documents(campaign))
                 access_control = self.permissions.get("Campaign", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(campaign, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(campaign, access_control)
+                ), None
 
             async for case in self.salesforce_client.get_cases():
                 content_docs.extend(self._parse_content_documents(case))
                 access_control = self.permissions.get("Case", [])
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(case, access_control)
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(case, access_control)
+                ), None
 
             async for custom_object in self.salesforce_client.get_custom_objects():
                 content_docs.extend(self._parse_content_documents(custom_object))
                 access_control = self.permissions.get(
                     custom_object.get("attributes", {}).get("type"), []
                 )
-                yield (
-                    self.doc_mapper.map_salesforce_objects(
-                        self._decorate_with_access_control(
-                            custom_object, access_control
-                        )
-                    ),
-                    None,
-                )
+                yield self.doc_mapper.map_salesforce_objects(
+                    self._decorate_with_access_control(custom_object, access_control)
+                ), None
 
         # Note: this could possibly be done on the fly if memory becomes an issue
         content_docs = self._combine_duplicate_content_docs(content_docs)
diff --git a/connectors/sources/servicenow.py b/connectors/sources/servicenow.py
index b2afe955..2e5bd207 100644
--- a/connectors/sources/servicenow.py
+++ b/connectors/sources/servicenow.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """ServiceNow source module responsible to fetch documents from ServiceNow."""
-
 import base64
 import json
 import os
@@ -321,9 +320,7 @@ class ServiceNowClient:
 
             for batched_apis_index in range(0, len(record_apis), TABLE_BATCH_SIZE):
                 batched_apis = record_apis[
-                    batched_apis_index : (
-                        batched_apis_index + TABLE_BATCH_SIZE
-                    )  # noqa
+                    batched_apis_index : (batched_apis_index + TABLE_BATCH_SIZE)  # noqa
                 ]
                 async for table_data in self.get_data(batched_apis=batched_apis):
                     for mapping in table_data:  # pyright: ignore
@@ -413,7 +410,7 @@ class ServiceNowAdvancedRulesValidator(AdvancedRulesValidator):
             return SyncRuleValidationResult(
                 SyncRuleValidationResult.ADVANCED_RULES,
                 is_valid=False,
-                validation_message=f"Services '{', '.join(invalid_services)}' are not available. Available services are: '{', '.join(set(services_to_filter) - set(invalid_services))}'",
+                validation_message=f"Services '{', '.join(invalid_services)}' are not available. Available services are: '{', '.join(set(services_to_filter)-set(invalid_services))}'",
             )
 
         await self.source.servicenow_client.close_session()
@@ -689,7 +686,7 @@ class ServiceNowDataSource(BaseDataSource):
                 0, len(attachment_apis), ATTACHMENT_BATCH_SIZE
             ):
                 batched_apis = attachment_apis[
-                    batched_apis_index :   (  # noqa
+                    batched_apis_index : (  # noqa
                         batched_apis_index + ATTACHMENT_BATCH_SIZE
                     )
                 ]
@@ -818,9 +815,7 @@ class ServiceNowDataSource(BaseDataSource):
 
         for batched_apis_index in range(0, len(record_apis), TABLE_BATCH_SIZE):
             batched_apis = record_apis[
-                batched_apis_index : (
-                    batched_apis_index + TABLE_BATCH_SIZE
-                )  # noqa
+                batched_apis_index : (batched_apis_index + TABLE_BATCH_SIZE)  # noqa
             ]
             yield batched_apis
 
diff --git a/connectors/sources/sharepoint_online.py b/connectors/sources/sharepoint_online.py
index 99bfb615..81ec38d0 100644
--- a/connectors/sources/sharepoint_online.py
+++ b/connectors/sources/sharepoint_online.py
@@ -589,20 +589,14 @@ class SharepointOnlineClient:
             return
 
     async def site_collections(self):
-        try:
-            filter_ = url_encode("siteCollection/root ne null")
-            select = "siteCollection,webUrl"
+        filter_ = url_encode("siteCollection/root ne null")
+        select = "siteCollection,webUrl"
 
-            async for page in self._graph_api_client.scroll(
-                f"{GRAPH_API_URL}/sites/?$filter={filter_}&$select={select}"
-            ):
-                for site_collection in page:
-                    yield site_collection
-        except PermissionsMissing:
-            self._logger.warning(
-                "Looks like 'Sites.Read.All' permission is missing to fetch all root-level site collections, hence fetching only tenant root site"
-            )
-            yield await self._graph_api_client.fetch(url=f"{GRAPH_API_URL}/sites/root")
+        async for page in self._graph_api_client.scroll(
+            f"{GRAPH_API_URL}/sites/?$filter={filter_}&$select={select}"
+        ):
+            for site_collection in page:
+                yield site_collection
 
     async def site_role_assignments(self, site_web_url):
         self._validate_sharepoint_rest_url(site_web_url)
@@ -724,23 +718,16 @@ class SharepointOnlineClient:
 
     async def _all_sites(self, sharepoint_host, allowed_root_sites):
         select = ""
-        try:
-            async for page in self._graph_api_client.scroll(
-                f"{GRAPH_API_URL}/sites/{sharepoint_host}/sites?search=*&$select={select}"
-            ):
-                for site in page:
-                    # Filter out site collections that are not needed
-                    if [WILDCARD] != allowed_root_sites and site[
-                        "name"
-                    ] not in allowed_root_sites:
-                        continue
-                    yield site
-        except PermissionsMissing as exception:
-            if allowed_root_sites == [WILDCARD]:
-                msg = "The configuration field 'Comma-separated list of sites' with '*' value is only compatible with 'Sites.Read.All' permission."
-            else:
-                msg = "To enumerate all sites, the connector requires 'Sites.Read.All' permission"
-            raise PermissionsMissing(msg) from exception
+        async for page in self._graph_api_client.scroll(
+            f"{GRAPH_API_URL}/sites/{sharepoint_host}/sites?search=*&$select={select}"
+        ):
+            for site in page:
+                # Filter out site collections that are not needed
+                if [WILDCARD] != allowed_root_sites and site[
+                    "name"
+                ] not in allowed_root_sites:
+                    continue
+                yield site
 
     async def _fetch_site_and_subsites_by_path(self, sharepoint_host, allowed_site):
         self._logger.debug(
@@ -771,7 +758,7 @@ class SharepointOnlineClient:
 
     async def _recurse_sites(self, site_with_subsites):
         subsites = site_with_subsites.pop("sites", [])
-        site_with_subsites.pop("sites@odata.context", None)  # remove unnecessary field
+        site_with_subsites.pop("sites@odata.context", None)  # remove unnecesary field
         yield site_with_subsites
         if subsites:
             async for site in self._scroll_subsites_by_parent_id(
@@ -1629,26 +1616,20 @@ class SharepointOnlineDataSource(BaseDataSource):
                     site_admin_access_control,
                 ) = await self._site_access_control(site)
 
-                yield (
-                    self._decorate_with_access_control(site, site_access_control),
-                    None,
-                )
+                yield self._decorate_with_access_control(
+                    site, site_access_control
+                ), None
 
                 async for site_drive in self.site_drives(site):
-                    yield (
-                        self._decorate_with_access_control(
-                            site_drive, site_access_control
-                        ),
-                        None,
-                    )
+                    yield self._decorate_with_access_control(
+                        site_drive, site_access_control
+                    ), None
 
                     async for page in self.client.drive_items(site_drive["id"]):
                         for drive_items_batch in iterable_batches_generator(
                             page.items, SPO_API_MAX_BATCH_SIZE
                         ):
-                            async for (
-                                drive_item
-                            ) in self._drive_items_batch_with_permissions(
+                            async for drive_item in self._drive_items_batch_with_permissions(
                                 site_drive["id"], drive_items_batch, site["webUrl"]
                             ):
                                 drive_item["_id"] = drive_item["id"]
@@ -1666,11 +1647,8 @@ class SharepointOnlineDataSource(BaseDataSource):
                                         drive_item, site_access_control
                                     )
 
-                                yield (
-                                    drive_item,
-                                    self.download_function(
-                                        drive_item, max_drive_item_age
-                                    ),
+                                yield drive_item, self.download_function(
+                                    drive_item, max_drive_item_age
                                 )
 
                         self.update_drive_delta_link(
@@ -1732,23 +1710,17 @@ class SharepointOnlineDataSource(BaseDataSource):
                     site_admin_access_control,
                 ) = await self._site_access_control(site)
 
-                yield (
-                    self._decorate_with_access_control(site, site_access_control),
-                    None,
-                    OP_INDEX,
-                )
+                yield self._decorate_with_access_control(
+                    site, site_access_control
+                ), None, OP_INDEX
 
                 # Edit operation on a drive_item doesn't update the
-                # lastModifiedDateTime of the parent site_drive. Therefore, we
+                # lastModifiedDateTime of the parent site_drive. Therfore, we
                 # set check_timestamp to False when iterating over site_drives.
                 async for site_drive in self.site_drives(site, check_timestamp=False):
-                    yield (
-                        self._decorate_with_access_control(
-                            site_drive, site_access_control
-                        ),
-                        None,
-                        OP_INDEX,
-                    )
+                    yield self._decorate_with_access_control(
+                        site_drive, site_access_control
+                    ), None, OP_INDEX
 
                     delta_link = self.get_drive_delta_link(site_drive["id"])
 
@@ -1758,9 +1730,7 @@ class SharepointOnlineDataSource(BaseDataSource):
                         for drive_items_batch in iterable_batches_generator(
                             page.items, SPO_API_MAX_BATCH_SIZE
                         ):
-                            async for (
-                                drive_item
-                            ) in self._drive_items_batch_with_permissions(
+                            async for drive_item in self._drive_items_batch_with_permissions(
                                 site_drive["id"], drive_items_batch, site["webUrl"]
                             ):
                                 drive_item["_id"] = drive_item["id"]
@@ -1778,13 +1748,9 @@ class SharepointOnlineDataSource(BaseDataSource):
                                         drive_item, site_access_control
                                     )
 
-                                yield (
-                                    drive_item,
-                                    self.download_function(
-                                        drive_item, max_drive_item_age
-                                    ),
-                                    self.drive_item_operation(drive_item),
-                                )
+                                yield drive_item, self.download_function(
+                                    drive_item, max_drive_item_age
+                                ), self.drive_item_operation(drive_item)
 
                         self.update_drive_delta_link(
                             drive_id=site_drive["id"], link=page.delta_link()
@@ -2002,13 +1968,10 @@ class SharepointOnlineDataSource(BaseDataSource):
 
                 content_type = list_item["contentType"]["name"]
 
-                if (
-                    content_type
-                    in [
-                        "Web Template Extensions",
-                        "Client Side Component Manifests",
-                    ]
-                ):  # TODO: make it more flexible. For now I ignore them cause they 404 all the time
+                if content_type in [
+                    "Web Template Extensions",
+                    "Client Side Component Manifests",
+                ]:  # TODO: make it more flexible. For now I ignore them cause they 404 all the time
                     continue
 
                 has_unique_role_assignments = False
@@ -2030,9 +1993,7 @@ class SharepointOnlineDataSource(BaseDataSource):
 
                         list_item_access_control = []
 
-                        async for (
-                            role_assignment
-                        ) in self.client.site_list_item_role_assignments(
+                        async for role_assignment in self.client.site_list_item_role_assignments(
                             site_web_url, site_list_name, list_item_natural_id
                         ):
                             list_item_access_control.extend(
@@ -2051,9 +2012,7 @@ class SharepointOnlineDataSource(BaseDataSource):
                     )
 
                 if "Attachments" in list_item["fields"]:
-                    async for (
-                        list_item_attachment
-                    ) in self.client.site_list_item_attachments(
+                    async for list_item_attachment in self.client.site_list_item_attachments(
                         site_web_url, site_list_name, list_item_natural_id
                     ):
                         list_item_attachment["_id"] = list_item_attachment["odata.id"]
@@ -2061,17 +2020,17 @@ class SharepointOnlineDataSource(BaseDataSource):
                         list_item_attachment["_timestamp"] = list_item[
                             "lastModifiedDateTime"
                         ]
-                        list_item_attachment["_original_filename"] = (
-                            list_item_attachment.get("FileName", "")
-                        )
+                        list_item_attachment[
+                            "_original_filename"
+                        ] = list_item_attachment.get("FileName", "")
                         if (
                             "ServerRelativePath" in list_item_attachment
                             and "DecodedUrl"
                             in list_item_attachment.get("ServerRelativePath", {})
                         ):
-                            list_item_attachment["webUrl"] = (
-                                f"https://{site_collection}{list_item_attachment['ServerRelativePath']['DecodedUrl']}"
-                            )
+                            list_item_attachment[
+                                "webUrl"
+                            ] = f"https://{site_collection}{list_item_attachment['ServerRelativePath']['DecodedUrl']}"
                         else:
                             self._logger.debug(
                                 f"Unable to populate webUrl for list item attachment {list_item_attachment['_id']}"
@@ -2119,9 +2078,7 @@ class SharepointOnlineDataSource(BaseDataSource):
 
                         site_list_access_control = []
 
-                        async for (
-                            role_assignment
-                        ) in self.client.site_list_role_assignments(
+                        async for role_assignment in self.client.site_list_role_assignments(
                             site_url, site_list_name
                         ):
                             site_list_access_control.extend(
@@ -2169,7 +2126,9 @@ class SharepointOnlineDataSource(BaseDataSource):
                 # full explanation of the bit-math: https://stackoverflow.com/questions/51897160/how-to-parse-getusereffectivepermissions-sharepoint-response-in-java
                 # this approach was confirmed as valid by a Microsoft Sr. Support Escalation Engineer
                 base_permission_low = int(
-                    nested_get_from_dict(binding, ["BasePermissions", "Low"], "0")  # pyright: ignore
+                    nested_get_from_dict(
+                        binding, ["BasePermissions", "Low"], "0"
+                    )  # pyright: ignore
                 )
                 role_type_kind = binding.get("RoleTypeKind", 0)
                 if (
@@ -2245,9 +2204,7 @@ class SharepointOnlineDataSource(BaseDataSource):
 
                         page_access_control = []
 
-                        async for (
-                            role_assignment
-                        ) in self.client.site_page_role_assignments(
+                        async for role_assignment in self.client.site_page_role_assignments(
                             url, site_page["Id"]
                         ):
                             page_access_control.extend(
@@ -2531,7 +2488,7 @@ class SharepointOnlineDataSource(BaseDataSource):
         email = user.get("Email", user.get("mail"))
         user_id = user.get(
             "id"
-        )  # not capital "Id", Sharepoint REST uses this for non-unique IDs like `1`
+        )  # not captial "Id", Sharepoint REST uses this for non-unique IDs like `1`
 
         if user_principal_name:
             user_access_control.append(_prefix_user(user_principal_name))
diff --git a/connectors/sources/sharepoint_server.py b/connectors/sources/sharepoint_server.py
index 10fd8cf0..bc1e856a 100644
--- a/connectors/sources/sharepoint_server.py
+++ b/connectors/sources/sharepoint_server.py
@@ -3,15 +3,14 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""SharePoint source module responsible to fetch documents from SharePoint Server."""
-
+"""SharePoint source module responsible to fetch documents from SharePoint Server.
+"""
 import os
-import re
 from functools import partial
 from urllib.parse import quote
 
-import httpx
-from httpx_ntlm import HttpNtlmAuth
+import aiohttp
+from aiohttp.client_exceptions import ServerDisconnectedError
 
 from connectors.access_control import (
     ACCESS_CONTROL,
@@ -19,7 +18,7 @@ from connectors.access_control import (
     prefix_identity,
 )
 from connectors.logger import logger
-from connectors.source import CHUNK_SIZE, BaseDataSource, ConfigurableFieldValueError
+from connectors.source import BaseDataSource, ConfigurableFieldValueError
 from connectors.utils import (
     TIKA_SUPPORTED_FILETYPES,
     CancellableSleeps,
@@ -28,14 +27,11 @@ from connectors.utils import (
     ssl_context,
 )
 
-BASIC_AUTH = "Basic"
-NTLM_AUTH = "NTLM"
 RETRY_INTERVAL = 2
 DEFAULT_RETRY_SECONDS = 30
 RETRIES = 3
 TOP = 5000
 PING = "ping"
-SITE = "site"
 SITES = "sites"
 LISTS = "lists"
 ATTACHMENT = "attachment"
@@ -74,21 +70,20 @@ VIEW_ROLE_TYPES = [
 
 
 URLS = {
-    PING: "{site_url}/_api/web/webs",
-    SITE: "{parent_site_url}/_api/web",
-    SITES: "{parent_site_url}/_api/web/webs?$skip={skip}&$top={top}",
-    LISTS: "{parent_site_url}/_api/web/lists?$skip={skip}&$top={top}&$expand=RootFolder&$filter=(Hidden eq false)",
-    ATTACHMENT: "{value}/_api/web/GetFileByServerRelativeUrl('{file_relative_url}')/$value",
-    DRIVE_ITEM: "{parent_site_url}/_api/web/lists(guid'{list_id}')/items?$select={selected_field}&$expand=File,Folder,Author,Editor&$top={top}",
-    LIST_ITEM: "{parent_site_url}/_api/web/lists(guid'{list_id}')/items?$expand=AttachmentFiles,Author,Editor&$select=*,FileRef,Author/Title,Editor/Title",
-    ATTACHMENT_DATA: "{parent_site_url}/_api/web/getfilebyserverrelativeurl('{file_relative_url}')",
-    USERS: "{parent_site_url}/_api/web/siteusers?$skip={skip}&$top={top}",
-    ADMIN_USERS: "{parent_site_url}/_api/web/siteusers?$skip={skip}&$top={top}&$filter=IsSiteAdmin eq true",
-    ROLES: "{parent_site_url}/_api/web/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
-    UNIQUE_ROLES: "{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/HasUniqueRoleAssignments",
-    ROLES_BY_TITLE_FOR_LIST: "{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
-    UNIQUE_ROLES_FOR_ITEM: "{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/items({list_item_id})/HasUniqueRoleAssignments",
-    ROLES_BY_TITLE_FOR_ITEM: "{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/items({list_item_id})/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
+    PING: "{host_url}{parent_site_url}_api/web/webs",
+    SITES: "{host_url}{parent_site_url}/_api/web/webs?$skip={skip}&$top={top}&$expand=Author",
+    LISTS: "{host_url}{parent_site_url}/_api/web/lists?$skip={skip}&$top={top}&$expand=RootFolder&$filter=(Hidden eq false)",
+    ATTACHMENT: "{host_url}{value}/_api/web/GetFileByServerRelativePath(decodedurl='{file_relative_url}')/$value",
+    DRIVE_ITEM: "{host_url}{parent_site_url}/_api/web/lists(guid'{list_id}')/items?$select={selected_field}&$expand=File,Folder,Author,Editor&$top={top}",
+    LIST_ITEM: "{host_url}{parent_site_url}/_api/web/lists(guid'{list_id}')/items?$expand=AttachmentFiles,Author,Editor&$select=*,FileRef,Author/Name,Editor/Name",
+    ATTACHMENT_DATA: "{host_url}{parent_site_url}/_api/web/getfilebyserverrelativeurl('{file_relative_url}')",
+    USERS: "{host_url}{parent_site_url}/_api/web/siteusers?$skip={skip}&$top={top}",
+    ADMIN_USERS: "{host_url}{parent_site_url}/_api/web/siteusers?$skip={skip}&$top={top}&$filter=IsSiteAdmin eq true",
+    ROLES: "{host_url}{parent_site_url}/_api/web/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
+    UNIQUE_ROLES: "{host_url}{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/HasUniqueRoleAssignments",
+    ROLES_BY_TITLE_FOR_LIST: "{host_url}{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
+    UNIQUE_ROLES_FOR_ITEM: "{host_url}{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/items({list_item_id})/HasUniqueRoleAssignments",
+    ROLES_BY_TITLE_FOR_ITEM: "{host_url}{parent_site_url}/_api/lists/GetByTitle('{site_list_name}')/items({list_item_id})/roleassignments?$expand=Member/users,RoleDefinitionBindings&$skip={skip}&$top={top}",
 }
 SCHEMA = {
     SITES: {
@@ -136,14 +131,12 @@ class SharepointServerClient:
         self.certificate = self.configuration["ssl_ca"]
         self.ssl_enabled = self.configuration["ssl_enabled"]
         self.retry_count = self.configuration["retry_count"]
-        self.site_collections = []
-        for collection in self.configuration["site_collections"]:
-            collection_url = (
-                collection
-                if re.match(r"^https?://", collection)
-                else f"{self.host_url}/sites/{collection}"
-            )
-            self.site_collections.append(collection_url)
+
+        self.site_collections_path = []
+        for site in self.configuration["site_collections"]:
+            if site != "/":
+                site = f"/sites/{site}/"
+            self.site_collections_path.append(site)
 
         self.session = None
         if self.ssl_enabled and self.certificate:
@@ -160,37 +153,28 @@ class SharepointServerClient:
         Returns:
             ClientSession: Base client session.
         """
-        if self.session and self.session.is_closed is False:
+        if self.session:
             return self.session
-        self._logger.info("Generating httpx Client Session...")
+        self._logger.info("Generating aiohttp Client Session...")
         request_headers = {
             "accept": "application/json",
             "content-type": "application/json",
         }
-        timeout = httpx.Timeout(timeout=None)  # pyright: ignore
+        timeout = aiohttp.ClientTimeout(total=None)  # pyright: ignore
 
-        auth_type = (
-            httpx.BasicAuth(
-                username=self.configuration["username"],
-                password=self.configuration["password"],
-            )
-            if self.configuration["authentication"] == BASIC_AUTH
-            else HttpNtlmAuth(
-                username=self.configuration["username"],
+        self.session = aiohttp.ClientSession(
+            auth=aiohttp.BasicAuth(
+                login=self.configuration["username"],
                 password=self.configuration["password"],
-            )
-        )
-        self.session = httpx.AsyncClient(
-            auth=auth_type,
-            verify=self.ssl_ctx,
+            ),  # pyright: ignore
             headers=request_headers,
             timeout=timeout,
+            raise_for_status=True,
         )
         return self.session
 
     def format_url(
         self,
-        site_url,
         relative_url,
         list_item_id=None,
         content_type_id=None,
@@ -198,25 +182,25 @@ class SharepointServerClient:
     ):
         if is_list_item_has_attachment:
             return (
-                site_url
+                self.host_url
                 + quote(relative_url)
                 + "/DispForm.aspx?ID="
                 + list_item_id
                 + "&Source="
-                + site_url
+                + self.host_url
                 + quote(relative_url)
                 + "/AllItems.aspx&ContentTypeId="
                 + content_type_id
             )
         else:
-            return site_url + quote(relative_url)
+            return self.host_url + quote(relative_url)
 
     async def close_session(self):
         """Closes unclosed client session"""
         self._sleeps.cancel()
         if self.session is None:
             return
-        await self.session.aclose()  # pyright: ignore
+        await self.session.close()  # pyright: ignore
         self.session = None
 
     async def _api_call(self, url_name, url="", **url_kwargs):
@@ -238,25 +222,23 @@ class SharepointServerClient:
             url = URLS[url_name].format(**url_kwargs)
 
         headers = None
+
         while True:
             try:
-                self._get_session()
-                result = await self.session.get(  # pyright: ignore
+                async with self._get_session().get(  # pyright: ignore
                     url=url,
+                    ssl=self.ssl_ctx,  # pyright: ignore
                     headers=headers,
-                )
-                if result.is_success is False:
-                    msg = f"Error accessing {url}: {result.reason_phrase}"
-                    raise Exception(msg)
-                if url_name == ATTACHMENT:
-                    yield result
-                else:
-                    yield result.json()
-                break
+                ) as result:
+                    if url_name == ATTACHMENT:
+                        yield result
+                    else:
+                        yield await result.json()
+                    break
             except Exception as exception:
                 if isinstance(
                     exception,
-                    httpx.ConnectError,
+                    ServerDisconnectedError,
                 ):
                     await self.close_session()
                 if retry > self.retry_count:
@@ -290,7 +272,7 @@ class SharepointServerClient:
                 ):
                     yield response.get("value", [])  # pyright: ignore
 
-                    next_url = response.get("odata.nextLink", "")  # pyright: ignore
+                    next_url = response.get("odata.nextLink", "")
             else:
                 async for response in self._api_call(
                     url_name=param_name,
@@ -302,7 +284,7 @@ class SharepointServerClient:
                 ):
                     yield response.get("value", [])  # pyright: ignore
 
-                    next_url = response.get("odata.nextLink", "")  # pyright: ignore
+                    next_url = response.get("odata.nextLink", "")
             if next_url == "":
                 break
 
@@ -346,26 +328,11 @@ class SharepointServerClient:
         ):
             for data in sites_data:
                 async for sub_site in self.get_sites(  # pyright: ignore
-                    site_url=data["Url"]
+                    site_url=data["ServerRelativeUrl"]
                 ):
                     yield sub_site
                 yield data
 
-    async def get_site(self, site_url):
-        """Get sites from SharePoint Server
-
-        Args:
-            site_url(string): Parent site relative path.
-        Yields:
-            site_server_url(string): Site path.
-        """
-        async for response in self._api_call(
-            url_name=SITE,
-            parent_site_url=site_url,
-            host_url=self.host_url,
-        ):
-            yield response
-
     async def get_lists(self, site_url):
         """Get site lists from SharePoint Server
 
@@ -411,16 +378,13 @@ class SharepointServerClient:
             return
         return relative_url
 
-    async def get_list_items(
-        self, list_id, site_url, server_relative_url, list_relative_url, **kwargs
-    ):
+    async def get_list_items(self, list_id, site_url, server_relative_url, **kwargs):
         """This method fetches items from all the lists in a collection.
 
         Args:
             list_id(string): List id.
             site_url(string): Site path.
-            server_relative_url(string): Relative url of site.
-            list_relative_url(string): Relative url of list.
+            server_relative_url(string): Relative url of site
         Yields:
             dictionary: dictionary containing meta-data of the list item.
         """
@@ -431,8 +395,7 @@ class SharepointServerClient:
             for result in list_items_data:
                 if not result.get("Attachments"):
                     url = self.format_url(
-                        site_url=site_url,
-                        relative_url=list_relative_url,
+                        relative_url=server_relative_url,
                         list_item_id=str(result["Id"]),
                         content_type_id=result["ContentTypeId"],
                         is_list_item_has_attachment=True,
@@ -454,11 +417,7 @@ class SharepointServerClient:
                     result["Length"] = attachment_data.get("Length")  # pyright: ignore
                     result["_id"] = attachment_data["UniqueId"]  # pyright: ignore
                     result["url"] = self.format_url(
-                        site_url=site_url,
-                        relative_url=self.fix_relative_url(
-                            server_relative_url,
-                            attachment_file.get("ServerRelativeUrl"),
-                        ),
+                        relative_url=attachment_file.get("ServerRelativeUrl")
                     )
                     result["file_name"] = attachment_file.get("FileName")
                     result["server_relative_url"] = attachment_file["ServerRelativeUrl"]
@@ -470,14 +429,13 @@ class SharepointServerClient:
 
                     yield result, file_relative_url
 
-    async def get_drive_items(self, list_id, site_url, **kwargs):
+    async def get_drive_items(self, list_id, site_url, server_relative_url, **kwargs):
         """This method fetches items from all the drives in a collection.
 
         Args:
             list_id(string): List id.
             site_url(string): Site path.
-            site_relative_url(string): Relative url of site
-            list_relative_url(string): Relative url of list
+            server_relative_url(string): Relative url of site
             kwargs(string): Select query parameter for drive item.
         Yields:
             dictionary: dictionary containing meta-data of the drive item.
@@ -508,21 +466,16 @@ class SharepointServerClient:
 
     async def ping(self):
         """Executes the ping call in async manner"""
-        site_url = ""
-        if len(self.site_collections) > 0:
-            site_url = self.site_collections[0]
-        else:
-            site_url = self.host_url
         await anext(
             self._api_call(
                 url_name=PING,
-                site_url=site_url,
+                parent_site_url=self.site_collections_path[0],
                 host_url=self.host_url,
             )
         )
 
     async def fetch_users(self):
-        for site_url in self.site_collections:
+        for site_url in self.site_collections_path:
             async for users in self._fetch_data_with_query(
                 site_url=site_url, param_name=USERS
             ):
@@ -589,15 +542,6 @@ class SharepointServerClient:
             for role in roles:
                 yield role
 
-    def fix_relative_url(self, site_relative_url, item_relative_url):
-        if item_relative_url is not None:
-            item_relative_url = (
-                item_relative_url
-                if site_relative_url == "/"
-                else item_relative_url.replace(site_relative_url, "")
-            )
-        return item_relative_url
-
 
 class SharepointServerDataSource(BaseDataSource):
     """SharePoint Server"""
@@ -652,58 +596,46 @@ class SharepointServerDataSource(BaseDataSource):
             dictionary: Default configuration.
         """
         return {
-            "authentication": {
-                "label": "Authentication mode",
-                "order": 1,
-                "type": "str",
-                "options": [
-                    {"label": "Basic", "value": BASIC_AUTH},
-                    {"label": "NTLM", "value": NTLM_AUTH},
-                ],
-                "display": "dropdown",
-                "value": BASIC_AUTH,
-            },
             "username": {
                 "label": "SharePoint Server username",
-                "order": 2,
+                "order": 1,
                 "type": "str",
             },
             "password": {
                 "label": "SharePoint Server password",
                 "sensitive": True,
-                "order": 3,
+                "order": 2,
                 "type": "str",
             },
             "host_url": {
                 "label": "SharePoint host",
-                "order": 4,
+                "order": 3,
                 "type": "str",
             },
             "site_collections": {
                 "display": "textarea",
                 "label": "Comma-separated list of SharePoint site collections to index",
-                "order": 5,
+                "order": 4,
                 "type": "list",
-                "required": True,
             },
             "ssl_enabled": {
                 "display": "toggle",
                 "label": "Enable SSL",
-                "order": 6,
+                "order": 5,
                 "type": "bool",
                 "value": False,
             },
             "ssl_ca": {
                 "depends_on": [{"field": "ssl_enabled", "value": True}],
                 "label": "SSL certificate",
-                "order": 7,
+                "order": 6,
                 "type": "str",
             },
             "retry_count": {
                 "default_value": RETRIES,
                 "display": "numeric",
                 "label": "Retries per request",
-                "order": 8,
+                "order": 7,
                 "required": False,
                 "type": "int",
                 "ui_restrictions": ["advanced"],
@@ -711,7 +643,7 @@ class SharepointServerDataSource(BaseDataSource):
             "use_text_extraction_service": {
                 "display": "toggle",
                 "label": "Use text extraction service",
-                "order": 9,
+                "order": 8,
                 "tooltip": "Requires a separate deployment of the Elastic Text Extraction Service. Requires that pipeline settings disable text extraction.",
                 "type": "bool",
                 "ui_restrictions": ["advanced"],
@@ -976,13 +908,11 @@ class SharepointServerDataSource(BaseDataSource):
         Raises:
             ConfigurableFieldValueError: Unavailable services error.
         """
-
-        for collection in self.sharepoint_client.site_collections:
+        for collection in self.sharepoint_client.site_collections_path:
             is_invalid = True
             async for _ in self.sharepoint_client._api_call(
                 url_name=PING,
-                site_collections=collection,
-                site_url=collection,
+                parent_site_url=collection,
                 host_url=self.sharepoint_client.host_url,
             ):
                 is_invalid = False
@@ -1034,8 +964,6 @@ class SharepointServerDataSource(BaseDataSource):
 
     def format_lists(
         self,
-        site_url,
-        list_relative_url,
         item,
         document_type,
         admin_access_control,
@@ -1054,11 +982,11 @@ class SharepointServerDataSource(BaseDataSource):
         """
         document = {
             "type": document_type,
-            "_id": hash_id(f'{item.get("Id", "")}/{item.get("ParentWebUrl", "")}'),
+            "_id": hash_id(f'{item.get("Id","")}/{item.get("ParentWebUrl","")}'),
         }
 
         document["url"] = self.sharepoint_client.format_url(
-            site_url=site_url, relative_url=list_relative_url
+            relative_url=item["RootFolder"]["ServerRelativeUrl"]
         )
         document["server_relative_url"] = item["RootFolder"]["ServerRelativeUrl"]
 
@@ -1079,7 +1007,7 @@ class SharepointServerDataSource(BaseDataSource):
         """
         document = {
             "type": SITES,
-            "_id": hash_id(f'{item.get("Id", "")}/{item.get("Url", "")}'),
+            "_id": hash_id(f'{item.get("Id","")}/{item.get("Url","")}'),
             "author": item.get("Author", {}).get("LoginName", ""),
             "author_id": item.get("Author", {}).get("Id", ""),
         }
@@ -1087,12 +1015,7 @@ class SharepointServerDataSource(BaseDataSource):
         self.map_document_with_schema(document=document, item=item, document_type=SITES)
         return document
 
-    def format_drive_item(
-        self,
-        site_url,
-        server_relative_url,
-        item,
-    ):
+    def format_drive_item(self, item):
         """Prepare key mappings for drive items
 
         Args:
@@ -1103,10 +1026,6 @@ class SharepointServerDataSource(BaseDataSource):
         """
         document = {"type": DRIVE_ITEM}
         item_type = item["item_type"]
-
-        item_relative_url = self.sharepoint_client.fix_relative_url(
-            server_relative_url, item[item_type]["ServerRelativeUrl"]
-        )
         document.update(
             {  # pyright: ignore
                 "_id": hash_id(
@@ -1114,7 +1033,7 @@ class SharepointServerDataSource(BaseDataSource):
                 ),
                 "size": int(item.get("File", {}).get("Length", 0)),
                 "url": self.sharepoint_client.format_url(
-                    site_url=site_url, relative_url=item_relative_url
+                    relative_url=item[item_type]["ServerRelativeUrl"]
                 ),
                 "server_relative_url": item[item_type]["ServerRelativeUrl"],
                 "type": item_type,
@@ -1130,12 +1049,7 @@ class SharepointServerDataSource(BaseDataSource):
 
         return document
 
-    def format_list_item(
-        self,
-        item,
-        site_url=None,
-        server_relative_url=None,
-    ):
+    def format_list_item(self, item):
         """Prepare key mappings for list items
 
         Args:
@@ -1187,9 +1101,7 @@ class SharepointServerDataSource(BaseDataSource):
                     self._logger.debug(
                         f"Fetching unique list permissions for list with id '{site_list['Id']}'. Ignoring parent site permissions."
                     )
-                    async for (
-                        role_assignment
-                    ) in self.sharepoint_client.site_role_assignments_using_title(
+                    async for role_assignment in self.sharepoint_client.site_role_assignments_using_title(
                         site_url, site_list["Title"]
                     ):
                         site_list_access_control.extend(
@@ -1220,9 +1132,7 @@ class SharepointServerDataSource(BaseDataSource):
                 self._logger.debug(
                     f"Fetching unique permissions for list item with id '{list_item_id}'. Ignoring parent site permissions."
                 )
-                async for (
-                    role_assignment
-                ) in self.sharepoint_client.site_list_item_role_assignments(
+                async for role_assignment in self.sharepoint_client.site_list_item_role_assignments(
                     site_url, site_list_name, list_item_id
                 ):
                     list_item_access_control.extend(
@@ -1241,38 +1151,24 @@ class SharepointServerDataSource(BaseDataSource):
             dictionary: dictionary containing meta-data of the SharePoint objects.
         """
 
-        sites = []
+        server_relative_url = []
 
-        for collection in self.sharepoint_client.site_collections:
-            async for site_data in self.sharepoint_client.get_site(site_url=collection):
-                sites.append(site_data)
-                (
-                    site_access_control,
-                    site_admin_access_control,
-                ) = await self._site_access_control(
-                    site_url=f'{self.sharepoint_client.host_url}{site_data.get("ServerRelativeUrl")}'
-                )
-                site_document = self._decorate_with_access_control(
-                    self.format_sites(item=site_data), site_access_control
-                )
-                yield site_document, None
+        for collection in self.sharepoint_client.site_collections_path:
+            server_relative_url.append(collection)
             async for site_data in self.sharepoint_client.get_sites(
                 site_url=collection
             ):
-                sites.append(site_data)
+                server_relative_url.append(site_data["ServerRelativeUrl"])
                 (
                     site_access_control,
                     site_admin_access_control,
-                ) = await self._site_access_control(
-                    site_url=f'{self.sharepoint_client.host_url}{site_data.get("ServerRelativeUrl")}'
-                )
+                ) = await self._site_access_control(site_data.get("ServerRelativeUrl"))
                 site_document = self._decorate_with_access_control(
                     self.format_sites(item=site_data), site_access_control
                 )
                 yield site_document, None
-        for site in sites:
-            site_url = site["Url"]
-            server_relative_url = site["ServerRelativeUrl"]
+
+        for site_url in server_relative_url:
             (
                 site_access_control,
                 site_admin_access_control,
@@ -1282,54 +1178,39 @@ class SharepointServerDataSource(BaseDataSource):
             ):
                 is_site_page = False
                 selected_field = "*,Author/Name,Editor/Name,Author/Id,Editor/Id"
-                list_relative_url = self.sharepoint_client.fix_relative_url(
-                    server_relative_url,
-                    result["RootFolder"]["ServerRelativeUrl"],
-                )
                 # if BaseType value is 1 then it's document library else it's a list
                 if result.get("BaseType") == 1:
                     if result.get("Title") == "Site Pages":
                         is_site_page = True
                         selected_field = SELECTED_FIELDS
-                    yield (
-                        self.format_lists(
-                            item=result,
-                            document_type=DOCUMENT_LIBRARY,
-                            admin_access_control=site_admin_access_control.copy(),
-                            site_list_access_control=site_list_access_control.copy(),
-                            site_url=site_url,
-                            list_relative_url=list_relative_url,
-                        ),
-                        None,
-                    )
-                    list_relative_url = None
+                    yield self.format_lists(
+                        item=result,
+                        document_type=DOCUMENT_LIBRARY,
+                        admin_access_control=site_admin_access_control.copy(),
+                        site_list_access_control=site_list_access_control.copy(),
+                    ), None
+                    server_url = None
                     func = self.sharepoint_client.get_drive_items
                     format_document = self.format_drive_item
                 else:
-                    yield (
-                        self.format_lists(
-                            item=result,
-                            document_type=LISTS,
-                            admin_access_control=site_admin_access_control.copy(),
-                            site_list_access_control=site_list_access_control.copy(),
-                            site_url=site_url,
-                            list_relative_url=list_relative_url,
-                        ),
-                        None,
-                    )
+                    yield self.format_lists(
+                        item=result,
+                        document_type=LISTS,
+                        admin_access_control=site_admin_access_control.copy(),
+                        site_list_access_control=site_list_access_control.copy(),
+                    ), None
+                    server_url = result["RootFolder"]["ServerRelativeUrl"]
                     func = self.sharepoint_client.get_list_items
                     format_document = self.format_list_item
+
                 async for item, file_relative_url in func(
                     list_id=result.get("Id"),
-                    site_url=f"{self.sharepoint_client.host_url}{result.get('ParentWebUrl')}",
-                    server_relative_url=server_relative_url,
-                    list_relative_url=list_relative_url,
+                    site_url=result.get("ParentWebUrl"),
+                    server_relative_url=server_url,
                     selected_field=selected_field,
                 ):
                     document = format_document(
                         item=item,
-                        site_url=site_url,
-                        server_relative_url=server_relative_url,
                     )
                     list_item_access_control = await self.fetch_list_item_permission(
                         site_url=site_url,
@@ -1348,23 +1229,17 @@ class SharepointServerDataSource(BaseDataSource):
                         yield document, None
                     else:
                         if is_site_page:
-                            yield (
+                            yield document, partial(
+                                self.get_site_pages_content,
                                 document,
-                                partial(
-                                    self.get_site_pages_content,
-                                    document,
-                                    item,
-                                ),
+                                item,
                             )
                         else:
-                            yield (
+                            yield document, partial(
+                                self.get_content,
                                 document,
-                                partial(
-                                    self.get_content,
-                                    document,
-                                    file_relative_url,
-                                    site_url,
-                                ),
+                                file_relative_url,
+                                site_url,
                             )
 
     async def get_content(
@@ -1402,7 +1277,7 @@ class SharepointServerDataSource(BaseDataSource):
             filename,
             file_extension,
             partial(
-                self.chunked_download_func,
+                self.generic_chunked_download_func,
                 partial(
                     self.sharepoint_client._api_call,
                     url_name=ATTACHMENT,
@@ -1466,13 +1341,3 @@ class SharepointServerDataSource(BaseDataSource):
         it instead contains a key with bytes in its response.
         """
         yield bytes(response_data, "utf-8")
-
-    async def chunked_download_func(self, download_func):
-        """
-        This provides a wrapper for chunked download funcs that
-        use `response.content.iterchunked`.
-        This should not be used for downloads that use other methods.
-        """
-        async for response in download_func():
-            async for data in response.aiter_bytes(CHUNK_SIZE):
-                yield data
diff --git a/connectors/sources/zoom.py b/connectors/sources/zoom.py
index a63ff1ab..76f09dad 100644
--- a/connectors/sources/zoom.py
+++ b/connectors/sources/zoom.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Zoom source module responsible to fetch documents from Zoom."""
-
 import os
 from contextlib import asynccontextmanager
 from datetime import datetime, timedelta
@@ -439,23 +438,17 @@ class ZoomDataSource(BaseDataSource):
             async for live_meeting in self.client.get_meetings(
                 user_id=user.get("id"), meeting_type="live"
             ):
-                yield (
-                    self._format_doc(
-                        doc=live_meeting, doc_time=live_meeting.get("created_at")
-                    ),
-                    None,
-                )
+                yield self._format_doc(
+                    doc=live_meeting, doc_time=live_meeting.get("created_at")
+                ), None
 
             async for upcoming_meeting in self.client.get_meetings(
                 user_id=user.get("id"), meeting_type="upcoming_meetings"
             ):
-                yield (
-                    self._format_doc(
-                        doc=upcoming_meeting,
-                        doc_time=upcoming_meeting.get("created_at"),
-                    ),
-                    None,
-                )
+                yield self._format_doc(
+                    doc=upcoming_meeting,
+                    doc_time=upcoming_meeting.get("created_at"),
+                ), None
 
             async for previous_meeting in self.client.get_meetings(
                 user_id=user.get("id"), meeting_type="previous_meetings"
@@ -467,37 +460,25 @@ class ZoomDataSource(BaseDataSource):
                         )
                     )
                     if not previous_meeting_details:
-                        yield (
-                            self._format_doc(
-                                doc=previous_meeting,
-                                doc_time=previous_meeting.get("created_at"),
-                            ),
-                            None,
-                        )
-                    else:
-                        yield (
-                            self._format_doc(
-                                doc=previous_meeting_details,
-                                doc_time=previous_meeting_details.get("end_time"),
-                            ),
-                            None,
-                        )
-                else:
-                    yield (
-                        self._format_doc(
+                        yield self._format_doc(
                             doc=previous_meeting,
                             doc_time=previous_meeting.get("created_at"),
-                        ),
-                        None,
-                    )
+                        ), None
+                    else:
+                        yield self._format_doc(
+                            doc=previous_meeting_details,
+                            doc_time=previous_meeting_details.get("end_time"),
+                        ), None
+                else:
+                    yield self._format_doc(
+                        doc=previous_meeting,
+                        doc_time=previous_meeting.get("created_at"),
+                    ), None
 
             async for recording in self.client.get_recordings(user_id=user.get("id")):
-                yield (
-                    self._format_doc(
-                        doc=recording, doc_time=recording.get("start_time")
-                    ),
-                    None,
-                )
+                yield self._format_doc(
+                    doc=recording, doc_time=recording.get("start_time")
+                ), None
 
             async for channel in self.client.get_channels(user_id=user.get("id")):
                 yield self._format_doc(doc=channel, doc_time=iso_utc()), None
@@ -505,20 +486,14 @@ class ZoomDataSource(BaseDataSource):
             async for chat_message in self.client.get_chats(
                 user_id=user.get("id"), chat_type="message"
             ):
-                yield (
-                    self._format_doc(
-                        doc=chat_message, doc_time=chat_message.get("date_time")
-                    ),
-                    None,
-                )
+                yield self._format_doc(
+                    doc=chat_message, doc_time=chat_message.get("date_time")
+                ), None
 
             async for chat_file in self.client.get_chats(
                 user_id=user.get("id"), chat_type="file"
             ):
                 chat_file["id"] = chat_file.get("file_id")
-                yield (
-                    self._format_doc(
-                        doc=chat_file, doc_time=chat_file.get("date_time")
-                    ),
-                    partial(self.get_content, chat_file=chat_file.copy()),
-                )
+                yield self._format_doc(
+                    doc=chat_file, doc_time=chat_file.get("date_time")
+                ), partial(self.get_content, chat_file=chat_file.copy())
diff --git a/connectors/sync_job_runner.py b/connectors/sync_job_runner.py
index 4ebb2736..07bbfeea 100644
--- a/connectors/sync_job_runner.py
+++ b/connectors/sync_job_runner.py
@@ -346,9 +346,7 @@ class SyncJobRunner:
             except asyncio.CancelledError:
                 self.sync_job.log_debug("Job reporting task is stopped.")
         if self.sync_orchestrator is not None:
-            await (
-                self.sync_orchestrator.cancel()
-            )  # in case the extractor/sink tasks are still running
+            await self.sync_orchestrator.cancel()  # in case the extractor/sink tasks are still running
 
         ingestion_stats = (
             {}
diff --git a/connectors/utils.py b/connectors/utils.py
index 63b3ba00..b7bc06d3 100644
--- a/connectors/utils.py
+++ b/connectors/utils.py
@@ -13,7 +13,7 @@ import platform
 import re
 import shutil
 import ssl
-import subprocess  # noqa S404
+import subprocess
 import time
 import urllib.parse
 from copy import deepcopy
@@ -115,7 +115,7 @@ def epoch_timestamp_zulu():
 def next_run(quartz_definition, now):
     """Returns the datetime in UTC timezone of the next run."""
     # Year is optional and is never present.
-    _, minutes, hours, day_of_month, month, day_of_week, year = (
+    seconds, minutes, hours, day_of_month, month, day_of_week, year = (
         quartz_definition.split(" ") + [None]
     )[:7]
 
diff --git a/docs/DOCKER.md b/docs/DOCKER.md
index ba35bdaa..7637fc58 100644
--- a/docs/DOCKER.md
+++ b/docs/DOCKER.md
@@ -103,3 +103,11 @@ You might need to adjust some details here:
   - For Elasticsearch of version `<VERSION>` you can use `elastic-connectors:<VERSION>`for a stable revision of the connectors, or `elastic-connectors:<VERSION>-SNAPSHOT` if you want the latest nightly build of the connectors (not recommended).
   - If you are using nightly builds, you will need to run `docker pull docker.elastic.co/enterprise-search/elastic-connectors:<VERSION>-SNAPSHOT` before starting the service. This ensures you're using the latest version of the Docker image.
 - `-c /config/config.yml` - replace `config.yml` with the name of the config file you've put in the directory you've created in step 2.
+
+> [!TIP]
+> When starting a Docker container with the connector service against a local Elasticsearch cluster that has security and SSL enabled (like the [docker compose example](https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html#docker-compose-file) from docs), it's crucial to handle the self-signed certificate correctly:
+> 1. Ensure the Docker container running the connector service has the volume attached that contains the generated certificate. For `docker run`, use `-v <your_project>_certs:/usr/share/connectors/config/certs` to reference it.
+> 2. Make sure the connector service's `config.yml` correctly references the certificate with:
+> ``` 
+> elasticsearch.ca_certs: /usr/share/connectors/config/certs/ca/ca.crt
+> ```
diff --git a/docs/RELEASING.md b/docs/RELEASING.md
index 638d0476..aa1068dd 100644
--- a/docs/RELEASING.md
+++ b/docs/RELEASING.md
@@ -1,54 +1,33 @@
 # Releasing the Connectors project
 
-In versions 8.15 and earlier, the versioning scheme we used was **MAJOR.MINOR.PATCH.BUILD**.
+The version scheme we use is **MAJOR.MINOR.PATCH.BUILD** and stored in the [VERSION](https://github.com/elastic/connectors/blob/main/connectors/VERSION) file at the root of this repository.
 
-Starting in 8.16, we began using semantic versioning aligned with the rest of the Elastic stack (**MAJOR.MINOR.PATCH**).
+## Unified release
 
-The version is stored in the [VERSION](https://github.com/elastic/connectors/blob/main/connectors/VERSION) file at the root of this repository.
-
-## After Feature Freeze
-Take care of the branching (minor releases only):
-
-- Increment the VERSION on main to match the next minor release
-- Create a new maintenance branch
-- Make sure the `.backportrc.json` is updated. The previous minor is added to `targetBranchChoices` and the new minor is used in `branchLabelMapping`
-
-
-## Unified release, (>= 8.16)
-
-The VERSION file should match that of the Elastic stack.
-
-On the day of the Feature Freeze, `#mission-control` will notifiy the release manager that it's time to create a new maintenance branch.
-
-On the day of the release, `#mission-control` will notify the releae manager that it's time to bump the VERSION to the next PATCH.
-
-The Unified Release build will take care of producing git tags and official artifacts from our most recent DRA artifacts.
-
-### In-Between releases
-
-Sometimes, we need to release Connectors independently from the Elastic unified-release.
-For instance, if a user reports a critical bug in Connectors, and we want to ship a fix as soon as possible.
+**MAJOR.MINOR.PATCH** should match the Elastic and Enterprise Search version it targets and the *BUILD* number should be set to **0** the day the Connectors release is created to be included with the Enterprise Search distribution.
 
-In this case, we can work with `#early-agent-releases` to trigger the Independent Agent Release Pipeline ([staging](https://buildkite.com/elastic/independent-agent-release-staging), [releasing](https://buildkite.com/elastic/independent-agent-release-releasing)) once the bugfix has been merged and a staging DRA artifact produced.
-This pipeline is used for integrations that need to release more frequently than the stack cadence, but still need to stay associated with the stack versioning scheme.
-This will produce Connectors (and Agent) artifacts like **MAJOR.MINOR.PATCH+build<TIMESTAMP>**.
-These versions are compatible with SEMVER (Semantic Versioning).
-While the pipeline was built by-and-for Agent, it will release all our connector artifacts - not just the agent docker image.
+For example, when shipping for `8.1.2`, the version is `8.1.2.0`.
 
-No changes to the VERSION file are necessary for these "in-between" releases.
+To release Connectors:
 
-## For versions <= 8.15
+1. Make sure all tests and linter pass with `make lint test`
+2. Run `make release`
+3. Set the [VERSION](../connectors/VERSION) file to the new/incremented version on the release branch
+4. PR this change to the appropriate Connectors release branch
 
-**MAJOR.MINOR.PATCH** should match the Elastic and Enterprise Search version it targets and the *BUILD* number should be set to **0** the day the Connectors release is created to be included with the Enterprise Search distribution.
+A package will be generated in `dist/`
 
-For example, when shipping for `8.1.2`, the version is `8.1.2.0`.
+Take care of the branching (minor releases only):
 
+- Increment the VERSION on main to match the next minor release
+- Create a new maintenance branch
+- Make sure the `.backportrc.json` is updated. The previous minor is added to `targetBranchChoices` and the new minor is used in `branchLabelMapping`
 
 After the Elastic unified release is complete
 
 - Update the **BUILD** version ([example PR](https://github.com/elastic/connectors/pull/122)). Note that the Connectors project does not immediately bump to the next **PATCH** version. That won't happen until that patch release's FF date.
 
-### Releasing docker images
+## Releasing docker images
 
 To release the docker image, follow these steps:
 
@@ -60,7 +39,7 @@ To release the docker image, follow these steps:
 3. Tag the commit that was used for the image with `git tag <tag_id> && git push origin <tag_id>`. For the example above, tag_id would be `v8.12.2.1`
 4. Update `connectors/VERSION` file and bump the last part of the version by an increment and submit a PR with it. In the example above, the value would be `8.12.2.2`.
 
-### In-Between releases
+## In-Between releases
 
 Sometimes, we need to release Connectors independently from Enterprise Search. For instance, if someone wants to use the project as an HTTP Service, and we have a bug fix we want them to have as soon as possible.
 
@@ -68,6 +47,9 @@ In that case, we increment the **BUILD** number, and follow the same release pro
 
 So `8.1.2.1`, `8.1.2.2` etc. On the next unified release, the version will be bumped to the next **PATCH** value, and **BUILD** set to `0`
 
-**In-Between releases should never introduce new features since they will eventually be merged into the next PATCH release.**
+**In-Between releases should never introduce new features since they will eventually be merged into the next PATCH release. New features are always done in Developer previews**
 
+## Developer preview releases
 
+For developer previews, we are adding a `pre` tag using an ISO8601 date.
+You can use `make release_dev` instead of `make release` in that case.
diff --git a/renovate.json b/renovate.json
deleted file mode 100644
index c7947259..00000000
--- a/renovate.json
+++ /dev/null
@@ -1,17 +0,0 @@
-{
-  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
-  "extends": [
-    "local>elastic/renovate-config",
-    "github>elastic/renovate-config:only-chainguard"
-  ],
-  "packageRules": [
-    {
-      "matchPackageNames": [
-        "docker.elastic.co/wolfi/python"
-      ],
-      "matchCurrentValue": "/3\\.11(-dev)?/",
-      "matchUpdateTypes": ["major", "minor"],
-      "enabled": false
-    }
-  ]
-}
diff --git a/requirements/agent.txt b/requirements/agent.txt
deleted file mode 100644
index 5f757e98..00000000
--- a/requirements/agent.txt
+++ /dev/null
@@ -1 +0,0 @@
-elastic-agent-client@git+https://github.com/elastic/python-elastic-agent-client@main
diff --git a/requirements/framework.txt b/requirements/framework.txt
index 5bb91d8d..9031a1a2 100644
--- a/requirements/framework.txt
+++ b/requirements/framework.txt
@@ -1,12 +1,9 @@
-aiohttp==3.10.4
+aiohttp==3.10.3
 aiofiles==23.2.1
 aiomysql==0.1.1
-httpx==0.27.0
-httpx-ntlm==1.4.0
-elasticsearch[async]==8.15.0
-elastic-transport==8.15.0
-pyyaml==6.0.1
-cffi==1.16.0
+elasticsearch[async]==8.14.0
+elastic-transport==8.13.1
+pyyaml==6.0
 envyaml==1.10.211231
 ecs-logging==2.0.0
 pympler==1.0.1
@@ -15,13 +12,13 @@ tzcron==1.0.0
 pytz==2019.3
 python-dateutil==2.8.2
 aiogoogle==5.3.0
-uvloop==0.20.0; sys_platform != 'win32'
+uvloop==0.17.0; sys_platform != 'win32'
 fastjsonschema==2.16.2
 base64io==1.0.3
 azure-storage-blob==12.19.1
 SQLAlchemy==2.0.1
-oracledb==2.3.0
-asyncpg==0.29.0
+oracledb==1.2.2
+asyncpg==0.27.0
 python-tds==1.12.0
 sqlalchemy-pytds==0.3.5
 pyOpenSSL==24.1.0
diff --git a/requirements/ftest.txt b/requirements/ftest.txt
index 7350ee66..6101574e 100644
--- a/requirements/ftest.txt
+++ b/requirements/ftest.txt
@@ -1,11 +1,11 @@
 flask==2.3.2
 flask_limiter==3.3.1
 faker==18.11.2
-mysql-connector-python==9.0.0
+mysql-connector-python==8.1.0
 google-auth==2.22.0
 google-cloud-storage==2.10.0
-asyncpg==0.29.0
+asyncpg==0.28.0
 boto3==1.34.69
-oracledb==2.3.0
+oracledb==1.2.2
 smbprotocol==1.10.1
-yattag==1.16.0
+yattag==1.15.1
diff --git a/requirements/tests.txt b/requirements/tests.txt
index 592cba82..51de9ec3 100644
--- a/requirements/tests.txt
+++ b/requirements/tests.txt
@@ -1,5 +1,6 @@
 # tests
-ruff==0.6.3
+black==23.7.0
+ruff==0.0.278
 aioresponses==0.7.6
 pytest==7.4.0
 pytest-cov==4.1.0
diff --git a/scripts/deps-csv.py b/scripts/deps-csv.py
deleted file mode 100755
index ef35810d..00000000
--- a/scripts/deps-csv.py
+++ /dev/null
@@ -1,50 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-
-import csv
-import sys
-
-# input csv column indices
-NAME = 0
-VERSION = 1
-LICENSE = 2
-URL = 3
-
-
-def main(dependencies_csv):
-    """
-    The input is what we get from `pip-licenses --format=csv --with-urls`
-    See: https://pypi.org/project/pip-licenses/#csv
-    Unfortunately, our DRA requires a few more columns that `pip-licenses` does not understand.
-    This function reorders each row.
-    :param dependencies_csv:
-    :return:
-    """
-    rows = []
-
-    # read the csv rows into memory
-    with open(dependencies_csv) as csv_file:
-        reader = csv.reader(csv_file)
-        for row in reader:
-            rows.append(row)
-
-    # overwrite the original file
-    with open(dependencies_csv, "w") as csv_file:
-        writer = csv.writer(csv_file, quoting=csv.QUOTE_MINIMAL)
-
-        # The expected column order (this row is the CSV header)
-        writer.writerow(["name", "url", "version", "revision", "license", "sourceURL"])
-
-        # reorder each row using the expected column order. (leaves 'revision' and 'sourceURL' empty)
-        for row in rows[1:]:  # skip the header row
-            writer.writerow([row[NAME], row[URL], row[VERSION], "", row[LICENSE], ""])
-
-
-if __name__ == "__main__":
-    depenencies_csv = sys.argv[1]
-    print(f"post-processing {depenencies_csv}")  # noqa
-    main(depenencies_csv)
-    print(f"wrote output to {depenencies_csv}")  # noqa
diff --git a/scripts/stack/README.md b/scripts/stack/README.md
index f09669e2..acf4c358 100644
--- a/scripts/stack/README.md
+++ b/scripts/stack/README.md
@@ -17,7 +17,7 @@ These scripts can also be used as a starting place for adding Connectors to your
 
 ## Prerequisites
 * Linux or macOS (Although Windows can run the Connectors service, it is not currently supported via these scripts)
-* Python 3.10 or 3.11
+* Python 3.10
 * Docker with Docker Compose Installed
     * It is recommended to run Docker with at least 4GB of available RAM.
 * Curl 8.7.1 or higher
diff --git a/scripts/stack/docker/docker-compose.yml b/scripts/stack/docker/docker-compose.yml
index 992dd2f0..00b0e703 100644
--- a/scripts/stack/docker/docker-compose.yml
+++ b/scripts/stack/docker/docker-compose.yml
@@ -1,9 +1,7 @@
 version: "3"
 
 networks:
-  elastic:
-    name: 'elastic'
-    external: true
+  connectors_stack_net:
 
 services:
   elasticsearch:
@@ -21,7 +19,7 @@ services:
         soft: -1
         hard: -1
     networks:
-      - elastic
+      - connectors_stack_net
     ports:
       - 9200:9200
     volumes:
@@ -34,7 +32,7 @@ services:
     depends_on:
       - elasticsearch
     networks:
-      - elastic
+      - connectors_stack_net
     environment:
       ELASTICSEARCH_URL: http://elasticsearch:9200
       ELASTICSEARCH_HOSTS: http://elasticsearch:9200
@@ -50,7 +48,7 @@ services:
     volumes:
       - ${CURDIR}/connectors-config:/config
     command: /app/bin/elastic-ingest -c /config/config.yml
-    network_mode: "elastic"
+    network_mode: "host"
 
 volumes:
   conn-es-data:
diff --git a/scripts/stack/run-stack.sh b/scripts/stack/run-stack.sh
index 4838812f..ac829150 100755
--- a/scripts/stack/run-stack.sh
+++ b/scripts/stack/run-stack.sh
@@ -19,14 +19,6 @@ eval set -- "$parsed_params"
 
 source $CURDIR/set-env.sh $CURDIR/.env
 
-# Check if the network exists
-if ! docker network ls --format '{{.Name}}' | grep -w 'elastic' > /dev/null; then
-  echo "Network 'elastic' does not exist. Creating..."
-  docker network create elastic
-else
-  echo "Network 'elastic' already exists."
-fi
-
 # for now, always update the images, make this an arg later
 if [ "${update_images:-}" = true ]
 then
diff --git a/scripts/testing/cli.py b/scripts/testing/cli.py
index 89beb3d8..8ee20cd0 100644
--- a/scripts/testing/cli.py
+++ b/scripts/testing/cli.py
@@ -1,16 +1,13 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
+#!/usr/bin/python3
 
 import json
 import os
 import re
-import subprocess  # noqa S404
+import subprocess
 import tempfile
 import time
 from contextlib import contextmanager
+from subprocess import PIPE, STDOUT
 
 import click
 import yaml
@@ -232,9 +229,7 @@ def create_vm(name, vm_type, vm_zone):
                 "--command",
                 "sudo ls /var/log/startup-is-finished ",
             ]
-            result = subprocess.run(  # noqa: S603
-                cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT
-            )
+            result = subprocess.run(cmd, stdout=PIPE, stderr=STDOUT)  # noqa: S603
 
             stdout = result.stdout.decode("utf-8")
             # indicates that the VM is booting
@@ -580,7 +575,7 @@ def read_from_vault(key):
     """
     _, secret_prefix, field = key.split(":")
     cmd = ["vault", "read", "-field", field, f"{VAULT_SECRETS_PREFIX}/{secret_prefix}"]
-    result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)  # noqa: S603
+    result = subprocess.run(cmd, stdout=PIPE, stderr=STDOUT)  # noqa: S603
     if result.returncode != 0:
         click.echo(result.stdout, err=True)
         raise click.Abort(result.stdout)
@@ -592,7 +587,7 @@ def run_gcloud_cmd(cmd):
     """
     Runs a gcloud command and raises an exception if the command failed
     """
-    result = subprocess.run(cmd, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)  # noqa: S603
+    result = subprocess.run(cmd, stdout=PIPE, stderr=STDOUT)  # noqa: S603
     if result.returncode != 0:
         click.echo(result.stdout, err=True)
         raise click.Abort(result.stdout)
diff --git a/setup.py b/setup.py
index e70c03d7..9802e672 100644
--- a/setup.py
+++ b/setup.py
@@ -103,6 +103,5 @@ setup(
       fake-kibana = connectors.kibana:main
       connectors = connectors.connectors_cli:main
       test-connectors = scripts.testing.cli:main
-      elastic-agent-connectors = connectors.agent.cli:main
       """,
 )
diff --git a/tests/agent/test_agent_config.py b/tests/agent/test_agent_config.py
deleted file mode 100644
index 57783273..00000000
--- a/tests/agent/test_agent_config.py
+++ /dev/null
@@ -1,55 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-from unittest.mock import MagicMock
-
-import pytest
-
-from connectors.agent.config import ConnectorsAgentConfigurationWrapper
-
-
-@pytest.mark.asyncio
-async def test_try_update_without_auth_data():
-    config_wrapper = ConnectorsAgentConfigurationWrapper()
-    source_mock = MagicMock()
-    source_mock.fields = {}
-
-    assert config_wrapper.try_update(source_mock) is False
-
-
-@pytest.mark.asyncio
-async def test_try_update_with_api_key_auth_data():
-    hosts = ["https://localhost:9200"]
-    api_key = "lemme_in"
-
-    config_wrapper = ConnectorsAgentConfigurationWrapper()
-    source_mock = MagicMock()
-    fields_container = {"hosts": hosts, "api_key": api_key}
-
-    source_mock.fields = fields_container
-    source_mock.__getitem__.side_effect = fields_container.__getitem__
-
-    assert config_wrapper.try_update(source_mock) is True
-    assert config_wrapper.get()["elasticsearch"]["host"] == hosts[0]
-    assert config_wrapper.get()["elasticsearch"]["api_key"] == api_key
-
-
-@pytest.mark.asyncio
-async def test_try_update_with_basic_auth_auth_data():
-    hosts = ["https://localhost:9200"]
-    username = "elastic"
-    password = "hold the door"
-
-    config_wrapper = ConnectorsAgentConfigurationWrapper()
-    source_mock = MagicMock()
-    fields_container = {"hosts": hosts, "username": username, "password": password}
-
-    source_mock.fields = fields_container
-    source_mock.__getitem__.side_effect = fields_container.__getitem__
-
-    assert config_wrapper.try_update(source_mock) is True
-    assert config_wrapper.get()["elasticsearch"]["host"] == hosts[0]
-    assert config_wrapper.get()["elasticsearch"]["username"] == username
-    assert config_wrapper.get()["elasticsearch"]["password"] == password
diff --git a/tests/agent/test_cli.py b/tests/agent/test_cli.py
deleted file mode 100644
index ba8b1c6a..00000000
--- a/tests/agent/test_cli.py
+++ /dev/null
@@ -1,25 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-import asyncio
-import os
-import signal
-from unittest.mock import AsyncMock, patch
-
-from connectors.agent.cli import main
-
-
-@patch("connectors.agent.cli.ConnectorsAgentComponent", return_value=AsyncMock())
-def test_main(patch_component):
-    async def kill():
-        await asyncio.sleep(0.2)
-        os.kill(os.getpid(), signal.SIGTERM)
-
-    loop = asyncio.new_event_loop()
-    loop.create_task(kill())
-
-    main()
-
-    loop.close()
diff --git a/tests/agent/test_component.py b/tests/agent/test_component.py
deleted file mode 100644
index 9bdfe9e1..00000000
--- a/tests/agent/test_component.py
+++ /dev/null
@@ -1,45 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-import asyncio
-from unittest.mock import MagicMock, patch
-
-import pytest
-
-from connectors.agent.component import ConnectorsAgentComponent
-
-
-class StubMultiService:
-    def __init__(self):
-        self.running_stop = asyncio.Event()
-        self.has_ran = False
-        self.has_shutdown = False
-
-    async def run(self):
-        self.has_ran = True
-        self.running_stop.clear()
-        await self.running_stop.wait()
-
-    def shutdown(self, sig):
-        self.has_shutdown = True
-        self.running_stop.set()
-
-
-@pytest.mark.asyncio
-@patch("connectors.agent.component.MultiService", return_value=StubMultiService())
-@patch("connectors.agent.component.new_v2_from_reader", return_value=MagicMock())
-async def test_try_update_without_auth_data(
-    stub_multi_service, patch_new_v2_from_reader
-):
-    component = ConnectorsAgentComponent()
-
-    async def stop_after_timeout():
-        await asyncio.sleep(0.1)
-        component.stop("SIGINT")
-
-    await asyncio.gather(component.run(), stop_after_timeout())
-
-    assert stub_multi_service.has_ran
-    assert stub_multi_service.has_shutdown
diff --git a/tests/agent/test_protocol.py b/tests/agent/test_protocol.py
deleted file mode 100644
index f01c075e..00000000
--- a/tests/agent/test_protocol.py
+++ /dev/null
@@ -1,106 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-from unittest.mock import Mock
-
-import pytest
-from elastic_agent_client.generated import elastic_agent_client_pb2 as proto
-
-from connectors.agent.protocol import ConnectorActionHandler, ConnectorCheckinHandler
-
-
-class TestConnectorActionHandler:
-    @pytest.mark.asyncio
-    async def test_handle_action(self):
-        action_handler = ConnectorActionHandler()
-
-        with pytest.raises(NotImplementedError):
-            await action_handler.handle_action(None)
-
-
-class TestConnectorCheckingHandler:
-    @pytest.mark.asyncio
-    async def test_apply_from_client_when_no_units_received(self):
-        client_mock = Mock()
-        config_wrapper_mock = Mock()
-        service_manager_mock = Mock()
-
-        client_mock.units = []
-
-        checkin_handler = ConnectorCheckinHandler(
-            client_mock, config_wrapper_mock, service_manager_mock
-        )
-
-        await checkin_handler.apply_from_client()
-
-        assert not config_wrapper_mock.try_update.called
-        assert not service_manager_mock.restart.called
-
-    @pytest.mark.asyncio
-    async def test_apply_from_client_when_units_with_no_output(self):
-        client_mock = Mock()
-        config_wrapper_mock = Mock()
-        service_manager_mock = Mock()
-        unit_mock = Mock()
-        unit_mock.unit_type = "Something else"
-
-        client_mock.units = [unit_mock]
-
-        checkin_handler = ConnectorCheckinHandler(
-            client_mock, config_wrapper_mock, service_manager_mock
-        )
-
-        await checkin_handler.apply_from_client()
-
-        assert not config_wrapper_mock.try_update.called
-        assert not service_manager_mock.restart.called
-
-    @pytest.mark.asyncio
-    async def test_apply_from_client_when_units_with_output_and_non_updating_config(
-        self,
-    ):
-        client_mock = Mock()
-        config_wrapper_mock = Mock()
-
-        config_wrapper_mock.try_update.return_value = False
-
-        service_manager_mock = Mock()
-        unit_mock = Mock()
-        unit_mock.unit_type = proto.UnitType.OUTPUT
-        unit_mock.config.source = {"elasticsearch": {"api_key": 123}}
-
-        client_mock.units = [unit_mock]
-
-        checkin_handler = ConnectorCheckinHandler(
-            client_mock, config_wrapper_mock, service_manager_mock
-        )
-
-        await checkin_handler.apply_from_client()
-
-        assert config_wrapper_mock.try_update.called_once_with(unit_mock.config.source)
-        assert not service_manager_mock.restart.called
-
-    @pytest.mark.asyncio
-    async def test_apply_from_client_when_units_with_output_and_updating_config(self):
-        client_mock = Mock()
-        config_wrapper_mock = Mock()
-
-        config_wrapper_mock.try_update.return_value = True
-
-        service_manager_mock = Mock()
-        unit_mock = Mock()
-        unit_mock.unit_type = proto.UnitType.OUTPUT
-        unit_mock.config.source = {"elasticsearch": {"api_key": 123}}
-
-        client_mock.units = [unit_mock]
-
-        checkin_handler = ConnectorCheckinHandler(
-            client_mock, config_wrapper_mock, service_manager_mock
-        )
-
-        await checkin_handler.apply_from_client()
-
-        assert config_wrapper_mock.try_update.called_once_with(unit_mock.config.source)
-        assert service_manager_mock.restart.called
diff --git a/tests/agent/test_service_manager.py b/tests/agent/test_service_manager.py
deleted file mode 100644
index 6e4a528b..00000000
--- a/tests/agent/test_service_manager.py
+++ /dev/null
@@ -1,91 +0,0 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
-import asyncio
-from unittest.mock import Mock, patch
-
-import pytest
-
-from connectors.agent.service_manager import ConnectorServiceManager
-from connectors.services.base import ServiceAlreadyRunningError
-
-
-@pytest.fixture(autouse=True)
-def config_mock():
-    config = Mock()
-
-    config.get.return_value = {
-        "service": {"idling": 123, "heartbeat": 5},
-        "elasticsearch": {},
-        "sources": [],
-    }
-
-    return config
-
-
-class StubMultiService:
-    def __init__(self):
-        self.running_stop = asyncio.Event()
-        self.has_ran = False
-        self.has_shutdown = False
-
-    async def run(self):
-        self.has_ran = True
-        self.running_stop.clear()
-        await self.running_stop.wait()
-
-    def shutdown(self, sig):
-        self.has_shutdown = True
-        self.running_stop.set()
-
-
-@pytest.mark.asyncio
-@patch("connectors.agent.service_manager.get_services", return_value=StubMultiService())
-async def test_run_and_stop_work_as_intended(patch_get_services, config_mock):
-    service_manager = ConnectorServiceManager(config_mock)
-
-    async def stop_service_after_timeout():
-        await asyncio.sleep(0.1)
-        service_manager.stop()
-
-    await asyncio.gather(service_manager.run(), stop_service_after_timeout())
-
-    assert patch_get_services.return_value.has_ran
-    assert patch_get_services.return_value.has_shutdown
-
-
-@pytest.mark.asyncio
-@patch("connectors.agent.service_manager.get_services", return_value=StubMultiService())
-async def test_restart_starts_another_multiservice(patch_get_services, config_mock):
-    service_manager = ConnectorServiceManager(config_mock)
-
-    async def stop_service_after_timeout():
-        await asyncio.sleep(0.1)
-        service_manager.restart()
-        await asyncio.sleep(0.1)
-        service_manager.stop()
-
-    await asyncio.gather(service_manager.run(), stop_service_after_timeout())
-
-    assert patch_get_services.called
-    assert patch_get_services.call_count == 2
-
-
-@pytest.mark.asyncio
-@patch("connectors.agent.service_manager.get_services", return_value=StubMultiService())
-async def test_cannot_run_same_service_manager_twice(patch_get_services, config_mock):
-    service_manager = ConnectorServiceManager(config_mock)
-
-    with pytest.raises(ServiceAlreadyRunningError):
-        tasks = [asyncio.create_task(service_manager.run()) for _ in range(2)]
-        done, pending = await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)
-
-        # Cancel pending to clean up the tasks
-        for task in pending:
-            task.cancel()
-
-        # Execute task results to cause an exception to be raised if any
-        for task in done:
-            task.result()
diff --git a/tests/es/test_cli_client.py b/tests/es/test_cli_client.py
index 65393165..cf4d42b2 100644
--- a/tests/es/test_cli_client.py
+++ b/tests/es/test_cli_client.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 from connectors import __version__
 from connectors.es.cli_client import CLIClient
 
diff --git a/tests/es/test_client.py b/tests/es/test_client.py
index ea9b48e2..dda7a8f0 100644
--- a/tests/es/test_client.py
+++ b/tests/es/test_client.py
@@ -8,8 +8,8 @@ from functools import cached_property
 from unittest import mock
 from unittest.mock import AsyncMock, Mock
 
-import elasticsearch
 import pytest
+from elasticsearch import ApiError, ConflictError, ConnectionError, ConnectionTimeout
 
 from connectors import __version__
 from connectors.es.client import (
@@ -33,13 +33,13 @@ async def test_with_concurrency_control():
     @with_concurrency_control(retries=num_retries)
     async def conflict():
         mock_func()
-        raise elasticsearch.ConflictError(
+        raise ConflictError(
             message="This is an error message from test_with_concurrency_control",
             meta=None,
             body={},
         )
 
-    with pytest.raises(elasticsearch.ConflictError):
+    with pytest.raises(ConflictError):
         await conflict()
 
         assert mock_func.call_count == num_retries
@@ -231,9 +231,7 @@ class TestESClient:
         with mock.patch.object(
             es_client.client,
             "info",
-            side_effect=elasticsearch.ConnectionError(
-                "Cannot connect - no route to host."
-            ),
+            side_effect=ConnectionError("Cannot connect - no route to host."),
         ):
             # Execute
             assert not await es_client.ping()
@@ -303,7 +301,7 @@ class TestTransientElasticsearchRetrier:
 
             if attempt < nr_failed_requests:
                 attempt += 1
-                raise elasticsearch.ApiError(429, meta_mock, "data")
+                raise ApiError(429, meta_mock, "data")
             pass
 
         await retrier.execute_with_retry(_func)
@@ -321,9 +319,9 @@ class TestTransientElasticsearchRetrier:
         async def _func():
             meta_mock = Mock()
             meta_mock.status = 429
-            raise elasticsearch.ApiError(429, meta_mock, "data")
+            raise ApiError(429, meta_mock, "data")
 
-        with pytest.raises(elasticsearch.ApiError) as e:
+        with pytest.raises(ApiError) as e:
             await retrier.execute_with_retry(_func)
 
         assert e is not None
@@ -339,9 +337,9 @@ class TestTransientElasticsearchRetrier:
 
         async def _func():
             msg = ":stop:"
-            raise elasticsearch.ConnectionTimeout(msg)
+            raise ConnectionTimeout(msg)
 
-        with pytest.raises(elasticsearch.ConnectionTimeout) as e:
+        with pytest.raises(ConnectionTimeout) as e:
             await retrier.execute_with_retry(_func)
 
         assert e is not None
@@ -358,7 +356,7 @@ class TestTransientElasticsearchRetrier:
         async def _func():
             await retrier.close()
             msg = ":stop:"
-            raise elasticsearch.ConnectionTimeout(msg)
+            raise ConnectionTimeout(msg)
 
         with pytest.raises(RetryInterruptedError) as e:
             await retrier.execute_with_retry(_func)
diff --git a/tests/es/test_management_client.py b/tests/es/test_management_client.py
index e3a211c8..328a539d 100644
--- a/tests/es/test_management_client.py
+++ b/tests/es/test_management_client.py
@@ -256,6 +256,13 @@ class TestESManagementClient:
 
         es_management_client.client.indices.stats.assert_awaited_with(index="search-*")
 
+    @pytest.mark.asyncio
+    async def test_index_exists(self, es_management_client):
+        index_name = "search-mongo"
+        es_management_client.client.indices.exists = AsyncMock(return_value=True)
+
+        assert await es_management_client.index_exists(index_name=index_name) is True
+
     @pytest.mark.asyncio
     async def test_upsert(self, es_management_client):
         _id = "123"
@@ -284,10 +291,9 @@ class TestESManagementClient:
             return_value=AsyncIterator(records),
         ):
             ids = []
-            async for (
-                doc_id,
-                _,
-            ) in es_management_client.yield_existing_documents_metadata("something"):
+            async for doc_id, _ in es_management_client.yield_existing_documents_metadata(
+                "something"
+            ):
                 ids.append(doc_id)
 
             assert ids == []
@@ -308,10 +314,9 @@ class TestESManagementClient:
             return_value=AsyncIterator(records),
         ):
             ids = []
-            async for (
-                doc_id,
-                _,
-            ) in es_management_client.yield_existing_documents_metadata("something"):
+            async for doc_id, _ in es_management_client.yield_existing_documents_metadata(
+                "something"
+            ):
                 ids.append(doc_id)
 
             assert ids == ["1", "2"]
diff --git a/tests/fake_sources.py b/tests/fake_sources.py
index cfd49e9e..e927e5a1 100644
--- a/tests/fake_sources.py
+++ b/tests/fake_sources.py
@@ -6,7 +6,6 @@
 """
 Collection of fake source classes for tests
 """
-
 from functools import partial
 from unittest.mock import Mock
 
diff --git a/tests/ftest.sh b/tests/ftest.sh
index fd621ba5..f0d4e75b 100755
--- a/tests/ftest.sh
+++ b/tests/ftest.sh
@@ -10,7 +10,6 @@ INDEX_NAME=search-${NAME%"_serverless"}
 
 SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
 ROOT_DIR="$SCRIPT_DIR/.."
-VIRTUAL_ENV="$ROOT_DIR/.venv"
 PLATFORM='unknown'
 MAX_RSS="200M"
 MAX_DURATION=600
@@ -20,7 +19,7 @@ export PERF8_TRACE=${PERF8_TRACE:-False}
 export REFRESH_RATE="${REFRESH_RATE:-5}"
 export DATA_SIZE="${DATA_SIZE:-medium}"
 export RUNNING_FTEST=True
-export VERSION='8.16.0-SNAPSHOT'
+export VERSION='8.15.0-SNAPSHOT'
 
 if [ "$PERF8_TRACE" == true ]; then
     echo 'Tracing is enabled, memray stats will be delivered'
@@ -29,9 +28,9 @@ else
     PLUGINS='--asyncstats --psutil'
 fi
 
-PERF8_BIN=${PERF8_BIN:-$VIRTUAL_ENV/bin/perf8}
-PYTHON=${PYTHON:-$VIRTUAL_ENV/bin/python}
-ELASTIC_INGEST=${ELASTIC_INGEST:-$VIRTUAL_ENV/bin/elastic-ingest}
+PERF8_BIN=${PERF8_BIN:-$ROOT_DIR/bin/perf8}
+PYTHON=${PYTHON:-$ROOT_DIR/bin/python}
+ELASTIC_INGEST=${ELASTIC_INGEST:-$ROOT_DIR/bin/elastic-ingest}
 
 unamestr=$(uname)
 if [[ "$unamestr" == 'Linux' ]]; then
@@ -55,7 +54,7 @@ fi
 $PYTHON fixture.py --name $NAME --action setup
 $PYTHON fixture.py --name $NAME --action start_stack
 $PYTHON fixture.py --name $NAME --action check_stack
-$VIRTUAL_ENV/bin/fake-kibana --index-name $INDEX_NAME --service-type $SERVICE_TYPE --config-file $NAME/config.yml --connector-definition $NAME/connector.json --debug
+$ROOT_DIR/bin/fake-kibana --index-name $INDEX_NAME --service-type $SERVICE_TYPE --config-file $NAME/config.yml --connector-definition $NAME/connector.json --debug
 $PYTHON fixture.py --name $NAME --action load
 
 if [[ $PERF8 == "yes" ]]
diff --git a/tests/sources/fixtures/box/docker-compose.yml b/tests/sources/fixtures/box/docker-compose.yml
index 56f98915..a2eaa693 100644
--- a/tests/sources/fixtures/box/docker-compose.yml
+++ b/tests/sources/fixtures/box/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/box/fixture.py
+    command: bin/python tests/sources/fixtures/box/fixture.py
     ports:
       - "9092:9092"
     volumes:
diff --git a/tests/sources/fixtures/box/fixture.py b/tests/sources/fixtures/box/fixture.py
index 0db6406c..2595e4ad 100644
--- a/tests/sources/fixtures/box/fixture.py
+++ b/tests/sources/fixtures/box/fixture.py
@@ -5,7 +5,6 @@
 #
 # ruff: noqa: T201
 """Module to handle api calls received from connector."""
-
 import io
 import os
 import random
diff --git a/tests/sources/fixtures/confluence/docker-compose.yml b/tests/sources/fixtures/confluence/docker-compose.yml
index b1d00725..e8d178c9 100644
--- a/tests/sources/fixtures/confluence/docker-compose.yml
+++ b/tests/sources/fixtures/confluence/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/confluence/fixture.py
+    command: bin/python tests/sources/fixtures/confluence/fixture.py
     ports:
       - "9696:9696"
     volumes:
diff --git a/tests/sources/fixtures/confluence/fixture.py b/tests/sources/fixtures/confluence/fixture.py
index 0c4ec30a..9562750f 100644
--- a/tests/sources/fixtures/confluence/fixture.py
+++ b/tests/sources/fixtures/confluence/fixture.py
@@ -4,11 +4,10 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Module to responsible to generate confluence documents using the Flask framework."""
-
+"""Module to responsible to generate confluence documents using the Flask framework.
+"""
 import io
 import os
-import re
 import time
 
 from flask import Flask, request
@@ -21,16 +20,16 @@ DATA_SIZE = os.environ.get("DATA_SIZE", "medium").lower()
 
 match DATA_SIZE:
     case "small":
-        SPACE_COUNT = 10
-        SPACE_OBJECT_COUNT = 25
+        SPACE_COUNT = 100
+        SPACE_OBJECT_COUNT = 100
         ATTACHMENT_COUNT = 3
     case "medium":
-        SPACE_COUNT = 10
-        SPACE_OBJECT_COUNT = 50
+        SPACE_COUNT = 100
+        SPACE_OBJECT_COUNT = 200
         ATTACHMENT_COUNT = 5
     case "large":
-        SPACE_COUNT = 10
-        SPACE_OBJECT_COUNT = 75
+        SPACE_COUNT = 100
+        SPACE_OBJECT_COUNT = 250
         ATTACHMENT_COUNT = 7
     case _:
         msg = f"Unknown DATA_SIZE: {DATA_SIZE}. Expecting 'small', 'medium' or 'large'"
@@ -43,14 +42,15 @@ def get_num_docs():
     # There are 2 types of content:
     # - blogpost
     # - page
-    print(SPACE_COUNT + SPACE_COUNT * SPACE_OBJECT_COUNT * ATTACHMENT_COUNT * 2)
+    print(SPACE_COUNT + SPACE_OBJECT_COUNT * ATTACHMENT_COUNT * 2)
 
 
 class ConfluenceAPI:
     def __init__(self):
         self.app = Flask(__name__)
-        self.first_sync = True
         self.space_start_at = 0
+        self.space_page_limit = 100
+        self.total_spaces = SPACE_COUNT
         self.total_content = SPACE_OBJECT_COUNT
         self.attachment_start_at = 1
         self.attachment_end_at = self.attachment_start_at + ATTACHMENT_COUNT - 1
@@ -79,34 +79,48 @@ class ConfluenceAPI:
         Returns:
             spaces (dictionary): dictionary of spaces.
         """
-        if request.args.get("limit") == "1":
-            total_spaces = 1
-            limit = 1
-        elif self.first_sync:
-            self.first_sync = False
-            total_spaces = SPACE_COUNT
-            limit = 100
-        else:
-            total_spaces = SPACE_COUNT - 5  # Delete 5 spaces out of 10
-            limit = 100
+        args = request.args
         spaces = {
             "results": [],
             "start": 0,
-            "limit": limit,
-            "size": total_spaces,
+            "limit": 1,
+            "size": self.total_spaces,
             "_links": {"next": None},
         }
-        for space_count in range(self.space_start_at, total_spaces):
+        if args["limit"] == "1":
             spaces["results"].append(
                 {
-                    "id": f"space_{space_count}",
-                    "key": f"space{space_count}",
-                    "name": f"Demo Space {space_count}",
+                    "id": "space 0",
+                    "name": "Demo Space 0",
                     "_links": {
-                        "webui": f"/spaces/space{space_count}",
+                        "webui": "/spaces/space0",
                     },
                 }
             )
+        else:
+            for space_count in range(self.space_start_at, self.space_page_limit):
+                spaces["results"].append(
+                    {
+                        "id": f"space {space_count}",
+                        "key": f"space{space_count}",
+                        "name": f"Demo Space {space_count}",
+                        "_links": {
+                            "webui": f"/spaces/space{space_count}",
+                        },
+                    }
+                )
+            spaces["start"] = self.space_start_at
+            spaces["limit"] = 100
+            self.space_start_at = self.space_page_limit
+            if self.space_page_limit < spaces["size"]:
+                spaces["_links"]["next"] = "/rest/api/space?limit=100"
+            elif spaces["_links"]["next"] is None:
+                self.space_start_at = 0
+                self.space_page_limit = 0
+                self.total_spaces -= 100  # Deleting 100 spaces for the second sync
+            elif self.space_page_limit >= spaces["size"]:
+                spaces["_links"]["next"] = None
+            self.space_page_limit = self.space_page_limit + spaces["limit"]
         return spaces
 
     def get_label(self, label_id):
@@ -139,12 +153,11 @@ class ConfluenceAPI:
             "_links": {"next": None},
         }
         confluence_query = args.get("cql")
-        space_name = re.search(r"space in \('([^']+)'\)", confluence_query).group(1)
         document_type = confluence_query.split("type=")[1]
         for content_count in range(self.total_content):
             content["results"].append(
                 {
-                    "id": f"{document_type}_{space_name}_{content_count}",
+                    "id": f"{document_type}_{content_count}",
                     "title": f"ES-scrum_{content_count}",
                     "type": document_type,
                     "history": {
@@ -153,7 +166,7 @@ class ConfluenceAPI:
                         "createdBy": {"publicName": "user1", "username": "user1"},
                     },
                     "children": {"attachment": {"size": ATTACHMENT_COUNT}},
-                    "body": {"storage": {"value": fake_provider.get_html()}},
+                    "body": {"storage": {"value": f"This is a test {document_type}"}},
                     "space": {"name": "Demo Space 0"},
                     "_links": {
                         "webui": f"/spaces/space0/{document_type}/{document_type}_{content_count}/ES-scrum_{content_count}",
diff --git a/tests/sources/fixtures/dropbox/docker-compose.yml b/tests/sources/fixtures/dropbox/docker-compose.yml
index dea39c12..e011b9b5 100755
--- a/tests/sources/fixtures/dropbox/docker-compose.yml
+++ b/tests/sources/fixtures/dropbox/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/dropbox/fixture.py
+    command: bin/python tests/sources/fixtures/dropbox/fixture.py
     ports:
       - "8085:8085"
     volumes:
diff --git a/tests/sources/fixtures/dropbox/fixture.py b/tests/sources/fixtures/dropbox/fixture.py
index 42cf3332..24ede084 100755
--- a/tests/sources/fixtures/dropbox/fixture.py
+++ b/tests/sources/fixtures/dropbox/fixture.py
@@ -4,7 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Dropbox module responsible to generate files/folders using flask."""
+"""Dropbox module responsible to generate files/folders using flask.
+"""
 
 import io
 import json
@@ -41,9 +42,6 @@ class DropboxAPI:
         self.app.route("/2/users/get_current_account", methods=["POST"])(
             self.get_current_account
         )
-        self.app.route("/2/team/token/get_authenticated_admin", methods=["POST"])(
-            self.get_authenticated_admin
-        )
         self.app.route("/2/files/list_folder", methods=["POST"])(self.files_list_folder)
         self.app.route("/2/files/list_folder/continue", methods=["POST"])(
             self.files_list_folder_continue
@@ -94,30 +92,6 @@ class DropboxAPI:
             },
         }
 
-    def get_authenticated_admin(self):
-        return {
-            "admin_profile": {
-                "team_member_id": "dbmid:team_member_id",
-                "account_id": "dbid:account_id",
-                "email": "jane.doe@gmail.com",
-                "email_verified": True,
-                "secondary_emails": [],
-                "status": {".tag": "active"},
-                "name": {
-                    "given_name": "Jane",
-                    "surname": "Doe",
-                    "familiar_name": "Jane",
-                    "display_name": "Jane Doe",
-                    "abbreviated_name": "JD",
-                },
-                "membership_type": {".tag": "full"},
-                "joined_on": "2024-07-18T09:28:45Z",
-                "groups": ["g:d9ae612e704114800000000000000004"],
-                "member_folder_id": "3311111067",
-                "root_folder_id": "3311111139",
-            }
-        }
-
     def files_list_folder(self):
         response = {"entries": [], "cursor": "fake-cursor", "has_more": True}
         if self.first_sync:
diff --git a/tests/sources/fixtures/fixture.py b/tests/sources/fixtures/fixture.py
index de99e893..e0608f9c 100644
--- a/tests/sources/fixtures/fixture.py
+++ b/tests/sources/fixtures/fixture.py
@@ -141,7 +141,7 @@ async def _monitor_service(pid):
         start = time.time()
 
         # Fetch connector
-        _, last_synced = await _fetch_connector_metadata(es_client)
+        connector_id, last_synced = await _fetch_connector_metadata(es_client)
         while True:
             _, new_last_synced = await _fetch_connector_metadata(es_client)
             lapsed = time.time() - start
diff --git a/tests/sources/fixtures/github/docker-compose.yml b/tests/sources/fixtures/github/docker-compose.yml
index dd32f310..751f728b 100644
--- a/tests/sources/fixtures/github/docker-compose.yml
+++ b/tests/sources/fixtures/github/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/github/fixture.py
+    command: bin/python tests/sources/fixtures/github/fixture.py
     ports:
       - "9091:9091"
     volumes:
diff --git a/tests/sources/fixtures/github/fixture.py b/tests/sources/fixtures/github/fixture.py
index 5d7b654f..a17bac95 100644
--- a/tests/sources/fixtures/github/fixture.py
+++ b/tests/sources/fixtures/github/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Module to responsible to generate GitHub documents using the Flask framework."""
-
+"""Module to responsible to generate GitHub documents using the Flask framework.
+"""
 import base64
 import os
 
diff --git a/tests/sources/fixtures/google_cloud_storage/docker-compose.yml b/tests/sources/fixtures/google_cloud_storage/docker-compose.yml
index 3a8c4491..bd239007 100644
--- a/tests/sources/fixtures/google_cloud_storage/docker-compose.yml
+++ b/tests/sources/fixtures/google_cloud_storage/docker-compose.yml
@@ -28,7 +28,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/google_cloud_storage/mocker.py
+    command: bin/python tests/sources/fixtures/google_cloud_storage/mocker.py
     ports:
       - "4444:4444"
     volumes:
diff --git a/tests/sources/fixtures/google_cloud_storage/fixture.py b/tests/sources/fixtures/google_cloud_storage/fixture.py
index 7ab9cf87..66e6a14c 100755
--- a/tests/sources/fixtures/google_cloud_storage/fixture.py
+++ b/tests/sources/fixtures/google_cloud_storage/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Google Cloud Storage module responsible to generate blob(s) on the fake Google Cloud Storage server."""
-
+"""Google Cloud Storage module responsible to generate blob(s) on the fake Google Cloud Storage server.
+"""
 import os
 
 from google.auth.credentials import AnonymousCredentials
diff --git a/tests/sources/fixtures/google_cloud_storage/mocker.py b/tests/sources/fixtures/google_cloud_storage/mocker.py
index 34d5d2ca..e8e2beb9 100644
--- a/tests/sources/fixtures/google_cloud_storage/mocker.py
+++ b/tests/sources/fixtures/google_cloud_storage/mocker.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Module responsible for mocking POST call to Google Cloud Storage Data Source"""
-
+"""Module responsible for mocking POST call to Google Cloud Storage Data Source
+"""
 from flask import Flask
 
 app = Flask(__name__)
diff --git a/tests/sources/fixtures/google_drive/docker-compose.yml b/tests/sources/fixtures/google_drive/docker-compose.yml
index 489e6175..9105c28a 100644
--- a/tests/sources/fixtures/google_drive/docker-compose.yml
+++ b/tests/sources/fixtures/google_drive/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/google_drive/fixture.py
+    command: bin/python tests/sources/fixtures/google_drive/fixture.py
     ports:
       - "10339:10339"
     volumes:
diff --git a/tests/sources/fixtures/graphql/docker-compose.yml b/tests/sources/fixtures/graphql/docker-compose.yml
index 69581a15..eaee42ff 100644
--- a/tests/sources/fixtures/graphql/docker-compose.yml
+++ b/tests/sources/fixtures/graphql/docker-compose.yml
@@ -47,7 +47,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/graphql/fixture.py
+    command: bin/python tests/sources/fixtures/graphql/fixture.py
     ports:
       - "9094:9094"
     volumes:
diff --git a/tests/sources/fixtures/graphql/fixture.py b/tests/sources/fixtures/graphql/fixture.py
index 917ee5bf..33372b4a 100644
--- a/tests/sources/fixtures/graphql/fixture.py
+++ b/tests/sources/fixtures/graphql/fixture.py
@@ -3,7 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Module to handle api calls received from connector."""
+"""Module to handle api calls received from connector.
+"""
 
 import base64
 import os
diff --git a/tests/sources/fixtures/jira/docker-compose.yml b/tests/sources/fixtures/jira/docker-compose.yml
index 0f79c3b7..ce85743f 100644
--- a/tests/sources/fixtures/jira/docker-compose.yml
+++ b/tests/sources/fixtures/jira/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/jira/fixture.py
+    command: bin/python tests/sources/fixtures/jira/fixture.py
     ports:
       - "8080:8080"
     volumes:
diff --git a/tests/sources/fixtures/jira/fixture.py b/tests/sources/fixtures/jira/fixture.py
index d32f8a37..c6fc99b8 100644
--- a/tests/sources/fixtures/jira/fixture.py
+++ b/tests/sources/fixtures/jira/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Module to responsible to generate jira documents using the Flask framework."""
-
+"""Module to responsible to generate jira documents using the Flask framework.
+"""
 import io
 import os
 
diff --git a/tests/sources/fixtures/microsoft_teams/docker-compose.yml b/tests/sources/fixtures/microsoft_teams/docker-compose.yml
index ea44cc7e..fc5355b7 100644
--- a/tests/sources/fixtures/microsoft_teams/docker-compose.yml
+++ b/tests/sources/fixtures/microsoft_teams/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/microsoft_teams/fixture.py
+    command: bin/python tests/sources/fixtures/microsoft_teams/fixture.py
     ports:
       - 10971:10971
     volumes:
diff --git a/tests/sources/fixtures/mssql/fixture.py b/tests/sources/fixtures/mssql/fixture.py
index 0504a4e0..ba6783d3 100644
--- a/tests/sources/fixtures/mssql/fixture.py
+++ b/tests/sources/fixtures/mssql/fixture.py
@@ -99,7 +99,9 @@ def inject_lines(table, cursor, lines):
                     faked.random_int(min=1, max=10),  # small_age
                     base64.b64encode(
                         b"\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\x00\x00\x00\x1f\xf3\xff\xa6\x00\x00\x00"
-                    ).decode("utf-8"),  # profile_pic
+                    ).decode(
+                        "utf-8"
+                    ),  # profile_pic
                 )
             )
 
diff --git a/tests/sources/fixtures/network_drive/fixture.py b/tests/sources/fixtures/network_drive/fixture.py
index c141dab0..49a91fe1 100644
--- a/tests/sources/fixtures/network_drive/fixture.py
+++ b/tests/sources/fixtures/network_drive/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Network Drive module responsible to generate file/folder(s) on Network Drive server."""
-
+"""Network Drive module responsible to generate file/folder(s) on Network Drive server.
+"""
 import os
 
 import smbclient
diff --git a/tests/sources/fixtures/notion/docker-compose.yml b/tests/sources/fixtures/notion/docker-compose.yml
index 1c74a1ac..48512887 100644
--- a/tests/sources/fixtures/notion/docker-compose.yml
+++ b/tests/sources/fixtures/notion/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/notion/fixture.py
+    command: bin/python tests/sources/fixtures/notion/fixture.py
     ports:
       - "9096:9096"
     volumes:
diff --git a/tests/sources/fixtures/notion/fixture.py b/tests/sources/fixtures/notion/fixture.py
index 47a388df..6544abc7 100644
--- a/tests/sources/fixtures/notion/fixture.py
+++ b/tests/sources/fixtures/notion/fixture.py
@@ -5,7 +5,6 @@
 #
 # ruff: noqa: T201
 """Module to handle api calls received from connector."""
-
 import os
 
 from flask import Flask, request
diff --git a/tests/sources/fixtures/onedrive/docker-compose.yml b/tests/sources/fixtures/onedrive/docker-compose.yml
index 2165b904..51f54f61 100644
--- a/tests/sources/fixtures/onedrive/docker-compose.yml
+++ b/tests/sources/fixtures/onedrive/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/onedrive/fixture.py
+    command: bin/python tests/sources/fixtures/onedrive/fixture.py
     ports:
       - 10972:10972
     volumes:
diff --git a/tests/sources/fixtures/onedrive/fixture.py b/tests/sources/fixtures/onedrive/fixture.py
index 8ab518c9..5a4133e6 100644
--- a/tests/sources/fixtures/onedrive/fixture.py
+++ b/tests/sources/fixtures/onedrive/fixture.py
@@ -142,9 +142,9 @@ class DataGenerator:
                 item["folder"] = file["folder"]
             else:
                 item["file"] = file["file"]
-                item["@microsoft.graph.downloadUrl"] = (
-                    f"{ROOT}/users/{user_id}/drive/items/{file['id']}/content"
-                )
+                item[
+                    "@microsoft.graph.downloadUrl"
+                ] = f"{ROOT}/users/{user_id}/drive/items/{file['id']}/content"
 
             results.append(item)
 
@@ -214,9 +214,7 @@ class OneDriveAPI:
         }
 
         if len(users) == take:
-            response["@odata.nextLink"] = (
-                f"{ROOT}/users?$skip={skip + take}&$take={take}"
-            )
+            response["@odata.nextLink"] = f"{ROOT}/users?$skip={skip+take}&$take={take}"
 
         return response
 
@@ -246,9 +244,9 @@ class OneDriveAPI:
         }
 
         if len(drive_items) == take:
-            response["@odata.nextLink"] = (
-                f"{ROOT}/users/{user_id}/drive/root/delta?$skip={skip + take}&$take={take}"
-            )
+            response[
+                "@odata.nextLink"
+            ] = f"{ROOT}/users/{user_id}/drive/root/delta?$skip={skip+take}&$take={take}"
 
         return response
 
diff --git a/tests/sources/fixtures/oracle/fixture.py b/tests/sources/fixtures/oracle/fixture.py
index aef26637..045aa59f 100644
--- a/tests/sources/fixtures/oracle/fixture.py
+++ b/tests/sources/fixtures/oracle/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Oracle module responsible to generate records on the Oracle server."""
-
+"""Oracle module responsible to generate records on the Oracle server.
+"""
 import os
 import random
 
@@ -23,6 +23,7 @@ BATCH_SIZE = 100
 
 USER = "c##admin"
 PASSWORD = "Password_123"
+ENCODING = "UTF-8"
 DSN = "localhost:1521/FREE"
 
 DATA_SIZE = os.environ.get("DATA_SIZE", "medium").lower()
@@ -65,13 +66,17 @@ def inject_lines(table, cursor, lines):
 async def load():
     """Generate tables and loads table data in the oracle server."""
     """N tables of RECORD_COUNT rows each"""
-    connection = oracledb.connect(user="system", password=PASSWORD, dsn=DSN)
+    connection = oracledb.connect(
+        user="system", password=PASSWORD, dsn=DSN, encoding=ENCODING
+    )
     cursor = connection.cursor()
     cursor.execute(f"CREATE USER {USER} IDENTIFIED by {PASSWORD} CONTAINER=ALL")
     cursor.execute(f"GRANT CONNECT, RESOURCE, DBA TO {USER}")
     connection.commit()
 
-    connection = oracledb.connect(user=USER, password=PASSWORD, dsn=DSN)
+    connection = oracledb.connect(
+        user=USER, password=PASSWORD, dsn=DSN, encoding=ENCODING
+    )
     cursor = connection.cursor()
     for table in range(NUM_TABLES):
         print(f"Adding data for table #{table}...")
@@ -83,7 +88,9 @@ async def load():
 
 async def remove():
     """Removes 10 random items per table"""
-    connection = oracledb.connect(user=USER, password=PASSWORD, dsn=DSN)
+    connection = oracledb.connect(
+        user=USER, password=PASSWORD, dsn=DSN, encoding=ENCODING
+    )
     cursor = connection.cursor()
 
     for table in range(NUM_TABLES):
diff --git a/tests/sources/fixtures/salesforce/docker-compose.yml b/tests/sources/fixtures/salesforce/docker-compose.yml
index 182ea991..e3096504 100644
--- a/tests/sources/fixtures/salesforce/docker-compose.yml
+++ b/tests/sources/fixtures/salesforce/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build:
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/salesforce/fixture.py
+    command: bin/python tests/sources/fixtures/salesforce/fixture.py
     ports:
       - "10338:10338"
     volumes:
diff --git a/tests/sources/fixtures/servicenow/docker-compose.yml b/tests/sources/fixtures/servicenow/docker-compose.yml
index e5b170c4..b0bd45e5 100644
--- a/tests/sources/fixtures/servicenow/docker-compose.yml
+++ b/tests/sources/fixtures/servicenow/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/servicenow/fixture.py
+    command: bin/python tests/sources/fixtures/servicenow/fixture.py
     ports:
       - "9318:9318"
     volumes:
diff --git a/tests/sources/fixtures/servicenow/fixture.py b/tests/sources/fixtures/servicenow/fixture.py
index d21adc5f..59eb0d77 100644
--- a/tests/sources/fixtures/servicenow/fixture.py
+++ b/tests/sources/fixtures/servicenow/fixture.py
@@ -4,8 +4,8 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 # ruff: noqa: T201
-"""Module to responsible to generate ServiceNow documents using the Flask framework."""
-
+"""Module to responsible to generate ServiceNow documents using the Flask framework.
+"""
 import base64
 import io
 import os
diff --git a/tests/sources/fixtures/sharepoint_online/docker-compose.yml b/tests/sources/fixtures/sharepoint_online/docker-compose.yml
index 759d5d2d..6ceec47d 100644
--- a/tests/sources/fixtures/sharepoint_online/docker-compose.yml
+++ b/tests/sources/fixtures/sharepoint_online/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/sharepoint_online/fixture.py
+    command: bin/python tests/sources/fixtures/sharepoint_online/fixture.py
     ports:
       - 10337:10337
     volumes:
diff --git a/tests/sources/fixtures/sharepoint_online/fixture.py b/tests/sources/fixtures/sharepoint_online/fixture.py
index 539f5642..89583695 100644
--- a/tests/sources/fixtures/sharepoint_online/fixture.py
+++ b/tests/sources/fixtures/sharepoint_online/fixture.py
@@ -3,6 +3,7 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
+# ruff: noqa: T201
 """Module to handle api calls received from connector."""
 
 import os
@@ -96,7 +97,7 @@ TOTAL_RECORD_COUNT = NUMBER_OF_SITES * (
 
 
 def get_num_docs():
-    print(TOTAL_RECORD_COUNT)  # noqa: T201
+    print(TOTAL_RECORD_COUNT)
 
 
 class AutoIncrement:
@@ -253,20 +254,6 @@ class RandomDataStorage:
 
         return results
 
-    def get_tenant_root_site_collections(self):
-        return {
-            "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#sites/$entity",
-            "createdDateTime": "2023-12-12T12:00:00.000Z",
-            "description": fake.paragraph(),
-            "id": str(fake.uuid4()),
-            "lastModifiedDateTime": "2023-12-12T12:00:00.000Z",
-            "name": "fake-site-collection",
-            "webUrl": "https://example.sharepoint.com",
-            "displayName": "Fake Site Collection",
-            "root": {},
-            "siteCollection": {"hostname": "example.sharepoint.com"},
-        }
-
     def get_sites(self, skip=0, take=10):
         results = []
 
@@ -409,9 +396,9 @@ class RandomDataStorage:
                 drive_item["size"] = 0
             else:
                 drive_item["size"] = item["size"]
-                drive_item["@microsoft.graph.downloadUrl"] = (
-                    f"{ROOT}/drives/{drive_id}/items/{item['id']}/content"
-                )
+                drive_item[
+                    "@microsoft.graph.downloadUrl"
+                ] = f"{ROOT}/drives/{drive_id}/items/{item['id']}/content"
 
             results.append(drive_item)
 
@@ -561,9 +548,9 @@ class RandomDataStorage:
                     "FileName": attachment["title"],
                     "FileNameAsPath": {"DecodedUrl": attachment["title"]},
                     "ServerRelativePath": {
-                        "DecodedUrl": f"/sites/{site['name']}/Lists/{list['name']}/Attachments/{list_item_id}/{attachment['title']}"  # noqa: F821
+                        "DecodedUrl": f"/sites/{site['name']}/Lists/{list['name']}/Attachments/{list_item_id}/{attachment['title']}"
                     },
-                    "ServerRelativeUrl": f"/sites/site['name']/Lists/{list['name']}/Attachments/{list_item_id}/{attachment['title']}",  # noqa: F821
+                    "ServerRelativeUrl": f"/sites/site['name']/Lists/{list['name']}/Attachments/{list_item_id}/{attachment['title']}",
                 }
             )
 
@@ -619,12 +606,6 @@ def get_site_collections():
     }
 
 
-@app.route("/sites/root", methods=["GET"])
-def get_tenant_root_site_collections():
-    # No paging as there's always one site collection
-    return data_storage.get_tenant_root_site_collections()
-
-
 @app.route("/sites/<string:site_id>/sites", methods=["GET"])
 def get_sites(site_id):
     # Sharepoint Online does not use skip/take, but we do it here just for lazy implementation
@@ -639,9 +620,9 @@ def get_sites(site_id):
     }
 
     if len(sites) == take:
-        response["@odata.nextLink"] = (
-            f"{ROOT}/sites/site_id/sites?$skip={skip + take}&$take={take}"
-        )
+        response[
+            "@odata.nextLink"
+        ] = f"{ROOT}/sites/site_id/sites?$skip={skip+take}&$take={take}"
 
     return response
 
@@ -667,9 +648,9 @@ def get_drive_root_delta(drive_id):
     }
 
     if len(drive_items) == take:
-        response["@odata.nextLink"] = (
-            f"{ROOT}/drives/{drive_id}/root/delta?$skip={skip + take}&$take={take}"
-        )
+        response[
+            "@odata.nextLink"
+        ] = f"{ROOT}/drives/{drive_id}/root/delta?$skip={skip+take}&$take={take}"
 
     return response
 
@@ -693,9 +674,9 @@ def get_site_lists(site_id):
     }
 
     if len(site_lists) == take:
-        response["@odata.nextLink"] = (
-            f"{ROOT}/sites/{site_id}/lists?$skip={skip + take}&$take={take}"
-        )
+        response[
+            "@odata.nextLink"
+        ] = f"{ROOT}/sites/{site_id}/lists?$skip={skip+take}&$take={take}"
 
     return response
 
@@ -713,9 +694,9 @@ def get_site_list_items(site_id, list_id):
     }
 
     if len(site_list_items) == take:
-        response["@odata.nextLink"] = (
-            f"{ROOT}/sites/{site_id}/lists/{list_id}/items?$skip={skip + take}&$take={take}"
-        )
+        response[
+            "@odata.nextLink"
+        ] = f"{ROOT}/sites/{site_id}/lists/{list_id}/items?$skip={skip+take}&$take={take}"
 
     return response
 
@@ -745,9 +726,9 @@ def get_site_pages(site_name):
         "value": site_pages,
     }
     if len(site_pages) == take:
-        response["odata.nextLink"] = (
-            f"{ROOT}/sites/{site_name}/_api/web/lists/GetByTitle('Site Pages')/items?$skip={skip + take}&$take={take}"
-        )
+        response[
+            "odata.nextLink"
+        ] = f"{ROOT}/sites/{site_name}/_api/web/lists/GetByTitle('Site Pages')/items?$skip={skip+take}&$take={take}"
 
     return response
 
diff --git a/tests/sources/fixtures/sharepoint_server/connector.json b/tests/sources/fixtures/sharepoint_server/connector.json
index 1d6b603f..fb3de84d 100644
--- a/tests/sources/fixtures/sharepoint_server/connector.json
+++ b/tests/sources/fixtures/sharepoint_server/connector.json
@@ -1,54 +1,43 @@
 {
     "api_key_id": "clvIfIgBFjJwEZQV7bda",
     "configuration": {
-      "authentication": {
-        "label": "Authentication mode",
-        "order": 1,
-        "type": "str",
-        "options": [
-            {"label": "Basic", "value": "Basic"},
-            {"label": "NTLM", "value": "NTLM"}
-        ],
-        "display": "dropdown",
-        "value": "Basic"
-      },
       "username": {
         "label": "SharePoint Server username",
-        "order": 2,
+        "order": 1,
         "type": "str",
         "value": "demo_user"
       },
       "password": {
         "label": "SharePoint Server password",
         "sensitive": true,
-        "order": 3,
+        "order": 2,
         "type": "str",
         "value": "abc@123"
       },
       "host_url": {
         "label": "SharePoint host",
-        "order": 4,
+        "order": 3,
         "type": "str",
         "value": "http://127.0.0.1:8491"
       },
       "site_collections": {
         "display": "textarea",
         "label": "Comma-separated list of SharePoint site collections to index",
-        "order": 5,
+        "order": 4,
         "type": "list",
         "value": "collection1"
       },
       "ssl_enabled": {
         "display": "toggle",
         "label": "Enable SSL",
-        "order": 6,
+        "order": 5,
         "type": "bool",
         "value": false
       },
       "ssl_ca": {
         "depends_on": [{"field": "ssl_enabled", "value": true}],
         "label": "SSL certificate",
-        "order": 7,
+        "order": 6,
         "type": "str",
         "value": ""
       },
@@ -56,7 +45,7 @@
         "default_value": 3,
         "display": "numeric",
         "label": "Retries per request",
-        "order": 8,
+        "order": 7,
         "required": false,
         "type": "int",
         "ui_restrictions": ["advanced"],
@@ -68,7 +57,7 @@
         "display": "toggle",
         "label": "Use text extraction service",
         "options": [],
-        "order": 9,
+        "order": 7,
         "required": true,
         "sensitive": false,
         "tooltip": "Requires a separate deployment of the Elastic Text Extraction Service. Requires that pipeline settings disable text extraction.",
diff --git a/tests/sources/fixtures/sharepoint_server/docker-compose.yml b/tests/sources/fixtures/sharepoint_server/docker-compose.yml
index 973b186b..57b6f631 100644
--- a/tests/sources/fixtures/sharepoint_server/docker-compose.yml
+++ b/tests/sources/fixtures/sharepoint_server/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/sharepoint_server/fixture.py
+    command: bin/python tests/sources/fixtures/sharepoint_server/fixture.py
     ports:
       - "8491:8491"
     volumes:
diff --git a/tests/sources/fixtures/sharepoint_server/fixture.py b/tests/sources/fixtures/sharepoint_server/fixture.py
index a309c578..f565c8d9 100644
--- a/tests/sources/fixtures/sharepoint_server/fixture.py
+++ b/tests/sources/fixtures/sharepoint_server/fixture.py
@@ -87,27 +87,7 @@ def before_request():
     time.sleep(PRE_REQUEST_SLEEP)
 
 
-@app.route("/sites/<path:site_collections>/_api/web", methods=["get"])
-def get_site(site_collections):
-    site = {
-        "Created": "2023-10-24T00:24:36",
-        "Description": site_collections,
-        "Id": "cc594a12-3ded-451a-b868-40ccec07d354",
-        "Language": 1033,
-        "LastItemModifiedDate": "2024-04-24T13:40:24Z",
-        "NoCrawl": False,
-        "ServerRelativeUrl": "/",
-        "Title": "Portal Home",
-        "Url": f"http://127.0.0.1:8491/sites/{site_collections}",
-        "WebTemplate": "STS",
-        "WelcomePage": "SitePages/Home.aspx",
-        "HasUniqueRoleAssignments": False,
-    }
-
-    return site
-
-
-@app.route("/sites/<path:site_collections>/_api/web/webs", methods=["get"])
+@app.route("/sites/<string:site_collections>/_api/web/webs", methods=["GET"])
 def get_sites(site_collections):
     """Function to handle get sites calls with the site_collection passed as an argument
     Args:
@@ -128,19 +108,14 @@ def get_sites(site_collections):
         else:
             skip_end = skip_start + top
         for site in range(skip_start, skip_end):
-            if site_collections == "collection1":
-                url_part = f"site1_{site}"
-            else:
-                url_part = ""
-
             sites["value"].append(
                 {
                     "Created": "2023-01-30T10:02:39",
                     "Id": adjust_document_id_size(f"sites-{site}"),
                     "LastItemModifiedDate": "2023-02-16T06:48:30Z",
-                    "ServerRelativeUrl": f"/{url_part}",
+                    "ServerRelativeUrl": f"/sites/site1_{site}",
                     "Title": f"site1_{site}",
-                    "Url": f"http://127.0.0.1:8491/sites/{url_part}",
+                    "Url": f"http://127.0.0.1:8000/sites/{site_collections}/site1_{site}",
                 }
             )
     else:
@@ -152,18 +127,19 @@ def get_sites(site_collections):
                     "LastItemModifiedDate": "2023-02-16T06:48:30Z",
                     "ServerRelativeUrl": "/sites/collection1/site1",
                     "Title": "site1",
-                    "Url": f"http://127.0.0.1:8491/sites/{site_collections}/site1",
+                    "Url": f"http://127.0.0.1:8000/sites/{site_collections}/site1",
                 },
             ]
         }
     return sites
 
 
-@app.route("/<path:site>/_api/web/lists", methods=["GET"])
-def get_lists(site):
+@app.route("/<string:parent_site_url>/<string:site>/_api/web/lists", methods=["GET"])
+def get_lists(parent_site_url, site):
     """Function to handle get lists calls with the serversiteurl passed as an argument
     Args:
-        site (str): Site url
+        parent_site_url (str): Path of parent site
+        site (str): Site name
 
     Returns:
         lists (dict): Dictionary of lists
@@ -179,15 +155,13 @@ def get_lists(site):
                 {
                     "BaseType": 0,
                     "Created": "2023-01-30T10:02:39Z",
-                    "Id": adjust_document_id_size(
-                        f"lists-{site.replace('/', '-')}-{lists_count}"
-                    ),
+                    "Id": adjust_document_id_size(f"lists-{site}-{lists_count}"),
                     "LastItemModifiedDate": "2023-01-30T10:02:40Z",
-                    "ParentWebUrl": f"/{site}",
+                    "ParentWebUrl": f"/{parent_site_url}",
                     "Title": f"{site}-List1",
                     "RootFolder": {
                         "Name": "Shared Documents",
-                        "ServerRelativeUrl": f"{site}/{lists_count}",
+                        "ServerRelativeUrl": f"/{parent_site_url}/{site}/{lists_count}",
                         "TimeCreated": "2023-02-08T06:03:10Z",
                         "TimeLastModified": "2023-02-16T06:48:36Z",
                         "UniqueId": "52e62bcf-de67-4bbc-b399-b8b28bc97449",
@@ -200,7 +174,7 @@ def get_lists(site):
 
 
 @app.route(
-    "/<path:parent_site_url>/_api/web/lists(guid'<string:list_id>')/items",
+    "/<string:parent_site_url>/_api/web/lists(guid'<string:list_id>')/items",
     methods=["GET"],
 )
 def get_list_and_items(parent_site_url, list_id):
@@ -213,7 +187,6 @@ def get_list_and_items(parent_site_url, list_id):
         item (dict): Dictionary of list item or drive item
     """
     args = request.args
-    parent_site_id = parent_site_url.replace("/", "-")
     if args.get("$expand", "") == "AttachmentFiles,Author,Editor":
         item = {
             "value": [
@@ -221,11 +194,13 @@ def get_list_and_items(parent_site_url, list_id):
                     "Attachments": True,
                     "AttachmentFiles": [],
                     "Created": "2023-01-30T10:02:39Z",
-                    "GUID": f"list-item-att-{parent_site_id}-{list_id}",
+                    "GUID": f"list-item-att-{parent_site_url}-{list_id}",
                     "FileRef": parent_site_url,
                     "Modified": "2023-01-30T10:02:40Z",
                     "AuthorId": 12345,
                     "EditorId": 12345,
+                    "Editor": {"Name": "system"},
+                    "Author": {"Name": "system"},
                     "Title": f"list-item-{list_id}",
                 }
             ]
@@ -235,7 +210,7 @@ def get_list_and_items(parent_site_url, list_id):
                 {
                     "Something": "Something",
                     "FileName": f"dummy{list_id}-{item_id}.html",
-                    "ServerRelativeUrl": f"{parent_site_id}-dummy{list_id}-{item_id}.html",
+                    "ServerRelativeUrl": f"{parent_site_url}-dummy{list_id}-{item_id}.html",
                 }
             )
     else:
@@ -245,14 +220,16 @@ def get_list_and_items(parent_site_url, list_id):
                     "Attachments": False,
                     "Created": "2023-01-30T10:02:39Z",
                     "GUID": adjust_document_id_size(
-                        f"list-item-{parent_site_id}-{list_id}"
+                        f"list-item-{parent_site_url}-{list_id}"
                     ),
                     "Modified": "2023-01-30T10:02:40Z",
                     "AuthorId": 12345,
                     "EditorId": 12345,
+                    "Editor": {"Name": "system"},
+                    "Author": {"Name": "system"},
                     "Title": f"list-item-{list_id}",
                     "Id": adjust_document_id_size(
-                        f"{parent_site_id}-list-id1-{list_id}"
+                        f"{parent_site_url}-list-id1-{list_id}"
                     ),
                     "ContentTypeId": f"123-{list_id}",
                 },
@@ -260,15 +237,17 @@ def get_list_and_items(parent_site_url, list_id):
                     "Attachments": False,
                     "Created": "2023-01-30T10:02:39Z",
                     "GUID": adjust_document_id_size(
-                        f"{parent_site_id}-list-item-{list_id}"
+                        f"{parent_site_url}-list-item-{list_id}"
                     ),
                     "FileRef": parent_site_url,
                     "Modified": "2023-01-30T10:02:40Z",
                     "AuthorId": 12345,
                     "EditorId": 12345,
+                    "Editor": {"Name": "system"},
+                    "Author": {"Name": "system"},
                     "Title": f"list-item-{list_id}",
                     "Id": adjust_document_id_size(
-                        f"{parent_site_id}-list-id2-{list_id}"
+                        f"{parent_site_url}-list-id2-{list_id}"
                     ),
                     "ContentTypeId": f"456-{list_id}",
                 },
@@ -279,7 +258,7 @@ def get_list_and_items(parent_site_url, list_id):
 
 
 @app.route(
-    "/<path:parent_site_url>/_api/web/getfilebyserverrelativeurl('<string:file_relative_url>')",
+    "/<string:parent_site_url>/_api/web/getfilebyserverrelativeurl('<string:file_relative_url>')",
     methods=["GET"],
 )
 def get_attachment_data(parent_site_url, file_relative_url):
@@ -291,23 +270,22 @@ def get_attachment_data(parent_site_url, file_relative_url):
     Returns:
         data (dict): Dictionary of attachment metadata
     """
-    parent_site_id = parent_site_url.replace("/", "-")
     return {
         "Length": 12345,
-        "Name": f"attachment-{parent_site_id}-{file_relative_url}",
+        "Name": f"attachment-{parent_site_url}-{file_relative_url}",
         "ServerRelativeUrl": f"{parent_site_url}/dummy",
         "TimeCreated": "2023-01-30T10:02:40Z",
         "TimeLastModified": "2023-01-30T10:02:40Z",
-        "Id": f"attachment-{parent_site_id}-{file_relative_url}",
-        "UniqueId": f"attachment-{parent_site_id}-{file_relative_url}",
+        "Id": f"attachment-{parent_site_url}-{file_relative_url}",
+        "UniqueId": f"attachment-{parent_site_url}-{file_relative_url}",
     }
 
 
 @app.route(
-    "/<path:site>/_api/web/GetFileByServerRelativeUrl('<string:server_url>')/$value",
+    "/<string:parent_url>/<string:site>/_api/web/GetFileByServerRelativePath(decodedurl='<string:server_url>')/$value",
     methods=["GET"],
 )
-def download(site, server_url):
+def download(parent_url, site, server_url):
     """Function to extract content of a attachment on the sharepoint
     Args:
         parent_url (str): Path of parent site
diff --git a/tests/sources/fixtures/zoom/docker-compose.yml b/tests/sources/fixtures/zoom/docker-compose.yml
index 8dd22775..5ad87c9d 100644
--- a/tests/sources/fixtures/zoom/docker-compose.yml
+++ b/tests/sources/fixtures/zoom/docker-compose.yml
@@ -77,7 +77,7 @@ services:
     build: 
       context: ../../../../
       dockerfile: ${DOCKERFILE_FTEST_PATH}
-    command: .venv/bin/python tests/sources/fixtures/zoom/fixture.py
+    command: bin/python tests/sources/fixtures/zoom/fixture.py
     ports:
       - 10971:10971
     volumes:
diff --git a/tests/sources/test_azure_blob_storage.py b/tests/sources/test_azure_blob_storage.py
index 601c2ab7..090066d9 100644
--- a/tests/sources/test_azure_blob_storage.py
+++ b/tests/sources/test_azure_blob_storage.py
@@ -665,15 +665,12 @@ async def test_get_content_with_text_extraction_enabled_adds_body():
     }
     mock_download = b"Mock...."
 
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=str(mock_download),
-        ) as extraction_service_mock,
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=str(mock_download),
+    ) as extraction_service_mock, patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_abs_source(use_text_extraction_service=True) as source:
             source.connection_string = source._configure_connection_string()
diff --git a/tests/sources/test_box.py b/tests/sources/test_box.py
index 26152733..d341e453 100644
--- a/tests/sources/test_box.py
+++ b/tests/sources/test_box.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Box source class methods"""
-
 from unittest.mock import AsyncMock, Mock, patch
 
 import aiohttp
diff --git a/tests/sources/test_confluence.py b/tests/sources/test_confluence.py
index 087b8e4b..8a32ec26 100644
--- a/tests/sources/test_confluence.py
+++ b/tests/sources/test_confluence.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Confluence database source class methods"""
-
 import ssl
 from contextlib import asynccontextmanager
 from copy import copy
@@ -56,7 +55,6 @@ RESPONSE_SPACE = {
 SPACE = {
     "id": 4554779,
     "name": "DEMO",
-    "key": "DM",
     "_links": {
         "webui": "/spaces/DM",
     },
@@ -111,32 +109,6 @@ RESPONSE_PAGE = {
     "_links": {},
 }
 
-RESPONSE_PAGE_WITH_HTML = {
-    "results": [
-        {
-            "id": 4779,
-            "title": "ES-scrum",
-            "type": "page",
-            "history": {
-                "lastUpdated": {"when": "2023-01-24T04:07:19.672Z"},
-                "createdDate": "2023-01-03T09:24:50.633Z",
-                "createdBy": {"publicName": "user1"},
-            },
-            "children": {"attachment": {"size": 2}},
-            "body": {"storage": {"value": "<p>This is a test page</p>"}},
-            "space": {"name": "DEMO"},
-            "_links": {
-                "webui": "/spaces/~1234abc/pages/4779/ES-scrum",
-            },
-            "ancestors": [{"title": "parent_title"}],
-        }
-    ],
-    "start": 0,
-    "limit": 1,
-    "size": 1,
-    "_links": {},
-}
-
 EXPECTED_PAGE = {
     "_id": "4779",
     "type": "page",
@@ -159,7 +131,6 @@ EXPECTED_SPACE = {
     "url": "http://127.0.0.1:9696/spaces/DM",
     "createdDate": "2023-01-03T09:24:50.633Z",
     "author": "user1",
-    "key": "DM",
 }
 
 RESPONSE_ATTACHMENT = {
@@ -641,10 +612,12 @@ async def test_validate_config_with_valid_dependency_fields_does_not_raise_error
 
 
 @pytest.mark.asyncio
-async def test_validate_config_when_ssl_enabled_and_ssl_ca_not_empty_does_not_raise_error():
+@patch("aiohttp.ClientSession.get")
+async def test_validate_config_when_ssl_enabled_and_ssl_ca_not_empty_does_not_raise_error(
+    mock_get,
+):
     with patch.object(ssl, "create_default_context", return_value=MockSSL()):
         async with create_confluence_source() as source:
-            source.confluence_client._get_session().get = AsyncMock()
             source.configuration.get_field("username").value = "foo"
             source.configuration.get_field("password").value = "foo"
             source.configuration.get_field("ssl_enabled").value = True
@@ -700,11 +673,13 @@ async def test_close_without_client_session():
 async def test_remote_validation_when_space_keys_are_valid():
     async with create_confluence_source() as source:
         source.spaces = ["DM", "ES"]
-        source.confluence_client._get_session().get = AsyncMock(
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(
             return_value=JSONAsyncMock(RESPONSE_SPACE_KEYS)
         )
 
-        await source._remote_validation()
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            await source._remote_validation()
 
 
 @pytest.mark.asyncio
@@ -712,12 +687,11 @@ async def test_remote_validation_when_space_keys_are_unavailable_then_raise_exce
     async with create_confluence_source() as source:
         source.spaces = ["ES", "CS"]
         async_response = AsyncMock()
-        async_response.json.return_value = RESPONSE_SPACE_KEYS
+        async_response.__aenter__ = AsyncMock(
+            return_value=JSONAsyncMock(RESPONSE_SPACE_KEYS)
+        )
 
-        with mock.patch(
-            "connectors.sources.confluence.ConfluenceClient.api_call",
-            return_value=async_response,
-        ):
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
             with pytest.raises(
                 ConfigurableFieldValueError,
                 match="Spaces 'CS' are not available. Available spaces are: 'DM, ES'",
@@ -759,12 +733,13 @@ async def test_validate_configuration_for_empty_fields(field, data_source):
 
 
 @pytest.mark.asyncio
-async def test_ping_with_ssl():
+@patch("aiohttp.ClientSession.get")
+async def test_ping_with_ssl(mock_get):
     """Test ping method of ConfluenceDataSource class with SSL"""
 
     # Execute
+    mock_get.return_value.__aenter__.return_value.status = 200
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock()
         source.confluence_client.ssl_enabled = True
         source.confluence_client.certificate = (
             "-----BEGIN CERTIFICATE----- Certificate -----END CERTIFICATE-----"
@@ -813,17 +788,20 @@ async def test_get_with_429_status():
     initial_response.message = "rate-limited"
     initial_response.headers = {"Retry-After": 0.1}
 
-    payload = {"value": "Test rate limit"}
     retried_response = AsyncMock()
-    retried_response.json.return_value = payload
+    payload = {"value": "Test rate limit"}
+
+    retried_response.__aenter__ = AsyncMock(return_value=JSONAsyncMock(payload))
+    retried_response.__aexit__ = AsyncMock(return_value=None)
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            side_effect=[initial_response, retried_response]
-        )
-        response = await source.confluence_client.api_call(
-            url="http://localhost:1000/sample"
-        )
-        result = await response.json()
+        with patch(
+            "aiohttp.ClientSession.get",
+            side_effect=[initial_response, retried_response],
+        ):
+            async for response in source.confluence_client.api_call(
+                url="http://localhost:1000/sample"
+            ):
+                result = await response.json()
 
     assert result == payload
 
@@ -831,20 +809,27 @@ async def test_get_with_429_status():
 @pytest.mark.asyncio
 @patch("connectors.utils.time_to_sleep_between_retries", Mock(return_value=0))
 async def test_get_with_429_status_without_retry_after_header():
+    initial_response = ClientResponseError(None, None)
+    initial_response.status = 429
+    initial_response.message = "rate-limited"
+
+    retried_response = AsyncMock()
     payload = {"value": "Test rate limit"}
-    async_mock_response = AsyncMock()
-    async_mock_response.json.return_value = payload
 
-    async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=async_mock_response
-        )
-        response = await source.confluence_client.api_call(
-            url="http://localhost:1000/sample"
-        )
-        result = await response.json()
+    retried_response.__aenter__ = AsyncMock(return_value=JSONAsyncMock(payload))
+    retried_response.__aexit__ = AsyncMock(return_value=None)
+    with patch("connectors.sources.confluence.DEFAULT_RETRY_SECONDS", 0):
+        async with create_confluence_source() as source:
+            with patch(
+                "aiohttp.ClientSession.get",
+                side_effect=[initial_response, retried_response],
+            ):
+                async for response in source.confluence_client.api_call(
+                    url="http://localhost:1000/sample"
+                ):
+                    result = await response.json()
 
-    assert result == payload
+        assert result == payload
 
 
 @pytest.mark.asyncio
@@ -858,10 +843,10 @@ async def test_get_with_404_status():
             side_effect=error,
         ):
             with pytest.raises(NotFound):
-                response = await source.confluence_client.api_call(
+                async for response in source.confluence_client.api_call(
                     url="http://localhost:1000/err"
-                )
-                await response.json()
+                ):
+                    await response.json()
 
 
 @pytest.mark.asyncio
@@ -876,10 +861,10 @@ async def test_get_with_500_status():
             side_effect=error,
         ):
             with pytest.raises(InternalServerError):
-                response = await source.confluence_client.api_call(
+                async for response in source.confluence_client.api_call(
                     url="http://localhost:1000/err"
-                )
-                await response.json()
+                ):
+                    await response.json()
 
 
 @freeze_time("2023-01-24T04:07:19")
@@ -888,100 +873,101 @@ async def test_fetch_spaces():
     # Setup
     async with create_confluence_source() as source:
         async_response = AsyncMock()
-        async_response.json.return_value = RESPONSE_SPACE
-
-        source.confluence_client.api_call = AsyncMock(
+        async_response.__aenter__ = AsyncMock(
             return_value=JSONAsyncMock(RESPONSE_SPACE)
         )
-        async for response in source.confluence_client.fetch_spaces():
-            assert response["id"] == EXPECTED_SPACE["_id"]
+
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            async for response in source.confluence_client.fetch_spaces():
+                assert response == RESPONSE_SPACE["results"][0]
 
 
 @pytest.mark.asyncio
 async def test_fetch_documents():
     # Setup
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=JSONAsyncMock(RESPONSE_PAGE)
-        )
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(return_value=JSONAsyncMock(RESPONSE_PAGE))
         source.confluence_client.index_labels = True
         source.confluence_client.data_source_type = "confluence_cloud"
         # Execute
-        async for response, _, _, _, _ in source.fetch_documents(api_query=""):
-            assert response == EXPECTED_PAGE
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            async for response, _, _, _, _ in source.fetch_documents(api_query=""):
+                assert response == EXPECTED_PAGE
 
 
 @pytest.mark.asyncio
 async def test_fetch_attachments():
     # Setup
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(
             return_value=JSONAsyncMock(RESPONSE_ATTACHMENT)
         )
 
         # Execute
-        async for response, _ in source.fetch_attachments(
-            content_id=1113,
-            parent_name="ES-scrum",
-            parent_space="DEMO",
-            parent_type="page",
-        ):
-            assert response == EXPECTED_ATTACHMENT
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            async for response, _ in source.fetch_attachments(
+                content_id=1113,
+                parent_name="ES-scrum",
+                parent_space="DEMO",
+                parent_type="page",
+            ):
+                assert response == EXPECTED_ATTACHMENT
 
 
 @pytest.mark.asyncio
 async def test_search_by_query():
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(
             return_value=JSONAsyncMock(RESPONSE_SEARCH_RESULT)
         )
         source.confluence_client.data_source_type = "confluence_cloud"
         documents = []
-        async for response, _ in source.search_by_query(
-            query="type in ('space', 'page', 'attachment') AND space.key ='SD'"
-        ):
-            documents.append(response)
-
-        if len(documents) != 0:
-            assert documents == EXPECTED_SEARCH_RESULT_FOR_FILTERING_CLOUD
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            async for response, _ in source.search_by_query(
+                query="type in ('space', 'page', 'attachment') AND space.key ='SD'"
+            ):
+                documents.append(response)
+        assert documents == EXPECTED_SEARCH_RESULT_FOR_FILTERING_CLOUD
 
 
 @pytest.mark.asyncio
 async def test_search_by_query_for_datacenter():
     async with create_confluence_source() as source:
+        async_response = AsyncMock()
         source.confluence_client.data_source_type = "confluence_data_center"
-        source.confluence_client._get_session().get = AsyncMock(
+        async_response.__aenter__ = AsyncMock(
             return_value=JSONAsyncMock(RESPONSE_SEARCH_RESULT)
         )
         documents = []
-        async for response, _ in source.search_by_query(
-            query="type in ('space', 'page', 'attachment') AND space.key ='SD'"
-        ):
-            documents.append(response)
-
-        if len(documents) != 0:
-            assert documents == EXPECTED_SEARCH_RESULT_FOR_FILTERING_DATA_CENTER
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            async for response, _ in source.search_by_query(
+                query="type in ('space', 'page', 'attachment') AND space.key ='SD'"
+            ):
+                documents.append(response)
+        assert documents == EXPECTED_SEARCH_RESULT_FOR_FILTERING_DATA_CENTER
 
 
 @pytest.mark.asyncio
 async def test_download_attachment():
     # Setup
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=JSONAsyncMock(StreamReaderAsyncMock())
-        )
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(return_value=StreamReaderAsyncMock())
 
         # Execute
-        with mock.patch(
-            "aiohttp.StreamReader.iter_chunked",
-            return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
-        ):
-            response = await source.download_attachment(
-                url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
-                attachment=EXPECTED_ATTACHMENT,
-                doit=True,
-            )
-            if response is not None:
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            with mock.patch(
+                "aiohttp.StreamReader.iter_chunked",
+                return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
+            ):
+                response = await source.download_attachment(
+                    url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
+                    attachment=EXPECTED_ATTACHMENT,
+                    doit=True,
+                )
                 assert response == EXPECTED_CONTENT
 
 
@@ -989,24 +975,23 @@ async def test_download_attachment():
 async def test_download_attachment_with_upper_extension():
     # Setup
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=JSONAsyncMock(StreamReaderAsyncMock())
-        )
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(return_value=StreamReaderAsyncMock())
 
         # Execute
-        with mock.patch(
-            "aiohttp.StreamReader.iter_chunked",
-            return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
-        ):
-            attachment = copy(EXPECTED_ATTACHMENT)
-            attachment["title"] = "batch.TXT"
+        with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+            with mock.patch(
+                "aiohttp.StreamReader.iter_chunked",
+                return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
+            ):
+                attachment = copy(EXPECTED_ATTACHMENT)
+                attachment["title"] = "batch.TXT"
 
-            response = await source.download_attachment(
-                url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
-                attachment=EXPECTED_ATTACHMENT,
-                doit=True,
-            )
-            if response is not None:
+                response = await source.download_attachment(
+                    url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
+                    attachment=EXPECTED_ATTACHMENT,
+                    doit=True,
+                )
                 assert response == EXPECTED_CONTENT
 
 
@@ -1067,32 +1052,28 @@ async def test_download_attachment_when_unsupported_filetype_used_then_fail_down
     lambda *_: True,
 )
 async def test_download_attachment_with_text_extraction_enabled_adds_body():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=RESPONSE_CONTENT,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=RESPONSE_CONTENT,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_confluence_source(use_text_extraction_service=True) as source:
-            source.confluence_client._get_session().get = AsyncMock(
-                return_value=JSONAsyncMock(StreamReaderAsyncMock())
-            )
+            async_response = AsyncMock()
+            async_response.__aenter__ = AsyncMock(return_value=StreamReaderAsyncMock())
 
             # Execute
-            with mock.patch(
-                "aiohttp.StreamReader.iter_chunked",
-                return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
-            ):
-                response = await source.download_attachment(
-                    url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
-                    attachment=EXPECTED_ATTACHMENT,
-                    doit=True,
-                )
-                if response is not None:
+            with mock.patch("aiohttp.ClientSession.get", return_value=async_response):
+                with mock.patch(
+                    "aiohttp.StreamReader.iter_chunked",
+                    return_value=AsyncIterator([bytes(RESPONSE_CONTENT, "utf-8")]),
+                ):
+                    response = await source.download_attachment(
+                        url="download/attachments/1113/demo.py?version=1&modificationDate=1672737890633&cacheVersion=1&api=v2",
+                        attachment=EXPECTED_ATTACHMENT,
+                        doit=True,
+                    )
                     assert response == EXPECTED_CONTENT_EXTRACTED
 
 
@@ -1262,12 +1243,8 @@ async def test_get_access_control_dls_enabled():
         source._dls_enabled = MagicMock(return_value=True)
         source.confluence_client.data_source_type = "confluence_cloud"
 
-        source.atlassian_access_control.fetch_all_users_for_confluence = AsyncIterator(
-            [mock_users]
-        )
-        source.atlassian_access_control.fetch_user_for_confluence = AsyncIterator(
-            [mock_user1]
-        )
+        source.atlassian_access_control.fetch_all_users = AsyncIterator([mock_users])
+        source.atlassian_access_control.fetch_user = AsyncIterator([mock_user1])
 
         user_documents = []
         async for user_doc in source.get_access_control():
@@ -1374,14 +1351,11 @@ async def test_get_access_control_dls_enabled_for_server():
 @pytest.mark.asyncio
 async def test_fetch_confluence_server_users():
     async with create_confluence_source() as source:
-        async_response = AsyncMock()
-        async_response.json.return_value = {"start": 0, "users": []}
-        with mock.patch(
-            "connectors.sources.confluence.ConfluenceClient.api_call",
-            return_value=async_response,
-        ):
-            async for user in source.confluence_client.fetch_confluence_server_users():
-                assert user is None
+        source.confluence_client.api_call = AsyncIterator(
+            [JSONAsyncMock({"start": 0, "users": []})]
+        )
+        async for user in source.confluence_client.fetch_confluence_server_users():
+            assert user is None
 
 
 @pytest.mark.asyncio
@@ -1563,24 +1537,13 @@ async def test_fetch_server_space_permission():
                 }
             },
         }
-        async_response = AsyncMock()
-        async_response.json.return_value = payload
-        with mock.patch(
-            "connectors.sources.confluence.ConfluenceClient.api_call",
-            return_value=async_response,
-        ):
-            expected_response = await source.fetch_server_space_permission(
-                space_key="key"
-            )
-            if expected_response is not None:
-                assert expected_response == {
-                    "permissions": {
-                        "VIEWSPACE": {
-                            "groups": ["confluence-users"],
-                            "users": ["admin"],
-                        }
-                    }
-                }
+        source.confluence_client.api_call = AsyncIterator([JSONAsyncMock(payload)])
+        expected_response = await source.fetch_server_space_permission(space_key="key")
+        assert expected_response == {
+            "permissions": {
+                "VIEWSPACE": {"groups": ["confluence-users"], "users": ["admin"]}
+            }
+        }
 
 
 @pytest.mark.asyncio
@@ -1634,10 +1597,11 @@ async def test_end_signal_is_added_to_queue_in_case_of_exception():
 @pytest.mark.asyncio
 async def test_fetch_page_blog_documents_with_labels():
     async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=JSONAsyncMock(RESPONSE_PAGE)
-        )
-        with patch.object(
+        async_response = AsyncMock()
+        async_response.__aenter__ = AsyncMock(return_value=JSONAsyncMock(RESPONSE_PAGE))
+        with mock.patch(
+            "aiohttp.ClientSession.get", return_value=async_response
+        ), patch.object(
             ConfluenceClient, "fetch_label", return_value=["label1", "label2"]
         ):
             source.confluence_client.index_labels = True
@@ -1662,14 +1626,3 @@ async def test_fetch_page_blog_documents_with_labels():
                     "ancestors": [{"title": "parent_title"}],
                     "labels": ["label1", "label2"],
                 }
-
-
-@pytest.mark.asyncio
-async def test_fetch_documents_with_html():
-    async with create_confluence_source() as source:
-        source.confluence_client._get_session().get = AsyncMock(
-            return_value=JSONAsyncMock(RESPONSE_PAGE_WITH_HTML)
-        )
-        source.confluence_client.index_labels = True
-        async for response, _, _, _, _ in source.fetch_documents(api_query=""):
-            assert response == EXPECTED_PAGE
diff --git a/tests/sources/test_directory.py b/tests/sources/test_directory.py
index e65f7d2b..858bddba 100644
--- a/tests/sources/test_directory.py
+++ b/tests/sources/test_directory.py
@@ -18,7 +18,7 @@ async def test_basics():
 async def test_get_docs(catch_stdout):
     async with create_source(DirectoryDataSource) as source:
         num = 0
-        async for doc, dl in source.get_docs():
+        async for (doc, dl) in source.get_docs():
             num += 1
             if doc["path"].endswith("__init__.py"):
                 continue
diff --git a/tests/sources/test_dropbox.py b/tests/sources/test_dropbox.py
index 9dc40061..b953475b 100644
--- a/tests/sources/test_dropbox.py
+++ b/tests/sources/test_dropbox.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Dropbox source class methods"""
-
 import json
 from contextlib import asynccontextmanager
 from unittest import mock
@@ -13,18 +12,13 @@ from unittest.mock import ANY, AsyncMock, MagicMock, Mock, patch
 import aiohttp
 import pytest
 from aiohttp import StreamReader
-from aiohttp.client_exceptions import (
-    ClientResponseError,
-    ServerDisconnectedError,
-    ServerTimeoutError,
-)
+from aiohttp.client_exceptions import ClientResponseError, ServerDisconnectedError
 from freezegun import freeze_time
 
 from connectors.filtering.validation import SyncRuleValidationResult
 from connectors.protocol import Filter
 from connectors.source import ConfigurableFieldValueError
 from connectors.sources.dropbox import (
-    AUTHENTICATED_ADMIN_URL,
     DropBoxAdvancedRulesValidator,
     DropboxClient,
     DropboxDataSource,
@@ -748,63 +742,6 @@ async def test_ping():
             await source.ping()
 
 
-@pytest.mark.asyncio
-@patch("connectors.sources.dropbox.RETRY_INTERVAL", 0)
-async def test_ping_when_server_timeout_error_raises():
-    async with create_source(DropboxDataSource) as source:
-        setup_dropbox(source)
-        source.dropbox_client._set_access_token = AsyncMock()
-        with patch.object(
-            aiohttp.ClientSession, "post", side_effect=ServerTimeoutError()
-        ):
-            with pytest.raises(Exception):
-                await source.ping()
-
-
-@pytest.mark.asyncio
-@patch("connectors.sources.dropbox.RETRY_INTERVAL", 0)
-async def test_ping_when_client_response_error_occurs():
-    async with create_source(DropboxDataSource) as source:
-        setup_dropbox(source)
-        source.dropbox_client._set_access_token = AsyncMock()
-        with patch.object(
-            aiohttp.ClientSession,
-            "post",
-            side_effect=[
-                ClientResponseError(
-                    request_info=aiohttp.RequestInfo(
-                        url=AUTHENTICATED_ADMIN_URL, method="POST", headers=None
-                    ),
-                    history=(),
-                ),
-                get_json_mock(MOCK_CURRENT_USER, 200),
-            ],
-        ):
-            await source.ping()
-
-
-@pytest.mark.asyncio
-@patch("connectors.sources.dropbox.RETRY_INTERVAL", 0)
-async def test_ping_when_client_response_error_occur_with_unexpected_url():
-    async with create_source(DropboxDataSource) as source:
-        setup_dropbox(source)
-        source.dropbox_client._set_access_token = AsyncMock()
-        with patch.object(
-            aiohttp.ClientSession,
-            "post",
-            side_effect=[
-                ClientResponseError(
-                    request_info=aiohttp.RequestInfo(
-                        url="fake_url", method="POST", headers=None
-                    ),
-                    history=(),
-                )
-            ],
-        ):
-            with pytest.raises(ClientResponseError):
-                await source.ping()
-
-
 @pytest.mark.asyncio
 @patch("connectors.sources.dropbox.RETRY_INTERVAL", 0)
 async def test_api_call_negative():
@@ -1047,15 +984,12 @@ async def test_get_content_when_is_downloadable_is_true(
 
 @pytest.mark.asyncio
 async def test_get_content_when_is_downloadable_is_true_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=RESPONSE_CONTENT,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=RESPONSE_CONTENT,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_dropbox_source(use_text_extraction_service=True) as source:
             with mock.patch(
@@ -1181,12 +1115,7 @@ async def test_search_files():
         ],
     ),
 )
-@patch.object(
-    DropboxClient,
-    "ping",
-    return_value=JSONAsyncMock(MOCK_AUTHENTICATED_ADMIN, 200),
-)
-async def test_get_docs(files_folders_patch, shared_files_patch, ping_patch):
+async def test_get_docs(files_folders_patch, shared_files_patch):
     async with create_source(DropboxDataSource) as source:
         setup_dropbox(source)
         expected_responses = [*EXPECTED_FILES_FOLDERS, *EXPECTED_SHARED_FILES]
@@ -1286,14 +1215,9 @@ async def test_advanced_rules_validation_with_invalid_repos(
         [JSONAsyncMock(MOCK_SEARCH_FILE_3, 200)],
     ),
 )
-@patch.object(
-    DropboxClient,
-    "ping",
-    return_value=JSONAsyncMock(MOCK_AUTHENTICATED_ADMIN, 200),
-)
 @pytest.mark.asyncio
 async def test_get_docs_with_advanced_rules(
-    received_files_patch, files_folders_patch, ping_patch, filtering
+    received_files_patch, files_folders_patch, filtering
 ):
     async with create_source(DropboxDataSource) as source:
         setup_dropbox(source)
@@ -1459,7 +1383,6 @@ async def test_get_docs_for_dls():
     async with create_source(DropboxDataSource) as source:
         setup_dropbox(source)
         source._dls_enabled = MagicMock(return_value=True)
-        source.set_user_info = AsyncMock()
         source.add_document_to_list = Mock(
             return_value=AsyncIterator([(FORMATTED_DOCUMENT, None)])
         )
@@ -1478,7 +1401,6 @@ async def test_remote_validation_with_dls():
     async with create_source(DropboxDataSource) as source:
         setup_dropbox(source)
         source._dls_enabled = MagicMock(return_value=True)
-        source.set_user_info = AsyncMock()
         source.dropbox_client.path = "/abc"
         source.get_account_details = Mock(
             return_value=create_fake_coroutine(["dbid:123", "dbmid:123-456"])
@@ -1510,7 +1432,7 @@ async def test_add_document_to_list():
         )
         documents = []
         async for item, _ in source.add_document_to_list(
-            func=source._fetch_files_folders, account_id=1
+            func=source._fetch_files_folders, account_id=1, folder_id=2
         ):
             documents.append(item)
         assert documents == EXPECTED_DOCUMENT_TUPLE
@@ -1535,7 +1457,7 @@ async def test_add_document_to_list_with_exclude_inherited_users_and_groups():
         )
         documents = []
         async for item, _ in source.add_document_to_list(
-            func=source._fetch_files_folders, account_id=1
+            func=source._fetch_files_folders, account_id=1, folder_id=2
         ):
             documents.append(item)
         assert documents == EXPECTED_DOCUMENT_TUPLE
diff --git a/tests/sources/test_generic_database.py b/tests/sources/test_generic_database.py
index 6103f9bc..788771eb 100644
--- a/tests/sources/test_generic_database.py
+++ b/tests/sources/test_generic_database.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Generic Database source class methods"""
-
 from functools import partial
 
 import pytest
diff --git a/tests/sources/test_github.py b/tests/sources/test_github.py
index 881bbd46..a1b4c2b9 100644
--- a/tests/sources/test_github.py
+++ b/tests/sources/test_github.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Github source class methods"""
-
 from contextlib import asynccontextmanager
 from copy import deepcopy
 from http import HTTPStatus
@@ -578,15 +577,6 @@ MOCK_TREE = {
         }
     ],
 }
-MOCK_FILE = [
-    {
-        "path": "source/source.md",
-        "type": "file",
-        "sha": "36888b54c2a2f75tfbf2b7e7e95f68d0g8911ccb",
-        "size": 30,
-        "url": "https://api.github.com/repos/demo_user/demo_repo/git/blobs/36888b54c2a2f75tfbf2b7e7e95f68d0g8911ccb",
-    }
-]
 MOCK_COMMITS = [
     {
         "sha": "6dcb0c46c273d316e5edc3a6deff2d1bd02",
@@ -704,28 +694,6 @@ EXPECTED_ACCESS_CONTROL_GITHUB_APP = [
         },
     },
 ]
-EXPECTED_FILE = (
-    {
-        "name": "source.md",
-        "size": 30,
-        "type": "file",
-        "path": "source/source.md",
-        "extension": ".md",
-        "_timestamp": "2023-04-17T12:55:01Z",
-        "_id": "demo_repo/source/source.md",
-    },
-    {
-        "path": "source/source.md",
-        "type": "file",
-        "sha": "36888b54c2a2f75tfbf2b7e7e95f68d0g8911ccb",
-        "size": 30,
-        "url": "https://api.github.com/repos/demo_user/demo_repo/git/blobs/36888b54c2a2f75tfbf2b7e7e95f68d0g8911ccb",
-        "_timestamp": "2023-04-17T12:55:01Z",
-        "repo_name": "demo_repo",
-        "name": "source.md",
-        "extension": ".md",
-    },
-)
 MOCK_CONTRIBUTOR = {
     "repository": {
         "collaborators": {
@@ -1243,15 +1211,12 @@ async def test_get_content_with_md_file():
 
 @pytest.mark.asyncio
 async def test_get_content_with_md_file_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="Test File !!! U+1F602",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="Test File !!! U+1F602",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         expected_response = {
             "_id": "demo_repo/source.md",
@@ -1542,20 +1507,6 @@ async def test_fetch_pull_requests_with_deleted_users():
                 assert pull == expected_pull_response_deleted_user
 
 
-@pytest.mark.asyncio
-async def test_fetch_path():
-    async with create_github_source() as source:
-        with patch.object(
-            source.github_client,
-            "get_github_item",
-            side_effect=[MOCK_FILE, MOCK_COMMITS],
-        ):
-            async for document in source._fetch_files_by_path(
-                "demo_repo", "/demo_path"
-            ):
-                assert EXPECTED_FILE == document
-
-
 @pytest.mark.asyncio
 async def test_fetch_files():
     expected_response = (
@@ -1719,35 +1670,6 @@ async def test_get_docs_with_access_control_should_add_acl_for_non_public_repo()
                 SyncRuleValidationResult.ADVANCED_RULES
             ),
         ),
-        (
-            # valid: valid queries added path
-            [
-                {
-                    "repository": "repo_name",
-                    "filter": {
-                        "issue": "is:open",
-                        "pr": "is:open",
-                        "branch": "main",
-                        "path": "file_name",
-                    },
-                }
-            ],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: optional path key
-            [
-                {
-                    "repository": "repo_name",
-                    "filter": {"path": "/file_path"},
-                }
-            ],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
         (
             # valid: optional pr key
             [
@@ -1769,20 +1691,6 @@ async def test_get_docs_with_access_control_should_add_acl_for_non_public_repo()
                 validation_message=ANY,
             ),
         ),
-        (
-            # invalid: invalid key path
-            [
-                {
-                    "repository": "repo_name",
-                    "filter": {"paths": "/file_path"},
-                }
-            ],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
         (
             # invalid: invalid key
             [
diff --git a/tests/sources/test_google_cloud_storage.py b/tests/sources/test_google_cloud_storage.py
index ad8e9eab..6c98f4ea 100644
--- a/tests/sources/test_google_cloud_storage.py
+++ b/tests/sources/test_google_cloud_storage.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Tests the Google Cloud Storage source class methods."""
-
+"""Tests the Google Cloud Storage source class methods.
+"""
 import asyncio
 from contextlib import asynccontextmanager
 from unittest import mock
@@ -484,15 +484,12 @@ async def test_get_content(blob_document, expected_blob_document):
 async def test_get_content_with_text_extraction_enabled_adds_body():
     """Test the module responsible for fetching the content of the file if it is extractable."""
 
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="file content",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="file content",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_gcs_source(use_text_extraction_service=True) as source:
             blob_document = {
diff --git a/tests/sources/test_google_drive.py b/tests/sources/test_google_drive.py
index f44b2fbc..983e25f3 100644
--- a/tests/sources/test_google_drive.py
+++ b/tests/sources/test_google_drive.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Tests the Google Drive source class methods."""
-
+"""Tests the Google Drive source class methods.
+"""
 import asyncio
 import re
 from contextlib import asynccontextmanager
@@ -17,17 +17,8 @@ from aiogoogle.auth.managers import ServiceAccountManager
 from aiogoogle.models import Request, Response
 
 from connectors.access_control import DLS_QUERY
-from connectors.source import (
-    CURSOR_SYNC_TIMESTAMP,
-    ConfigurableFieldValueError,
-    DataSourceConfiguration,
-)
-from connectors.sources.google import GoogleServiceAccountClient
-from connectors.sources.google_drive import (
-    RETRIES,
-    GoogleDriveDataSource,
-    SyncCursorEmpty,
-)
+from connectors.source import ConfigurableFieldValueError, DataSourceConfiguration
+from connectors.sources.google_drive import RETRIES, GoogleDriveDataSource
 from tests.commons import AsyncIterator
 from tests.sources.support import create_source
 
@@ -42,7 +33,7 @@ async def create_gdrive_source(**kwargs):
         GoogleDriveDataSource,
         service_account_credentials=SERVICE_ACCOUNT_CREDENTIALS,
         use_document_level_security=False,
-        **kwargs,
+        **kwargs
     ) as source:
         yield source
 
@@ -164,28 +155,23 @@ async def test_ping_for_failed_connection():
                             "parents": ["0APU6durKUAiqUk9PVA"],
                             "size": "28",
                             "modifiedTime": "2023-06-28T07:46:28.000Z",
-                            "trashed": False,
                         }
                     ],
                 }
             ],
             [
-                (
-                    {
-                        "_id": "id1",
-                        "created_at": None,
-                        "last_updated": "2023-06-28T07:46:28.000Z",
-                        "name": "test.txt",
-                        "size": "28",
-                        "_timestamp": "2023-06-28T07:46:28.000Z",
-                        "mime_type": "text/plain",
-                        "file_extension": None,
-                        "url": None,
-                        "type": "file",
-                        "trashed": False,
-                    },
-                    None,
-                )
+                {
+                    "_id": "id1",
+                    "created_at": None,
+                    "last_updated": "2023-06-28T07:46:28.000Z",
+                    "name": "test.txt",
+                    "size": "28",
+                    "_timestamp": "2023-06-28T07:46:28.000Z",
+                    "mime_type": "text/plain",
+                    "file_extension": None,
+                    "url": None,
+                    "type": "file",
+                }
             ],
         )
     ],
@@ -220,24 +206,19 @@ async def test_prepare_files(files, expected_files):
                 "parents": ["0APU6durKUAiqUk9PVA"],
                 "size": "28",
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": "28",
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+            },
         ),
         (
             {
@@ -248,24 +229,19 @@ async def test_prepare_files(files, expected_files):
                 "parents": ["0APU6durKUAiqUk9PVA"],
                 "size": None,
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": 0,
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": 0,
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+            },
         ),
         (
             {
@@ -276,7 +252,6 @@ async def test_prepare_files(files, expected_files):
                 "parents": ["0APU6durKUAiqUk9PVA"],
                 "size": None,
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
                 "owners": [
                     {
                         "displayName": "Test User",
@@ -286,25 +261,21 @@ async def test_prepare_files(files, expected_files):
                     }
                 ],
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": 0,
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "author": "Test User",
-                    "created_by": "Test User",
-                    "created_by_email": "user@test.com",
-                    "trashed": False,
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": 0,
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "author": "Test User",
+                "created_by": "Test User",
+                "created_by_email": "user@test.com",
+            },
         ),
         (
             {
@@ -315,7 +286,6 @@ async def test_prepare_files(files, expected_files):
                 "parents": ["folderId4"],
                 "size": None,
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
                 "owners": [
                     {
                         "displayName": "Test User",
@@ -331,60 +301,25 @@ async def test_prepare_files(files, expected_files):
                     "photoLink": "dummy_link",
                 },
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": 0,
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "author": "Test User",
-                    "created_by": "Test User",
-                    "created_by_email": "user@test.com",
-                    "updated_by": "Test User 2",
-                    "updated_by_email": "user2@test.com",
-                    "updated_by_photo_url": "dummy_link",
-                    "path": "Drive3/Folder4/test.txt",
-                    "trashed": False,
-                },
-                None,
-            ),
-        ),
-        (
             {
-                "driveId": "sd1",
-                "kind": "drive#file",
-                "mimeType": "text/plain",
-                "id": "id1",
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
                 "name": "test.txt",
-                "parents": ["0APU6durKUAiqUk9PVA"],
-                "size": "28",
-                "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": True,
-                "trashedTime": "2023-06-28T12:46:28.000Z",
+                "size": 0,
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "author": "Test User",
+                "created_by": "Test User",
+                "created_by_email": "user@test.com",
+                "updated_by": "Test User 2",
+                "updated_by_email": "user2@test.com",
+                "updated_by_photo_url": "dummy_link",
+                "path": "Drive3/Folder4/test.txt",
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": True,
-                    "shared_drive": "SharedDrive",
-                },
-                "2023-06-28T12:46:28.000Z",
-            ),
         ),
     ],
 )
@@ -398,18 +333,12 @@ async def test_prepare_file(file, expected_file):
                 "name": "Folder4",
                 "parents": ["driveId3"],
                 "path": "Drive3/Folder4",
-            },
-            "sd1": {
-                "name": "SharedDrive",
-                "parents": [],
-                "path": "SharedDrive",
-            },
+            }
         }
 
-        actual_output = await source.prepare_file(
+        assert expected_file == await source.prepare_file(
             client=source.google_drive_client(), file=file, paths=dummy_paths
         )
-        assert actual_output == expected_file
 
 
 @pytest.mark.asyncio
@@ -646,7 +575,6 @@ async def test_get_docs_with_domain_wide_delegation():
                     "parents": ["0APU6durKUAiqUk9PVA"],
                     "size": "28",
                     "modifiedTime": "2023-06-28T07:46:28.000Z",
-                    "trashed": False,
                 }
             ],
         }
@@ -661,7 +589,6 @@ async def test_get_docs_with_domain_wide_delegation():
             "file_extension": None,
             "url": None,
             "type": "file",
-            "trashed": False,
         }
 
         mock_gdrive_client = mock.MagicMock()
@@ -701,7 +628,6 @@ async def test_get_docs():
                     "parents": ["0APU6durKUAiqUk9PVA"],
                     "size": "28",
                     "modifiedTime": "2023-06-28T07:46:28.000Z",
-                    "trashed": False,
                 }
             ],
         }
@@ -716,7 +642,6 @@ async def test_get_docs():
             "file_extension": None,
             "url": None,
             "type": "file",
-            "trashed": False,
         }
         dummy_url = "https://www.googleapis.com/drive/v3/files"
 
@@ -939,15 +864,12 @@ async def test_get_google_workspace_content():
 )
 async def test_get_google_workspace_content_with_text_extraction_enabled_adds_body():
     """Test the module responsible for fetching the content of the Google Suite document."""
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="I love unit tests",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="I love unit tests",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_gdrive_source(use_text_extraction_service=True) as source:
             file_document = {
@@ -1064,15 +986,12 @@ async def test_get_generic_file_content():
 )
 async def test_get_generic_file_content_with_text_extraction_enabled_adds_body():
     """Test the module responsible for fetching the content of the file if it is extractable."""
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="I love unit tests generic file",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="I love unit tests generic file",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_gdrive_source(use_text_extraction_service=True) as source:
             file_document = {
@@ -1286,7 +1205,6 @@ async def test_api_call_list_drives_retries(
                 "size": "28",
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
                 "driveId": "drive1",
-                "trashed": False,
             },
             [
                 {"type": "user", "emailAddress": "user@xd.com"},
@@ -1294,29 +1212,25 @@ async def test_api_call_list_drives_retries(
                 {"type": "domain", "domain": "xd.com"},
                 {"type": "anyone"},
             ],
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "shared_drive": "drive1",
-                    "trashed": False,
-                    "_allow_access_control": [
-                        "user:user@xd.com",
-                        "group:group@xd.com",
-                        "domain:xd.com",
-                        "anyone",
-                    ],
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": "28",
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "shared_drive": "drive1",
+                "_allow_access_control": [
+                    "user:user@xd.com",
+                    "group:group@xd.com",
+                    "domain:xd.com",
+                    "anyone",
+                ],
+            },
         ),
         (
             {
@@ -1328,7 +1242,6 @@ async def test_api_call_list_drives_retries(
                 "size": None,
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
                 "driveId": "drive1",
-                "trashed": False,
             },
             [
                 {"type": "user", "emailAddress": "user2@xd.com"},
@@ -1336,29 +1249,25 @@ async def test_api_call_list_drives_retries(
                 {"type": "domain", "domain": "xd.com"},
                 {"type": "anyone"},
             ],
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": 0,
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "shared_drive": "drive1",
-                    "trashed": False,
-                    "_allow_access_control": [
-                        "user:user2@xd.com",
-                        "group:group2@xd.com",
-                        "domain:xd.com",
-                        "anyone",
-                    ],
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": 0,
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "shared_drive": "drive1",
+                "_allow_access_control": [
+                    "user:user2@xd.com",
+                    "group:group2@xd.com",
+                    "domain:xd.com",
+                    "anyone",
+                ],
+            },
         ),
     ],
 )
@@ -1408,7 +1317,6 @@ async def test_prepare_file_on_shared_drive_with_dls_enabled(
                 "parents": ["0APU6durKUAiqUk9PVA"],
                 "size": "28",
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
                 "permissions": [
                     {"type": "user", "emailAddress": "user@xd.com"},
                     {"type": "group", "emailAddress": "group@xd.com"},
@@ -1416,28 +1324,24 @@ async def test_prepare_file_on_shared_drive_with_dls_enabled(
                     {"type": "anyone"},
                 ],
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                    "_allow_access_control": [
-                        "user:user@xd.com",
-                        "group:group@xd.com",
-                        "domain:xd.com",
-                        "anyone",
-                    ],
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": "28",
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "_allow_access_control": [
+                    "user:user@xd.com",
+                    "group:group@xd.com",
+                    "domain:xd.com",
+                    "anyone",
+                ],
+            },
         ),
         (
             {
@@ -1448,7 +1352,6 @@ async def test_prepare_file_on_shared_drive_with_dls_enabled(
                 "parents": ["0APU6durKUAiqUk9PVA"],
                 "size": None,
                 "modifiedTime": "2023-06-28T07:46:28.000Z",
-                "trashed": False,
                 "permissions": [
                     {"type": "user", "emailAddress": "user2@xd.com"},
                     {"type": "group", "emailAddress": "group2@xd.com"},
@@ -1456,28 +1359,24 @@ async def test_prepare_file_on_shared_drive_with_dls_enabled(
                     {"type": "anyone"},
                 ],
             },
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2023-06-28T07:46:28.000Z",
-                    "name": "test.txt",
-                    "size": 0,
-                    "_timestamp": "2023-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                    "_allow_access_control": [
-                        "user:user2@xd.com",
-                        "group:group2@xd.com",
-                        "domain:xd.com",
-                        "anyone",
-                    ],
-                },
-                None,
-            ),
+            {
+                "_id": "id1",
+                "created_at": None,
+                "last_updated": "2023-06-28T07:46:28.000Z",
+                "name": "test.txt",
+                "size": 0,
+                "_timestamp": "2023-06-28T07:46:28.000Z",
+                "mime_type": "text/plain",
+                "file_extension": None,
+                "url": None,
+                "type": "file",
+                "_allow_access_control": [
+                    "user:user2@xd.com",
+                    "group:group2@xd.com",
+                    "domain:xd.com",
+                    "anyone",
+                ],
+            },
         ),
     ],
 )
@@ -1727,502 +1626,3 @@ async def test_get_google_workspace_admin_email_with_dls_delegation():
         source._dls_enabled = mock.MagicMock(return_value=True)
         email = source._get_google_workspace_admin_email()
         assert email == test_email
-
-
-@pytest.mark.asyncio
-@pytest.mark.parametrize("sync_cursor", [None, {}])
-async def test_get_docs_incrementally_with_empty_sync_cursor(sync_cursor):
-    async with create_gdrive_source() as source:
-        with pytest.raises(SyncCursorEmpty):
-            await anext(source.get_docs_incrementally(sync_cursor=sync_cursor))
-
-
-@pytest.mark.asyncio
-async def test_get_docs_incrementally():
-    """Tests the module responsible to fetch and yield files documents from Google Drive."""
-
-    async with create_gdrive_source() as source:
-        sync_cursor = {CURSOR_SYNC_TIMESTAMP: "2023-06-28T05:46:28Z"}
-        expected_response = {
-            "kind": "drive#fileList",
-            "files": [
-                # This is the file that was deleted from google drive
-                # Hence this file will be deleted from elasticsearch when incremental sync is run
-                {
-                    "kind": "drive#file",
-                    "mimeType": "text/plain",
-                    "id": "id1",
-                    "name": "test.txt",
-                    "parents": ["0APU6durKUAiqUk9PVA"],
-                    "size": "28",
-                    "modifiedTime": "2024-06-28T03:46:28.000Z",
-                    "trashed": True,
-                },
-                # This file was added to google drive after full sync was run
-                # Hence this file will be added to elasticearch when incremental sync is run
-                {
-                    "kind": "drive#file",
-                    "mimeType": "text/plain",
-                    "id": "id2",
-                    "name": "test1.txt",
-                    "parents": ["0APU6durKUAiqUk9PVA"],
-                    "size": "50",
-                    "modifiedTime": "2024-06-28T07:46:28.000Z",
-                    "trashed": False,
-                },
-            ],
-        }
-        expected_file_document = [
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2024-06-28T03:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2024-06-28T03:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": True,
-                },
-                "download_func",
-                "delete",
-            ),
-            (
-                {
-                    "_id": "id2",
-                    "created_at": None,
-                    "last_updated": "2024-06-28T07:46:28.000Z",
-                    "name": "test1.txt",
-                    "size": "50",
-                    "_timestamp": "2024-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                },
-                "download_func",
-                "index",
-            ),
-        ]
-
-        dummy_url = "https://www.googleapis.com/drive/v3/files"
-
-        expected_response_object = Response(
-            status_code=200,
-            url=dummy_url,
-            json=expected_response,
-            req=Request(method="GET", url=dummy_url),
-        )
-        file_document_list = []
-        with mock.patch.object(
-            Aiogoogle, "as_service_account", return_value=expected_response_object
-        ):
-            with mock.patch.object(ServiceAccountManager, "refresh"):
-                async for file_document, _, operation in source.get_docs_incrementally(
-                    sync_cursor=sync_cursor
-                ):
-                    file_document_list.append(
-                        (file_document, "download_func", operation)
-                    )
-                assert file_document_list == expected_file_document
-
-
-@pytest.mark.asyncio
-async def test_get_docs_incrementally_with_domain_wide_delegation():
-    """Tests the method responsible to yield files from Google Drive."""
-
-    async with create_gdrive_source(
-        google_workspace_admin_email_for_data_sync="admin@email.com"
-    ) as source:
-        sync_cursor = {CURSOR_SYNC_TIMESTAMP: "2023-06-28T05:46:28Z"}
-        source._get_google_workspace_admin_email = mock.MagicMock(
-            return_value="admin@email.com"
-        )
-        source.google_admin_directory_client.users = mock.MagicMock(
-            return_value=AsyncIterator([{"primaryEmail": "some@email.com"}])
-        )
-
-        source._domain_wide_delegation_sync_enabled = mock.MagicMock(return_value=True)
-        expected_response = {
-            "kind": "drive#fileList",
-            "files": [
-                # This is the file that was deleted from google drive
-                # Hence this file will be deleted from elasticsearch when incremental sync is run
-                {
-                    "kind": "drive#file",
-                    "mimeType": "text/plain",
-                    "id": "id1",
-                    "name": "test.txt",
-                    "parents": ["0APU6durKUAiqUk9PVA"],
-                    "size": "28",
-                    "modifiedTime": "2024-06-28T03:46:28.000Z",
-                    "trashed": True,
-                },
-                # This file was added to google drive after full sync was run
-                # Hence this file will be added to elasticearch when incremental sync is run
-                {
-                    "kind": "drive#file",
-                    "mimeType": "text/plain",
-                    "id": "id2",
-                    "name": "test1.txt",
-                    "parents": ["0APU6durKUAiqUk9PVA"],
-                    "size": "50",
-                    "modifiedTime": "2024-06-28T07:46:28.000Z",
-                    "trashed": False,
-                },
-            ],
-        }
-        expected_file_document = [
-            (
-                {
-                    "_id": "id1",
-                    "created_at": None,
-                    "last_updated": "2024-06-28T03:46:28.000Z",
-                    "name": "test.txt",
-                    "size": "28",
-                    "_timestamp": "2024-06-28T03:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": True,
-                },
-                "download_func",
-                "delete",
-            ),
-            (
-                {
-                    "_id": "id2",
-                    "created_at": None,
-                    "last_updated": "2024-06-28T07:46:28.000Z",
-                    "name": "test1.txt",
-                    "size": "50",
-                    "_timestamp": "2024-06-28T07:46:28.000Z",
-                    "mime_type": "text/plain",
-                    "file_extension": None,
-                    "url": None,
-                    "type": "file",
-                    "trashed": False,
-                },
-                "download_func",
-                "index",
-            ),
-        ]
-        file_document_list = []
-        mock_gdrive_client = mock.MagicMock()
-        mock_gdrive_client.list_files_from_my_drive = mock.MagicMock(
-            return_value=AsyncIterator([expected_response])
-        )
-
-        mock_empty_response_future = asyncio.Future()
-        mock_empty_response_future.set_result({})
-
-        mock_gdrive_client.get_all_folders = mock.MagicMock(
-            return_value=mock_empty_response_future
-        )
-        mock_gdrive_client.get_all_drives = mock.MagicMock(
-            return_value=mock_empty_response_future
-        )
-
-        source.google_drive_client = mock.MagicMock(return_value=mock_gdrive_client)
-
-        async for file_document, _, operation in source.get_docs_incrementally(
-            sync_cursor=sync_cursor
-        ):
-            file_document_list.append((file_document, "download_func", operation))
-        assert file_document_list == expected_file_document
-
-
-@pytest.mark.asyncio
-async def test_users():
-    async with create_gdrive_source(
-        google_workspace_admin_email_for_data_sync="admin@email.com"
-    ) as source:
-        source._get_google_workspace_admin_email = mock.MagicMock(
-            return_value="admin@email.com"
-        )
-        response_users = {
-            "kind": "admin#directory#users",
-            "users": [
-                {
-                    "id": "123456",
-                    "primaryEmail": "example.name@domain.com",
-                    "name": {
-                        "givenName": "example",
-                        "familyName": "name",
-                        "fullName": "Example Name",
-                    },
-                }
-            ],
-        }
-        expected_users = {
-            "id": "123456",
-            "primaryEmail": "example.name@domain.com",
-            "name": {
-                "givenName": "example",
-                "familyName": "name",
-                "fullName": "Example Name",
-            },
-        }
-        source.google_admin_directory_client.list_users = AsyncIterator(
-            [response_users]
-        )
-        async for user in source.google_admin_directory_client.users():
-            assert user == expected_users
-
-
-@pytest.mark.asyncio
-@pytest.mark.parametrize(
-    "fetch_permissions, last_sync_time, api_response, expected_response",
-    [
-        (
-            False,
-            None,
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id1",
-                        "name": "file1.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                    },
-                ],
-            },
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id1",
-                        "name": "file1.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                    },
-                ],
-            },
-        ),
-        (
-            True,
-            None,
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id2",
-                        "name": "file2.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                        "permissions": [
-                            {"type": "user", "emailAddress": "user2@xd.com"},
-                            {"type": "group", "emailAddress": "group2@xd.com"},
-                            {"type": "domain", "domain": "xd.com"},
-                            {"type": "anyone"},
-                        ],
-                    },
-                ],
-            },
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id2",
-                        "name": "file2.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                        "permissions": [
-                            {"type": "user", "emailAddress": "user2@xd.com"},
-                            {"type": "group", "emailAddress": "group2@xd.com"},
-                            {"type": "domain", "domain": "xd.com"},
-                            {"type": "anyone"},
-                        ],
-                    },
-                ],
-            },
-        ),
-        (
-            False,
-            "2024-01-01T12:00:00.000Z",
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id3",
-                        "name": "file3.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                    },
-                ],
-            },
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id3",
-                        "name": "file3.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                    },
-                ],
-            },
-        ),
-        (
-            True,
-            "2024-01-01T12:00:00.000Z",
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id4",
-                        "name": "file4.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                        "permissions": [
-                            {"type": "user", "emailAddress": "user2@xd.com"},
-                            {"type": "group", "emailAddress": "group2@xd.com"},
-                            {"type": "domain", "domain": "xd.com"},
-                            {"type": "anyone"},
-                        ],
-                    },
-                ],
-            },
-            {
-                "kind": "drive#fileList",
-                "files": [
-                    {
-                        "kind": "drive#file",
-                        "mimeType": "text/plain",
-                        "id": "id4",
-                        "name": "file4.txt",
-                        "parents": ["0APU6durKUAiqUk9PVA"],
-                        "size": "28",
-                        "modifiedTime": "2024-06-28T03:46:28.000Z",
-                        "createdTime": "2024-06-28T03:46:28.000Z",
-                        "trashed": False,
-                        "owners": [
-                            {
-                                "displayName": "User 2",
-                                "kind": "drive#user",
-                                "emailAddress": "user2@xd.com",
-                                "photoLink": "dummy_link",
-                            }
-                        ],
-                        "permissions": [
-                            {"type": "user", "emailAddress": "user2@xd.com"},
-                            {"type": "group", "emailAddress": "group2@xd.com"},
-                            {"type": "domain", "domain": "xd.com"},
-                            {"type": "anyone"},
-                        ],
-                    },
-                ],
-            },
-        ),
-    ],
-)
-async def test_list_files_from_my_drive(
-    fetch_permissions, last_sync_time, api_response, expected_response
-):
-    async with create_gdrive_source() as source:
-        with mock.patch.object(
-            GoogleServiceAccountClient,
-            "api_call_paged",
-            return_value=AsyncIterator([api_response]),
-        ):
-            async for file in source.google_drive_client().list_files_from_my_drive(
-                fetch_permissions, last_sync_time
-            ):
-                assert file == expected_response
diff --git a/tests/sources/test_graphql.py b/tests/sources/test_graphql.py
index 75e61210..1106a282 100644
--- a/tests/sources/test_graphql.py
+++ b/tests/sources/test_graphql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the GraphQL source class methods"""
-
 from contextlib import asynccontextmanager
 from unittest.mock import AsyncMock, Mock, patch
 
diff --git a/tests/sources/test_jira.py b/tests/sources/test_jira.py
index 66121d11..519d3e72 100644
--- a/tests/sources/test_jira.py
+++ b/tests/sources/test_jira.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Jira database source class methods"""
-
 import ssl
 from contextlib import asynccontextmanager
 from copy import copy
@@ -875,15 +874,12 @@ async def test_get_content():
 @pytest.mark.asyncio
 async def test_get_content_with_text_extraction_enabled_adds_body():
     """Tests the get content method."""
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=RESPONSE_CONTENT,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=RESPONSE_CONTENT,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_jira_source(use_text_extraction_service=True) as source:
             with mock.patch(
diff --git a/tests/sources/test_microsoft_teams.py b/tests/sources/test_microsoft_teams.py
index b9f7a862..afa43ea2 100644
--- a/tests/sources/test_microsoft_teams.py
+++ b/tests/sources/test_microsoft_teams.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import base64
 from io import BytesIO
 from unittest.mock import AsyncMock, MagicMock, Mock, patch
diff --git a/tests/sources/test_mongo.py b/tests/sources/test_mongo.py
index 12795fb1..d58433aa 100644
--- a/tests/sources/test_mongo.py
+++ b/tests/sources/test_mongo.py
@@ -164,7 +164,7 @@ def build_resp():
 async def test_get_docs(*args):
     async with create_mongo_source() as source:
         num = 0
-        async for doc, _ in source.get_docs():
+        async for (doc, _) in source.get_docs():
             assert doc["id"] in ("one", "two")
             num += 1
 
@@ -323,15 +323,12 @@ async def test_validate_config_when_collection_name_invalid_then_raises_exceptio
     configured_database_name = "hello"
     configured_collection_name = "third"
 
-    with (
-        mock.patch(
-            "motor.motor_asyncio.AsyncIOMotorClient.list_database_names",
-            return_value=future_with_result(server_database_names),
-        ),
-        mock.patch(
-            "motor.motor_asyncio.AsyncIOMotorDatabase.list_collection_names",
-            return_value=future_with_result(server_collection_names),
-        ),
+    with mock.patch(
+        "motor.motor_asyncio.AsyncIOMotorClient.list_database_names",
+        return_value=future_with_result(server_database_names),
+    ), mock.patch(
+        "motor.motor_asyncio.AsyncIOMotorDatabase.list_collection_names",
+        return_value=future_with_result(server_collection_names),
     ):
         async with create_mongo_source(
             database=configured_database_name,
@@ -463,15 +460,12 @@ async def test_ssl_successful_connection(
     async with create_mongo_source(
         ssl_enabled=True, ssl_ca=certificate_value, tls_insecure=tls_insecure
     ) as source:
-        with (
-            mock.patch(
-                "motor.motor_asyncio.AsyncIOMotorClient.list_database_names",
-                return_value=future_with_result(["db"]),
-            ),
-            mock.patch(
-                "motor.motor_asyncio.AsyncIOMotorDatabase.list_collection_names",
-                return_value=future_with_result(["col"]),
-            ),
+        with mock.patch(
+            "motor.motor_asyncio.AsyncIOMotorClient.list_database_names",
+            return_value=future_with_result(["db"]),
+        ), mock.patch(
+            "motor.motor_asyncio.AsyncIOMotorDatabase.list_collection_names",
+            return_value=future_with_result(["col"]),
         ):
             await source.validate_config()
 
diff --git a/tests/sources/test_mssql.py b/tests/sources/test_mssql.py
index ae5b2deb..7800187d 100644
--- a/tests/sources/test_mssql.py
+++ b/tests/sources/test_mssql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the microsoft sql database source class methods"""
-
 import os
 from unittest.mock import ANY, AsyncMock, Mock, patch
 
@@ -24,10 +23,6 @@ from tests.sources.test_generic_database import ConnectionSync
 
 ADVANCED_SNIPPET = "advanced_snippet"
 
-ID_ONE = "id1"
-ID_TWO = "id2"
-ID_THREE = "id3"
-
 
 class MockEngine:
     """This Class create mock engine for mssql dialect"""
@@ -83,7 +78,7 @@ async def test_fetch_documents_from_query_negative():
             side_effect=ProgrammingError(statement=None, params=None, orig=None),
         ):
             async for _ in source.fetch_documents_from_query(
-                ["table"], "select * from table", ["column"]
+                ["table"], "select * from table"
             ):
                 pass
 
@@ -224,148 +219,6 @@ async def test_advanced_rules_validation(advanced_rules, expected_validation_res
             assert validation_result == expected_validation_result
 
 
-@pytest.mark.parametrize(
-    "advanced_rules, id_in_source, expected_validation_result",
-    [
-        (
-            # valid: empty array should be valid
-            [],
-            [ID_ONE],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: empty object should also be valid -> default value in Kibana
-            {},
-            [ID_ONE],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: valid queries
-            [
-                {
-                    "tables": ["emp_table"],
-                    "query": "select * from emp_table",
-                    "id_columns": [ID_ONE],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # invalid: tables not present in database
-            [
-                {
-                    "tables": ["table_name"],
-                    "query": "select * from table_name",
-                    "id_columns": ["column1"],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: tables key missing
-            [{"query": "select * from table_name"}],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: invalid key
-            [
-                {
-                    "tables": "table_name",
-                    "query": "select * from table_name",
-                    "id_columns": [ID_ONE],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: tables can be empty
-            [
-                {
-                    "tables": [],
-                    "query": "select * from table_name",
-                    "id_columns": [ID_ONE],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: id_columns empty
-            [
-                {
-                    "tables": ["table_name"],
-                    "query": "select * from table_name",
-                    "id_columns": [],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: invalid id_columns
-            [
-                {
-                    "tables": ["table_name"],
-                    "query": "select * from table_name",
-                    "id_columns": ["Invalid_column"],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-    ],
-)
-@pytest.mark.asyncio
-async def test_advanced_rules_validation_when_id_in_source_available(
-    advanced_rules, id_in_source, expected_validation_result
-):
-    async with create_source(
-        MSSQLDataSource, database="xe", tables="*", schema="dbo"
-    ) as source:
-        with patch.object(
-            Engine, "connect", return_value=ConnectionSync(MSSQLQueries())
-        ):
-            validation_result = await MSSQLAdvancedRulesValidator(source).validate(
-                advanced_rules
-            )
-
-            assert validation_result == expected_validation_result
-
-
 @pytest.mark.parametrize(
     "filtering, expected_response",
     [
diff --git a/tests/sources/test_mysql.py b/tests/sources/test_mysql.py
index 08668ae2..59d7f467 100644
--- a/tests/sources/test_mysql.py
+++ b/tests/sources/test_mysql.py
@@ -39,10 +39,6 @@ TABLE_ONE = "table1"
 TABLE_TWO = "table2"
 TABLE_THREE = "table3"
 
-ID_ONE = "id1"
-ID_TWO = "id2"
-ID_THREE = "id3"
-
 DOC_ONE = immutable_doc(id=1, text="some text 1")
 DOC_TWO = immutable_doc(id=2, text="some text 2")
 DOC_THREE = immutable_doc(id=3, text="some text 3")
@@ -259,16 +255,6 @@ def mock_cursor_fetchmany(rows_per_batch=None):
     return mock_cursor
 
 
-def mock_cursor_fetchall():
-    mock_cursor = MagicMock(spec=aiomysql.Cursor)
-    mock_cursor.fetchall.side_effect = AsyncMock(
-        return_value=[DOC_ONE, DOC_TWO, DOC_THREE]
-    )
-    mock_cursor.__aenter__.return_value = mock_cursor
-
-    return mock_cursor
-
-
 @pytest.mark.asyncio
 async def test_client_when_aexit_called_then_cancel_sleeps(patch_connection_pool):
     client = await setup_mysql_client()
@@ -374,43 +360,46 @@ async def test_client_get_last_update_time(patch_connection_pool):
 
 @pytest.mark.asyncio
 async def test_client_yield_rows_for_table(patch_connection_pool):
-    rows = [DOC_ONE, DOC_TWO, DOC_THREE]
-    mock_cursor = mock_cursor_fetchall()
+    rows_per_batch = [[DOC_ONE], [DOC_TWO], [DOC_THREE]]
+    mock_cursor = mock_cursor_fetchmany(rows_per_batch)
     patch_connection_pool.acquire.return_value = await mock_connection(mock_cursor)
 
     client = await setup_mysql_client()
-    client.fetch_size = 3
+    client.fetch_size = 1
 
     async with client:
         yielded_docs = []
 
-        async for doc in client.yield_rows_for_table(
-            "table", primary_keys=["id"], table_row_count=3
-        ):
+        async for doc in client.yield_rows_for_table("table"):
             yielded_docs.append(doc)
 
-        assert len(yielded_docs) == len(rows)
+        # 3 batches with rows, 4th batch empty
+        num_batches = len(rows_per_batch) / client.fetch_size + 1
+
+        assert len(yielded_docs) == len(rows_per_batch)
+        assert mock_cursor.fetchmany.call_count == num_batches
 
 
 @pytest.mark.asyncio
 async def test_client_yield_rows_for_query(patch_connection_pool):
-    rows = [DOC_ONE, DOC_TWO, DOC_THREE]
-    mock_cursor = mock_cursor_fetchall()
-    mock_cursor.fetchone = AsyncMock(return_value=(3, None))
+    rows_per_batch = [[DOC_ONE]]
+    mock_cursor = mock_cursor_fetchmany(rows_per_batch)
     patch_connection_pool.acquire.return_value = await mock_connection(mock_cursor)
 
     client = await setup_mysql_client()
-    client.fetch_size = 3
+    client.fetch_size = 1
 
     async with client:
         yielded_docs = []
 
-        async for doc in client.yield_rows_for_query(
-            "SELECT * FROM db.table", primary_key_columns=["id"]
-        ):
+        async for doc in client.yield_rows_for_query("SELECT * FROM db.table"):
             yielded_docs.append(doc)
 
-        assert len(yielded_docs) == len(rows)
+        # 1 batch with rows, 2nd batch empty
+        num_batches = len(rows_per_batch) / client.fetch_size + 1
+
+        assert len(yielded_docs) == len(rows_per_batch)
+        assert mock_cursor.fetchmany.call_count == num_batches
 
 
 @pytest.mark.asyncio
@@ -495,23 +484,20 @@ async def test_fetch_documents_when_used_custom_query_then_sort_pk_cols(
         ):
             document_list.append(document)
 
-        if len(document_list):
-            assert document in document_list
-
-        if patch_row2doc is not None and patch_row2doc.call_args is not None:
-            assert patch_row2doc.call_args.kwargs == {
-                "row": {
-                    "Table": "table_name",
-                    "_id": "table_name_",
-                    "_timestamp": TIME,
-                    "table_name_column": "table1",
-                },
-                "column_names": ["column"],
-                # primary key columns are now sorted
-                "primary_key_columns": ["ab", "cd"],
-                "table": ["table1"],
-                "timestamp": TIME,
-            }
+        assert document in document_list
+        assert patch_row2doc.call_args.kwargs == {
+            "row": {
+                "Table": "table_name",
+                "_id": "table_name_",
+                "_timestamp": TIME,
+                "table_name_column": "table1",
+            },
+            "column_names": ["column"],
+            # primary key columns are now sorted
+            "primary_key_columns": ["ab", "cd"],
+            "table": ["table1"],
+            "timestamp": TIME,
+        }
 
 
 @freeze_time(TIME)
@@ -549,23 +535,20 @@ async def test_fetch_documents_when_custom_query_used_and_update_time_none(
         ):
             document_list.append(document)
 
-        if len(document_list):
-            assert document in document_list
-
-        if patch_row2doc is not None and patch_row2doc.call_args is not None:
-            assert patch_row2doc.call_args.kwargs == {
-                "row": {
-                    "Table": "table_name",
-                    "_id": "table_name_",
-                    "_timestamp": TIME,
-                    "table_name_column": "table1",
-                },
-                "column_names": ["column"],
-                "primary_key_columns": ["ab", "cd"],
-                "table": ["table1"],
-                # Should be called with an empty timestamp without failing on a comparison needed for max(...)
-                "timestamp": None,
-            }
+        assert document in document_list
+        assert patch_row2doc.call_args.kwargs == {
+            "row": {
+                "Table": "table_name",
+                "_id": "table_name_",
+                "_timestamp": TIME,
+                "table_name_column": "table1",
+            },
+            "column_names": ["column"],
+            "primary_key_columns": ["ab", "cd"],
+            "table": ["table1"],
+            # Should be called with an empty timestamp without failing on a comparison needed for max(...)
+            "timestamp": None,
+        }
 
 
 @pytest.mark.asyncio
@@ -683,212 +666,6 @@ async def test_validate_config_when_host_empty_then_raise_error():
             await source.validate_config()
 
 
-@pytest.mark.parametrize(
-    "tables_present_in_source, advanced_rules, id_in_source, expected_validation_result",
-    [
-        (
-            # valid: empty array should be valid
-            [],
-            {},
-            [],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: empty object should also be valid -> default value in Kibana
-            [],
-            {},
-            [],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: one custom query
-            [TABLE_ONE],
-            [
-                {
-                    "tables": [TABLE_ONE],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE],
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # valid: two custom queries
-            [TABLE_ONE, TABLE_TWO],
-            [
-                {
-                    "tables": [TABLE_ONE],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE],
-                },
-                {
-                    "tables": [TABLE_ONE, TABLE_TWO],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE, ID_TWO],
-                },
-            ],
-            [ID_ONE, ID_TWO],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # invalid: additional property present
-            [TABLE_ONE],
-            [
-                {
-                    "tables": [TABLE_ONE],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE],
-                    "additional_property": True,
-                }
-            ],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: tables field missing
-            [TABLE_ONE],
-            [{"query": "SELECT * FROM *", "id_columns": [ID_ONE]}],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: query field missing
-            [TABLE_ONE],
-            [{"tables": [TABLE_ONE], "id_columns": [ID_ONE]}],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # valid: id_columns field missing
-            [TABLE_ONE],
-            [{"tables": [TABLE_ONE], "query": "SELECT * FROM *"}],
-            [ID_ONE],
-            SyncRuleValidationResult.valid_result(
-                SyncRuleValidationResult.ADVANCED_RULES
-            ),
-        ),
-        (
-            # invalid: query empty
-            [TABLE_ONE],
-            [{"tables": [TABLE_ONE], "query": "", "id_columns": [ID_ONE]}],
-            [ID_ONE],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: tables empty
-            [TABLE_ONE],
-            [ID_ONE],
-            [{"tables": [], "query": "SELECT * FROM *", "id_columns": [ID_ONE]}],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: id_columns empty
-            [TABLE_ONE],
-            [ID_ONE],
-            [{"tables": [TABLE_ONE], "query": "SELECT * FROM *", "id_columns": []}],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: table missing in source
-            [TABLE_ONE],
-            [ID_ONE],
-            [
-                {
-                    "tables": [TABLE_ONE, TABLE_TWO],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE],
-                }
-            ],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: ID missing in source
-            [TABLE_ONE],
-            [ID_ONE],
-            [
-                {
-                    "tables": [TABLE_ONE],
-                    "query": "SELECT * FROM *",
-                    "id_columns": [ID_ONE, ID_TWO],
-                }
-            ],
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-        (
-            # invalid: array of arrays -> wrong type
-            [TABLE_ONE],
-            [[]],
-            None,
-            SyncRuleValidationResult(
-                SyncRuleValidationResult.ADVANCED_RULES,
-                is_valid=False,
-                validation_message=ANY,
-            ),
-        ),
-    ],
-)
-@pytest.mark.asyncio
-async def test_advanced_rules_validation_when_id_in_source_available(
-    tables_present_in_source,
-    advanced_rules,
-    id_in_source,
-    expected_validation_result,
-    patch_ping,
-):
-    async with create_source(MySqlDataSource) as source:
-        client = await setup_mysql_source(source, DATABASE)
-        client.get_all_table_names = AsyncMock(return_value=tables_present_in_source)
-
-        source.mysql_client = as_async_context_manager_mock(client)
-
-        validation_result = await MySQLAdvancedRulesValidator(source).validate(
-            advanced_rules
-        )
-
-        assert validation_result == expected_validation_result
-
-
 @pytest.mark.parametrize(
     "tables_present_in_source, advanced_rules, expected_validation_result",
     [
@@ -1197,85 +974,3 @@ def test_row2doc(
     )
 
     assert doc == expected_doc
-
-
-@pytest.mark.asyncio
-@pytest.mark.parametrize(
-    "query, updated_query",
-    [
-        # Query without ORDER BY and semicolon
-        (
-            "SELECT id, name FROM table_name",
-            "SELECT id, name FROM table_name ORDER BY id LIMIT 5000 OFFSET 0;",
-        ),
-        # Query with semicolon but without ORDER BY
-        (
-            "SELECT id, name FROM table_name;",
-            "SELECT id, name FROM table_name ORDER BY id LIMIT 5000 OFFSET 0;",
-        ),
-        # Query with ORDER BY but without semicolon
-        (
-            "SELECT id, name FROM table_name ORDER BY marks",
-            "SELECT id, name FROM table_name ORDER BY marks LIMIT 5000 OFFSET 0;",
-        ),
-        # Query with ORDER BY and semicolon
-        (
-            "SELECT id, name FROM table_name ORDER BY marks;",
-            "SELECT id, name FROM table_name ORDER BY marks LIMIT 5000 OFFSET 0;",
-        ),
-    ],
-)
-async def test_update_query_with_pagination_attributes(query, updated_query):
-    client = await setup_mysql_client()
-    expected_updated_query = client._update_query_with_pagination_attributes(
-        query=query, offset=0, primary_key_columns=["id"]
-    )
-    assert expected_updated_query == updated_query
-
-
-@pytest.mark.asyncio
-async def test_get_table_row_count_for_query(patch_connection_pool):
-    table_row_count_for_query = 100
-    custom_query = "SELECT id, name FROM my_table WHERE marks > 100;"
-    mock_cursor = MagicMock(spec=aiomysql.Cursor)
-    mock_cursor.fetchone = AsyncMock(return_value=(table_row_count_for_query, None))
-    mock_cursor.__aenter__.return_value = mock_cursor
-
-    patch_connection_pool.acquire.return_value = await mock_connection(mock_cursor)
-
-    client = await setup_mysql_client()
-
-    async with client:
-        assert (
-            await client._get_table_row_count_for_query(query=custom_query)
-            == table_row_count_for_query
-        )
-
-
-@pytest.mark.asyncio
-async def test_yield_docs_custom_query_with_no_primary_key(patch_connection_pool):
-    async with create_source(MySqlDataSource) as source:
-        mock_cursor = mock_cursor_fetchall()
-        mock_cursor.fetchall = AsyncMock(return_value=[])
-        patch_connection_pool.acquire.return_value = await mock_connection(mock_cursor)
-
-        client = await setup_mysql_client()
-
-        async with client:
-            async for docs in source._yield_docs_custom_query(
-                client, "table", "SELECT * FROM table", []
-            ):
-                assert None is docs
-
-
-@pytest.mark.asyncio
-async def test_get_primary_key_column_names(patch_connection_pool):
-    mock_cursor = mock_cursor_fetchall()
-    mock_cursor.fetchall = AsyncMock(return_value=[("id1", None), ("id2", None)])
-    patch_connection_pool.acquire.return_value = await mock_connection(mock_cursor)
-
-    client = await setup_mysql_client()
-
-    async with client:
-        primary_keys = await client.get_primary_key_column_names("table")
-        assert primary_keys == ["id1", "id2"]
diff --git a/tests/sources/test_network_drive.py b/tests/sources/test_network_drive.py
index ed257e21..6912bbde 100644
--- a/tests/sources/test_network_drive.py
+++ b/tests/sources/test_network_drive.py
@@ -3,8 +3,8 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Tests the Network Drive source class methods."""
-
+"""Tests the Network Drive source class methods.
+"""
 import asyncio
 import csv
 import datetime
diff --git a/tests/sources/test_notion.py b/tests/sources/test_notion.py
index 021b2d4a..d6c632ea 100644
--- a/tests/sources/test_notion.py
+++ b/tests/sources/test_notion.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 from unittest.mock import ANY, AsyncMock, MagicMock, Mock, patch
 
 import aiohttp
@@ -320,12 +315,12 @@ async def test_get_content():
     mock_download_extract = AsyncMock(return_value=MagicMock())
     mock_file_metadata = AsyncMock(return_value=MagicMock())
     async with create_source(NotionDataSource) as source:
-        with (
-            patch.object(NotionDataSource, "get_file_metadata", mock_file_metadata),
-            patch.object(NotionDataSource, "can_file_be_downloaded", return_value=True),
-            patch.object(
-                NotionDataSource, "download_and_extract_file", mock_download_extract
-            ),
+        with patch.object(
+            NotionDataSource, "get_file_metadata", mock_file_metadata
+        ), patch.object(
+            NotionDataSource, "can_file_be_downloaded", return_value=True
+        ), patch.object(
+            NotionDataSource, "download_and_extract_file", mock_download_extract
         ):
             await source.get_content(FILE_BLOCK, URL)
             assert mock_get_via_session.called_once_with(url=URL)
@@ -604,15 +599,12 @@ async def test_get_docs_with_advanced_rules(filtering):
         notion_secret_key="secert_key",
     ) as source:
         documents = []
-        with (
-            patch.object(
-                NotionClient, "query_database", return_value=AsyncIterator([DATABASE])
-            ),
-            patch.object(
-                NotionDataSource,
-                "retrieve_and_process_blocks",
-                return_value=AsyncIterator([(BLOCK, None)]),
-            ),
+        with patch.object(
+            NotionClient, "query_database", return_value=AsyncIterator([DATABASE])
+        ), patch.object(
+            NotionDataSource,
+            "retrieve_and_process_blocks",
+            return_value=AsyncIterator([(BLOCK, None)]),
         ):
             expected_responses_ids = [DATABASE.get("id"), BLOCK.get("id")]
             async for docs, _ in source.get_docs(filtering):
@@ -767,15 +759,12 @@ async def test_advanced_rules_validation(advanced_rules, expected_validation_res
     async with create_source(
         NotionDataSource, notion_secret_key="secret_key"
     ) as source:
-        with (
-            patch.object(
-                NotionClient,
-                "async_iterate_paginated_api",
-                return_value=AsyncIterator([DATABASE]),
-            ),
-            patch.object(
-                NotionDataSource, "get_entities", return_value=[DATABASE, BLOCK]
-            ),
+        with patch.object(
+            NotionClient,
+            "async_iterate_paginated_api",
+            return_value=AsyncIterator([DATABASE]),
+        ), patch.object(
+            NotionDataSource, "get_entities", return_value=[DATABASE, BLOCK]
         ):
             validation_result = await NotionAdvancedRulesValidator(source).validate(
                 advanced_rules
diff --git a/tests/sources/test_onedrive.py b/tests/sources/test_onedrive.py
index aa16fb23..c8adc5b4 100644
--- a/tests/sources/test_onedrive.py
+++ b/tests/sources/test_onedrive.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the OneDrive source class methods"""
-
 from contextlib import asynccontextmanager
 from unittest.mock import ANY, AsyncMock, MagicMock, Mock, patch
 
@@ -187,7 +186,6 @@ EXPECTED_USER1_FILES = [
         "type": "folder",
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder1",
         "size": 10484,
-        "mime_type": None,
     },
     {
         "created_at": "2023-05-01T09:09:31Z",
@@ -197,7 +195,6 @@ EXPECTED_USER1_FILES = [
         "type": "file",
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/_layouts/15/Doc.aspx?sourcedoc=34680133F84%7&file=doit.py&action=default&mobileredirect=true",
         "size": 10484,
-        "mime_type": "application/python",
     },
 ]
 
@@ -237,7 +234,6 @@ EXPECTED_USER2_FILES = [
         "type": "folder",
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder4",
         "size": 10484,
-        "mime_type": None,
     },
     {
         "created_at": "2023-05-01T09:09:31Z",
@@ -247,7 +243,6 @@ EXPECTED_USER2_FILES = [
         "type": "file",
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/_layouts/15/mac.txt?sourcedoc=34680133F84%7&file=mac.txt&action=default&mobileredirect=true",
         "size": 10484,
-        "mime_type": "plain/text",
     },
 ]
 
@@ -348,7 +343,6 @@ EXPECTED_USER1_FILES_PERMISSION = [
         "created_at": "2023-05-01T09:09:19Z",
         "size": 10484,
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder1",
-        "mime_type": None,
         "_allow_access_control": [
             "group:group_id_1",
             "user_id:user_id_1",
@@ -363,7 +357,6 @@ EXPECTED_USER1_FILES_PERMISSION = [
         "created_at": "2023-05-01T09:09:31Z",
         "size": 10484,
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/_layouts/15/Doc.aspx?sourcedoc=34680133F84%7&file=doit.py&action=default&mobileredirect=true",
-        "mime_type": "application/python",
         "_allow_access_control": [
             "group:group_id_1",
             "user_id:user_id_1",
@@ -380,7 +373,6 @@ EXPECTED_USER2_FILES_PERMISSION = [
         "created_at": "2023-05-01T09:09:19Z",
         "size": 10484,
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder4",
-        "mime_type": None,
         "_allow_access_control": [
             "group:group_id_2",
             "user_id:user_id_3",
@@ -395,7 +387,6 @@ EXPECTED_USER2_FILES_PERMISSION = [
         "created_at": "2023-05-01T09:09:31Z",
         "size": 10484,
         "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/_layouts/15/mac.txt?sourcedoc=34680133F84%7&file=mac.txt&action=default&mobileredirect=true",
-        "mime_type": "plain/text",
         "_allow_access_control": [
             "group:group_id_2",
             "user_id:user_id_3",
@@ -884,15 +875,12 @@ async def test_get_content_when_is_downloadable_is_true(
 
 @pytest.mark.asyncio
 async def test_get_content_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=RESPONSE_CONTENT,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=RESPONSE_CONTENT,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_onedrive_source(use_text_extraction_service=True) as source:
             with patch.object(AccessToken, "get", return_value="abc"):
@@ -911,34 +899,6 @@ async def test_get_content_with_extraction_service():
                         assert response == EXPECTED_CONTENT_EXTRACTED
 
 
-@pytest.mark.asyncio
-async def test_prepare_doc_when_file_none():
-    async with create_onedrive_source() as source:
-        mock_response = {
-            "createdDateTime": "2023-05-01T09:09:19Z",
-            "eTag": '"{FF3F899A-2CBB-4D06-AE16-BBBBF5C35C4E},1"',
-            "id": "01DABHRNU2RE777OZMAZG24FV3XP24GXCO",
-            "lastModifiedDateTime": "2023-05-01T09:09:19Z",
-            "name": "folder1",
-            "webUrl": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder1",
-            "cTag": '"c:{FF3F899A-2CBB-4D06-AE16-BBBBF5C35C4E},0"',
-            "parentReference": {"path": "root"},
-            "size": 10484,
-            "file": None,
-        }
-        result = source.prepare_doc(mock_response)
-        assert result == {
-            "type": "folder",
-            "title": "folder1",
-            "_id": "01DABHRNU2RE777OZMAZG24FV3XP24GXCO",
-            "_timestamp": "2023-05-01T09:09:19Z",
-            "created_at": "2023-05-01T09:09:19Z",
-            "size": 10484,
-            "url": "https://w076v-my.sharepoint.com/personal/adel_w076v_onmicrosoft_com/Documents/folder1",
-            "mime_type": None,
-        }
-
-
 @pytest.mark.asyncio
 async def test_lookup_request_by_id():
     async with create_onedrive_source() as source:
diff --git a/tests/sources/test_oracle.py b/tests/sources/test_oracle.py
index bc411583..a5b8da69 100644
--- a/tests/sources/test_oracle.py
+++ b/tests/sources/test_oracle.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Oracle Database source class methods"""
-
 from contextlib import contextmanager
 from unittest.mock import patch
 
diff --git a/tests/sources/test_outlook.py b/tests/sources/test_outlook.py
index 31cc507c..43922c9d 100644
--- a/tests/sources/test_outlook.py
+++ b/tests/sources/test_outlook.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Outlook source class methods"""
-
 from contextlib import asynccontextmanager
 from unittest import mock
 from unittest.mock import AsyncMock, MagicMock, patch
@@ -667,15 +666,12 @@ async def test_get_content(attachment, expected_content):
 
 @pytest.mark.asyncio
 async def test_get_content_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=str(RESPONSE_CONTENT),
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=str(RESPONSE_CONTENT),
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_outlook_source(use_text_extraction_service=True) as source:
             response = await source.get_content(
@@ -700,9 +696,7 @@ async def test_get_user_accounts_for_cloud(account, is_cloud, user_response):
         source.client.is_cloud = is_cloud
         source.client._get_user_instance.get_users = AsyncIterator([user_response])
 
-        async for (
-            source_account
-        ) in source.client._get_user_instance.get_user_accounts():
+        async for source_account in source.client._get_user_instance.get_user_accounts():
             assert source_account == "account"
 
 
diff --git a/tests/sources/test_postgresql.py b/tests/sources/test_postgresql.py
index 1aa6067a..3fe1136c 100644
--- a/tests/sources/test_postgresql.py
+++ b/tests/sources/test_postgresql.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the PostgreSQL database source class methods"""
-
 import ssl
 from contextlib import asynccontextmanager
 from unittest.mock import ANY, Mock, patch
diff --git a/tests/sources/test_redis.py b/tests/sources/test_redis.py
index 97eb36c3..52915518 100644
--- a/tests/sources/test_redis.py
+++ b/tests/sources/test_redis.py
@@ -155,7 +155,7 @@ async def test_get_docs():
             return_value=AsyncMock(),
         ):
             source.get_db_records = AsyncIterator(items=DOCUMENTS)
-            async for doc, _ in source.get_docs():
+            async for (doc, _) in source.get_docs():
                 assert doc in DOCUMENTS
 
 
@@ -256,7 +256,7 @@ async def test_get_docs_with_sync_rules(filtering):
         source.client._client.type = AsyncMock(return_value="string")
         source.client._client.get = AsyncMock(return_value="this is value")
         source.client._client.memory_usage = AsyncMock(return_value=10)
-        async for doc, _ in source.get_docs(filtering):
+        async for (doc, _) in source.get_docs(filtering):
             assert doc in DOCUMENTS
         source.client._client.scan_iter.assert_called_once_with(
             match="0*", count=1000, _type="string"
diff --git a/tests/sources/test_s3.py b/tests/sources/test_s3.py
index 299a647e..8bc71f55 100644
--- a/tests/sources/test_s3.py
+++ b/tests/sources/test_s3.py
@@ -156,13 +156,9 @@ async def create_fake_coroutine(data):
 async def test_ping():
     """Test ping method of S3DataSource class"""
     async with create_s3_source() as source:
-        with (
-            mock.patch(
-                "aioboto3.resources.collection.AIOResourceCollection",
-                AIOResourceCollection,
-            ),
-            mock.patch("aiobotocore.client.AioBaseClient", S3Object),
-        ):
+        with mock.patch(
+            "aioboto3.resources.collection.AIOResourceCollection", AIOResourceCollection
+        ), mock.patch("aiobotocore.client.AioBaseClient", S3Object):
             await source.ping()
 
 
@@ -242,15 +238,12 @@ async def test_get_content(s3_client):
 @pytest.mark.asyncio
 async def test_get_content_with_text_extraction_enabled_adds_body(s3_client):
     """Test get_content method of S3Client"""
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="test content",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="test content",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_s3_source(use_text_extraction_service=True) as source:
             document = {
@@ -361,19 +354,14 @@ async def test_get_docs(mock_aws):
         source.s3_client.get_bucket_location = mock.Mock(
             return_value=await create_fake_coroutine("ap-south-1")
         )
-        with (
-            mock.patch(
-                "aioboto3.resources.collection.AIOResourceCollection",
-                AIOResourceCollection,
-            ),
-            mock.patch("aiobotocore.client.AioBaseClient", S3Object),
-            mock.patch(
-                "aiobotocore.utils.AioInstanceMetadataFetcher.retrieve_iam_role_credentials",
-                get_roles,
-            ),
+        with mock.patch(
+            "aioboto3.resources.collection.AIOResourceCollection", AIOResourceCollection
+        ), mock.patch("aiobotocore.client.AioBaseClient", S3Object), mock.patch(
+            "aiobotocore.utils.AioInstanceMetadataFetcher.retrieve_iam_role_credentials",
+            get_roles,
         ):
             num = 0
-            async for doc, _ in source.get_docs():
+            async for (doc, _) in source.get_docs():
                 assert doc["_id"] in (
                     "d0295955cdb6d488a4a1d3f10dbf141b",
                     "94fce1b79d35d3ff4f96a678ebaed3b5",
@@ -404,19 +392,14 @@ async def test_get_docs_with_advanced_rules(filtering):
         source.s3_client.get_bucket_location = mock.Mock(
             return_value=await create_fake_coroutine("ap-south-1")
         )
-        with (
-            mock.patch(
-                "aioboto3.resources.collection.AIOResourceCollection",
-                AIOResourceCollection,
-            ),
-            mock.patch("aiobotocore.client.AioBaseClient", S3Object),
-            mock.patch(
-                "aiobotocore.utils.AioInstanceMetadataFetcher.retrieve_iam_role_credentials",
-                get_roles,
-            ),
+        with mock.patch(
+            "aioboto3.resources.collection.AIOResourceCollection", AIOResourceCollection
+        ), mock.patch("aiobotocore.client.AioBaseClient", S3Object), mock.patch(
+            "aiobotocore.utils.AioInstanceMetadataFetcher.retrieve_iam_role_credentials",
+            get_roles,
         ):
             num = 0
-            async for doc, _ in source.get_docs(filtering):
+            async for (doc, _) in source.get_docs(filtering):
                 assert doc["_id"] in (
                     "70743168e14c18632702ee6e3e9b73fc",
                     "9fbda540ca0a2441475aea7b8f37bdaf",
@@ -448,13 +431,9 @@ async def test_get_bucket_list_for_wildcard():
     async with create_s3_source() as source:
         source.configuration.get_field("buckets").value = ["*"]
 
-        with (
-            mock.patch(
-                "aioboto3.resources.collection.AIOResourceCollection",
-                AIOResourceCollection,
-            ),
-            mock.patch("aiobotocore.client.AioBaseClient", S3Object),
-        ):
+        with mock.patch(
+            "aioboto3.resources.collection.AIOResourceCollection", AIOResourceCollection
+        ), mock.patch("aiobotocore.client.AioBaseClient", S3Object):
             actual_response = await source.s3_client.get_bucket_list()
 
         assert ["bucket1", "bucket2"] == actual_response
diff --git a/tests/sources/test_salesforce.py b/tests/sources/test_salesforce.py
index 700d1160..c45e7a47 100644
--- a/tests/sources/test_salesforce.py
+++ b/tests/sources/test_salesforce.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Salesforce source class methods"""
-
 import re
 from contextlib import asynccontextmanager
 from copy import deepcopy
@@ -1539,15 +1538,12 @@ async def test_get_all_with_content_docs_when_success(
 
 @pytest.mark.asyncio
 async def test_get_all_with_content_docs_and_extraction_service(mock_responses):
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="chunk1",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="chunk1",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_salesforce_source(use_text_extraction_service=True) as source:
             expected_doc = {
diff --git a/tests/sources/test_servicenow.py b/tests/sources/test_servicenow.py
index f821f620..64cb25c0 100644
--- a/tests/sources/test_servicenow.py
+++ b/tests/sources/test_servicenow.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the ServiceNow source class methods"""
-
 from contextlib import asynccontextmanager
 from unittest import mock
 from unittest.mock import Mock, patch
@@ -506,15 +505,12 @@ async def test_fetch_attachment_content_with_doit():
 
 @pytest.mark.asyncio
 async def test_fetch_attachment_content_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value="Attachment Content",
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value="Attachment Content",
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_service_now_source(
             use_text_extraction_service=True
diff --git a/tests/sources/test_sharepoint_online.py b/tests/sources/test_sharepoint_online.py
index 2a952eec..59d568a2 100644
--- a/tests/sources/test_sharepoint_online.py
+++ b/tests/sources/test_sharepoint_online.py
@@ -1028,62 +1028,14 @@ class TestSharepointOnlineClient:
 
     @pytest.mark.asyncio
     async def test_site_collections(self, client, patch_scroll):
-        first_site_collection = {
-            "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#sites/$entity",
-            "createdDateTime": "2023-12-12T12:00:00.000Z",
-            "description": "This is the first test site collection",
-            "id": "site-id-1",
-            "lastModifiedDateTime": "2023-12-12T12:00:00.000Z",
-            "name": "fake-site-collection-1",
-            "webUrl": "https://example.sharepoint.com",
-            "displayName": "Fake Site Collection",
-            "root": {},
-            "siteCollection": {"hostname": "example.sharepoint.com"},
-        }
-        second_site_collection = {
-            "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#sites/$entity",
-            "createdDateTime": "2023-12-12T12:00:00.000Z",
-            "description": "This is the second test site collection",
-            "id": "site-id-2",
-            "lastModifiedDateTime": "2023-12-12T12:00:00.000Z",
-            "name": "fake-site-collection-2",
-            "webUrl": "https://example.sharepoint.com",
-            "displayName": "Fake Site Collection",
-            "root": {},
-            "siteCollection": {"hostname": "example.sharepoint.com"},
-        }
+        actual_items = ["1", "2", "3", "4"]
 
-        patch_scroll.side_effect = AsyncIterator(
-            [[first_site_collection, second_site_collection]]
+        returned_items = await self._execute_scrolling_method(
+            client.site_collections, patch_scroll, actual_items
         )
-        returned_items = []
-        async for site_collection in client.site_collections():
-            returned_items.append(site_collection)
 
-        assert len(returned_items) == 2
-        assert returned_items == [first_site_collection, second_site_collection]
-
-    @pytest.mark.asyncio
-    async def test_site_collections_when_permission_missing(
-        self, client, patch_fetch, patch_scroll
-    ):
-        actual_response = {
-            "@odata.context": "https://graph.microsoft.com/v1.0/$metadata#sites/$entity",
-            "createdDateTime": "2023-12-12T12:00:00.000Z",
-            "description": "This is a test site collection",
-            "id": "site-id",
-            "lastModifiedDateTime": "2023-12-12T12:00:00.000Z",
-            "name": "fake-site-collection",
-            "webUrl": "https://example.sharepoint.com",
-            "displayName": "Fake Site Collection",
-            "root": {},
-            "siteCollection": {"hostname": "example.sharepoint.com"},
-        }
-
-        patch_scroll.side_effect = PermissionsMissing()
-        patch_fetch.side_effect = [actual_response]
-        async for site_collection in client.site_collections():
-            assert site_collection == actual_response
+        assert len(returned_items) == len(actual_items)
+        assert returned_items == actual_items
 
     @pytest.mark.asyncio
     async def test_sites_wildcard(self, client, patch_scroll):
@@ -1174,32 +1126,6 @@ class TestSharepointOnlineClient:
         assert len(returned_items) == 3
         assert returned_items == expected_items
 
-    @pytest.mark.asyncio
-    @pytest.mark.parametrize(
-        "exception, raises",
-        [
-            (
-                PermissionsMissing(),
-                PermissionsMissing,
-            ),
-            (
-                ClientResponseError(
-                    status=400,
-                    request_info=aiohttp.RequestInfo(
-                        real_url="", method=None, headers=None, url=""
-                    ),
-                    history=None,
-                ),
-                ClientResponseError,
-            ),
-        ],
-    )
-    async def test_all_sites_with_error(self, client, patch_scroll, exception, raises):
-        sharepoint_host = "example.sharepoint.com"
-        patch_scroll.side_effect = exception
-        with pytest.raises(raises):
-            await anext(client._all_sites(sharepoint_host, []))
-
     @pytest.mark.asyncio
     async def test_site_drives(self, client, patch_scroll):
         site_id = "12345"
@@ -2289,7 +2215,7 @@ class TestSharepointOnlineDataSource:
                 self.site_drives
             )
             assert len([i for i in results if i["object_type"] == "drive_item"]) == sum(
-                len(j) for j in self.drive_items
+                [len(j) for j in self.drive_items]
             )
             assert len([i for i in results if i["object_type"] == "site_list"]) == len(
                 self.site_lists
@@ -2362,7 +2288,7 @@ class TestSharepointOnlineDataSource:
                 for site_drive in site_drives
             )
 
-            assert len(drive_items) == sum(len(j) for j in self.drive_items)
+            assert len(drive_items) == sum([len(j) for j in self.drive_items])
 
             expected_drive_item_access_control = [
                 _prefix_user_id(USER_ONE_ID),
@@ -2421,11 +2347,9 @@ class TestSharepointOnlineDataSource:
     ):
         async with create_spo_source() as source:
             with pytest.raises(SyncCursorEmpty):
-                async for (
-                    _doc,
-                    _download_func,
-                    _operation,
-                ) in source.get_docs_incrementally(sync_cursor=sync_cursor):
+                async for _doc, _download_func, _operation in source.get_docs_incrementally(
+                    sync_cursor=sync_cursor
+                ):
                     pass
 
     @pytest.mark.asyncio
@@ -2438,9 +2362,9 @@ class TestSharepointOnlineDataSource:
 
         sync_cursor = {"site_drives": {}, "cursor_timestamp": self.month_ago}
         for site_drive in self.site_drives:
-            sync_cursor["site_drives"][site_drive["id"]] = (
-                "http://fakesharepoint.com/deltalink"
-            )
+            sync_cursor["site_drives"][
+                site_drive["id"]
+            ] = "http://fakesharepoint.com/deltalink"
 
         deleted = 0
         for page in self.drive_items_delta:
@@ -2698,9 +2622,7 @@ class TestSharepointOnlineDataSource:
 
             drive_items_with_permissions = []
 
-            async for (
-                drive_item_with_permission
-            ) in source._drive_items_batch_with_permissions(
+            async for drive_item_with_permission in source._drive_items_batch_with_permissions(
                 drive_id, drive_items_batch, "dummy_site_web_url"
             ):
                 drive_items_with_permissions.append(drive_item_with_permission)
@@ -2721,9 +2643,7 @@ class TestSharepointOnlineDataSource:
 
             drive_items_without_permissions = []
 
-            async for (
-                drive_item_without_permissions
-            ) in source._drive_items_batch_with_permissions(
+            async for drive_item_without_permissions in source._drive_items_batch_with_permissions(
                 drive_id, drive_items_batch, "dummy_site_web_url"
             ):
                 drive_items_without_permissions.append(drive_item_without_permissions)
@@ -2744,9 +2664,7 @@ class TestSharepointOnlineDataSource:
 
             drive_items_without_permissions = []
 
-            async for (
-                drive_item_without_permissions
-            ) in source._drive_items_batch_with_permissions(
+            async for drive_item_without_permissions in source._drive_items_batch_with_permissions(
                 drive_id, drive_items_batch, "dummy_site_web_url"
             ):
                 drive_items_without_permissions.append(drive_item_without_permissions)
@@ -2785,9 +2703,7 @@ class TestSharepointOnlineDataSource:
 
             drive_items_with_permissions = []
 
-            async for (
-                drive_item_with_permission
-            ) in source._drive_items_batch_with_permissions(
+            async for drive_item_with_permission in source._drive_items_batch_with_permissions(
                 drive_id, drive_items_batch, "dummy_site_web_url"
             ):
                 drive_items_with_permissions.append(drive_item_with_permission)
@@ -3053,15 +2969,12 @@ class TestSharepointOnlineDataSource:
         attachment = {"odata.id": "1", "_original_filename": "file.ppt"}
         message = "This is the text content of drive item"
 
-        with (
-            patch(
-                "connectors.content_extraction.ContentExtraction.extract_text",
-                return_value=message,
-            ) as extraction_service_mock,
-            patch(
-                "connectors.content_extraction.ContentExtraction.get_extraction_config",
-                return_value={"host": "http://localhost:8090"},
-            ),
+        with patch(
+            "connectors.content_extraction.ContentExtraction.extract_text",
+            return_value=message,
+        ) as extraction_service_mock, patch(
+            "connectors.content_extraction.ContentExtraction.get_extraction_config",
+            return_value={"host": "http://localhost:8090"},
         ):
 
             async def download_func(attachment_id, async_buffer):
@@ -3088,15 +3001,12 @@ class TestSharepointOnlineDataSource:
         attachment = {"odata.id": "1", "_original_filename": "file.ppt"}
         message = "This is the text content of drive item"
 
-        with (
-            patch(
-                "connectors.content_extraction.ContentExtraction.extract_text",
-                return_value=message,
-            ) as extraction_service_mock,
-            patch(
-                "connectors.content_extraction.ContentExtraction.get_extraction_config",
-                return_value={"host": "http://localhost:8090"},
-            ),
+        with patch(
+            "connectors.content_extraction.ContentExtraction.extract_text",
+            return_value=message,
+        ) as extraction_service_mock, patch(
+            "connectors.content_extraction.ContentExtraction.get_extraction_config",
+            return_value={"host": "http://localhost:8090"},
         ):
 
             async def download_func(attachment_id, async_buffer):
@@ -3165,15 +3075,12 @@ class TestSharepointOnlineDataSource:
         }
         message = "This is the text content of drive item"
 
-        with (
-            patch(
-                "connectors.content_extraction.ContentExtraction.extract_text",
-                return_value=message,
-            ) as extraction_service_mock,
-            patch(
-                "connectors.content_extraction.ContentExtraction.get_extraction_config",
-                return_value={"host": "http://localhost:8090"},
-            ),
+        with patch(
+            "connectors.content_extraction.ContentExtraction.extract_text",
+            return_value=message,
+        ) as extraction_service_mock, patch(
+            "connectors.content_extraction.ContentExtraction.get_extraction_config",
+            return_value={"host": "http://localhost:8090"},
         ):
 
             async def download_func(drive_id, drive_item_id, async_buffer):
@@ -3207,15 +3114,12 @@ class TestSharepointOnlineDataSource:
         }
         message = "This is the text content of drive item"
 
-        with (
-            patch(
-                "connectors.content_extraction.ContentExtraction.extract_text",
-                return_value=message,
-            ) as extraction_service_mock,
-            patch(
-                "connectors.content_extraction.ContentExtraction.get_extraction_config",
-                return_value={"host": "http://localhost:8090"},
-            ),
+        with patch(
+            "connectors.content_extraction.ContentExtraction.extract_text",
+            return_value=message,
+        ) as extraction_service_mock, patch(
+            "connectors.content_extraction.ContentExtraction.get_extraction_config",
+            return_value={"host": "http://localhost:8090"},
         ):
 
             async def download_func(drive_id, drive_item_id, async_buffer):
diff --git a/tests/sources/test_sharepoint_server.py b/tests/sources/test_sharepoint_server.py
index 03faaefc..ec3ed718 100644
--- a/tests/sources/test_sharepoint_server.py
+++ b/tests/sources/test_sharepoint_server.py
@@ -3,16 +3,16 @@
 # or more contributor license agreements. Licensed under the Elastic License 2.0;
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
-"""Tests the Sharepoint source class methods."""
-
+"""Tests the Sharepoint source class methods.
+"""
 import ssl
 from contextlib import asynccontextmanager
 from unittest import mock
-from unittest.mock import Mock, patch
+from unittest.mock import AsyncMock, Mock, patch
 
-import httpx
+import aiohttp
 import pytest
-from httpx import ByteStream
+from aiohttp import StreamReader
 
 from connectors.logger import logger
 from connectors.source import ConfigurableFieldValueError
@@ -56,7 +56,6 @@ class MockResponse:
     def __init__(self, json, status):
         self._json = json
         self.status = status
-        self.is_success = True
 
     async def json(self):
         """This Method is used to return a json response"""
@@ -72,11 +71,11 @@ class MockResponse:
 
 
 class MockObjectResponse:
-    """Class to mock object response of httpx session.get method"""
+    """Class to mock object response of aiohttp session.get method"""
 
     def __init__(self):
         """Setup a streamReader object"""
-        self.content = ByteStream
+        self.content = StreamReader
 
     async def __aexit__(self, exc_type, exc, tb):
         """Closes an async with block"""
@@ -116,9 +115,9 @@ async def test_ping_for_failed_connection_exception():
         mock_response = {"access_token": "test2344", "expires_in": "1234555"}
         async_response = MockResponse(mock_response, 200)
         with patch.object(
-            httpx, "AsyncClient", side_effect=Exception(EXCEPTION_MESSAGE)
+            aiohttp, "ClientSession", side_effect=Exception(EXCEPTION_MESSAGE)
         ):
-            with patch("httpx.get", return_value=async_response):
+            with patch("aiohttp.request", return_value=async_response):
                 with pytest.raises(Exception):
                     await source.ping()
 
@@ -170,7 +169,7 @@ async def test_api_call_for_exception():
     """This function test _api_call when credentials are incorrect"""
     async with create_sps_source(retry_count=0) as source:
         with patch.object(
-            httpx, "AsyncClient", side_effect=Exception(EXCEPTION_MESSAGE)
+            aiohttp, "ClientSession", side_effect=Exception(EXCEPTION_MESSAGE)
         ):
             with pytest.raises(Exception):
                 await source.sharepoint_client._api_call(url_name="lists", url="abc")
@@ -208,9 +207,7 @@ async def test_prepare_drive_items_doc():
             "editor_id": 1,
         }
 
-        target_response = source.format_drive_item(
-            item=list_items, site_url=f"{HOST_URL}/site", server_relative_url="/site"
-        )
+        target_response = source.format_drive_item(item=list_items)
         assert target_response == expected_response
 
 
@@ -238,10 +235,10 @@ async def test_prepare_list_items_doc():
             "file_name": "filename",
             "size": 0,
             "title": "dummy",
-            "author": "system",
-            "editor": "system",
             "author_id": 123,
             "editor_id": 123,
+            "author": "system",
+            "editor": "system",
             "creation_time": "2023-01-30T12:48:31Z",
             "_timestamp": "2023-01-30T12:48:31Z",
             "url": f"{HOST_URL}/site%5E",
@@ -371,7 +368,7 @@ async def test_get_list_items():
             "AuthorId": 1073741823,
             "Attachments": False,
             "GUID": "111111122222222-adfa-4e4f-93c4-bfedddda8510",
-            "url": f"{HOST_URL}/sites/collection1/ctest/Lists/ctestlist/DispForm.aspx?ID=1&Source={HOST_URL}/sites/collection1/ctest/Lists/ctestlist/AllItems.aspx&ContentTypeId=12345",
+            "url": f"{HOST_URL}/sites/enterprise/site1%5E/DispForm.aspx?ID=1&Source={HOST_URL}/sites/enterprise/site1%5E/AllItems.aspx&ContentTypeId=12345",
         },
     ]
     attachment_response = {"UniqueId": "1"}
@@ -385,9 +382,8 @@ async def test_get_list_items():
         expected_response = []
         async for item, _ in source.sharepoint_client.get_list_items(
             list_id="620070a1-ee50-4585-b6a7-0f6210b1a69d",
-            site_url=f"{HOST_URL}/sites/collection1/ctest",
-            server_relative_url="/sites/collection1/ctest",
-            list_relative_url="/Lists/ctestlist",
+            site_url="/sites/enterprise/ctest",
+            server_relative_url="/sites/enterprise/site1^",
             selected_field="",
         ):
             expected_response.append(item)
@@ -484,14 +480,6 @@ async def test_get_drive_items():
 async def test_get_docs_list_items():
     """Test get docs method for list items"""
 
-    site_content_response = {
-        "Title": "ctest",
-        "Id": "f764b597-ed44-49be-8867-f8e9ca5d0a6e",
-        "Url": f"{HOST_URL}/sites/enterprise/ctest",
-        "ServerRelativeUrl": "/sites/enterprise/ctest",
-        "LastItemModifiedDate": "2023-03-19T05:02:52Z",
-        "Created": "2023-03-19T05:02:52Z",
-    }
     item_content_response = {
         "RootFolder": {
             "ServerRelativeUrl": "/sites/enterprise/ctest/_api",
@@ -522,28 +510,24 @@ async def test_get_docs_list_items():
         source.sharepoint_client._fetch_data_with_query = Mock(
             return_value=AsyncIterator([])
         )
-        source.sharepoint_client.get_site = AsyncIterator([site_content_response])
-        source.sharepoint_client.get_lists = AsyncIterator([item_content_response])
+        source.get_lists = AsyncIterator([(item_content_response, [])])
         source.sharepoint_client.get_list_items = AsyncIterator(
-            [(list_content_response, None)]
+            [
+                (
+                    list_content_response,
+                    None,
+                )
+            ]
         )
         async for document, _ in source.get_docs():
             actual_response.append(document)
-        assert len(actual_response) == 3
+        assert len(actual_response) == 2
 
 
 @pytest.mark.asyncio
 async def test_get_docs_list_items_when_relativeurl_is_not_none():
     """Test get docs method for list items"""
 
-    site_content_response = {
-        "Title": "ctest",
-        "Id": "f764b597-ed44-49be-8867-f8e9ca5d0a6e",
-        "Url": f"{HOST_URL}/sites/enterprise/ctest",
-        "ServerRelativeUrl": "/sites/enterprise/ctest",
-        "LastItemModifiedDate": "2023-03-19T05:02:52Z",
-        "Created": "2023-03-19T05:02:52Z",
-    }
     item_content_response = {
         "RootFolder": {
             "ServerRelativeUrl": "/sites/enterprise/ctest/_api",
@@ -572,29 +556,25 @@ async def test_get_docs_list_items_when_relativeurl_is_not_none():
     actual_response = []
     async with create_sps_source() as source:
         source.sharepoint_client._fetch_data_with_query = AsyncIterator([])
-        source.sharepoint_client.get_site = AsyncIterator([site_content_response])
-        source.sharepoint_client.get_lists = AsyncIterator([item_content_response])
+        source.get_lists = AsyncIterator([(item_content_response, [])])
         source.sharepoint_client.get_list_items = AsyncIterator(
-            [(list_content_response, "/sites/enterprise/ctest/_api")]
+            [
+                (
+                    list_content_response,
+                    None,
+                )
+            ]
         )
 
         async for document, _ in source.get_docs():
             actual_response.append(document)
-        assert len(actual_response) == 3
+        assert len(actual_response) == 2
 
 
 @pytest.mark.asyncio
 async def test_get_docs_drive_items():
     """Test get docs method for drive items"""
 
-    site_content_response = {
-        "Title": "ctest",
-        "Id": "f764b597-ed44-49be-8867-f8e9ca5d0a6e",
-        "Url": f"{HOST_URL}/sites/enterprise/ctest",
-        "ServerRelativeUrl": "/sites/enterprise/ctest",
-        "LastItemModifiedDate": "2023-03-19T05:02:52Z",
-        "Created": "2023-03-19T05:02:52Z",
-    }
     item_content_response = {
         "RootFolder": {
             "ServerRelativeUrl": "/sites/enterprise/ctest/_api",
@@ -625,27 +605,18 @@ async def test_get_docs_drive_items():
     actual_response = []
     async with create_sps_source() as source:
         source.sharepoint_client._fetch_data_with_query = AsyncIterator([])
-        source.sharepoint_client.get_site = AsyncIterator([site_content_response])
-        source.sharepoint_client.get_lists = AsyncIterator([item_content_response])
+        source.get_lists = AsyncIterator([(item_content_response, [])])
         source.sharepoint_client.get_drive_items = AsyncIterator(
             [(drive_content_response, None)]
         )
 
         async for document, _ in source.get_docs():
             actual_response.append(document)
-        assert len(actual_response) == 3
+        assert len(actual_response) == 2
 
 
 @pytest.mark.asyncio
 async def test_get_docs_drive_items_for_web_pages():
-    site_content_response = {
-        "Title": "ctest",
-        "Id": "f764b597-ed44-49be-8867-f8e9ca5d0a6e",
-        "Url": f"{HOST_URL}/sites/enterprise/ctest",
-        "ServerRelativeUrl": "/sites/enterprise/ctest",
-        "LastItemModifiedDate": "2023-03-19T05:02:52Z",
-        "Created": "2023-03-19T05:02:52Z",
-    }
     item_content_response = {
         "RootFolder": {
             "ServerRelativeUrl": "/sites/enterprise/ctest/_api",
@@ -676,14 +647,13 @@ async def test_get_docs_drive_items_for_web_pages():
     actual_response = []
     async with create_sps_source() as source:
         source.sharepoint_client._fetch_data_with_query = AsyncIterator([])
-        source.sharepoint_client.get_site = AsyncIterator([site_content_response])
-        source.sharepoint_client.get_lists = AsyncIterator([item_content_response])
+        source.get_lists = AsyncIterator([(item_content_response, [])])
         source.sharepoint_client.get_drive_items = AsyncIterator(
             [(drive_content_response, None)]
         )
         async for document, _ in source.get_docs():
             actual_response.append(document)
-        assert len(actual_response) == 3
+        assert len(actual_response) == 2
 
 
 @pytest.mark.asyncio
@@ -692,7 +662,6 @@ async def test_get_docs_when_no_site_available():
 
     async with create_sps_source() as source:
         actual_response = []
-        source.sharepoint_client.get_site = AsyncIterator([])
         source.sharepoint_client._fetch_data_with_query = Mock(
             return_value=AsyncIterator([])
         )
@@ -707,6 +676,7 @@ async def test_get_docs_when_no_site_available():
 @pytest.mark.asyncio
 async def test_get_content():
     """Test the get content method"""
+    async_response = MockObjectResponse()
 
     response_content = "This is a dummy sharepoint body response"
     expected_attachment = {
@@ -722,17 +692,18 @@ async def test_get_content():
         "_attachment": "VGhpcyBpcyBhIGR1bW15IHNoYXJlcG9pbnQgYm9keSByZXNwb25zZQ==",
         "_timestamp": "2022-06-20T10:37:44Z",
     }
-    async_response = MockObjectResponse()
-    async_response.aiter_bytes = AsyncIterator([bytes(response_content, "utf-8")])
-
     async with create_sps_source() as source:
         source.sharepoint_client._api_call = AsyncIterator([async_response])
-        response_content = await source.get_content(
-            document=expected_attachment,
-            file_relative_url="abc.com",
-            site_url="/site",
-            doit=True,
-        )
+        with mock.patch(
+            "aiohttp.StreamReader.iter_chunked",
+            return_value=AsyncIterator([bytes(response_content, "utf-8")]),
+        ):
+            response_content = await source.get_content(
+                document=expected_attachment,
+                file_relative_url="abc.com",
+                site_url="/site",
+                doit=True,
+            )
 
         assert response_content == expected_content
 
@@ -740,18 +711,14 @@ async def test_get_content():
 @pytest.mark.asyncio
 async def test_get_content_with_content_extraction():
     response_content = "This is a dummy sharepoint body response"
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=response_content,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=response_content,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async_response = MockObjectResponse()
-        async_response.aiter_bytes = AsyncIterator([bytes(response_content, "utf-8")])
         expected_attachment = {
             "id": 1,
             "server_relative_url": "/url",
@@ -767,12 +734,16 @@ async def test_get_content_with_content_extraction():
         }
         async with create_sps_source(use_text_extraction_service=True) as source:
             source.sharepoint_client._api_call = AsyncIterator([async_response])
-            response_content = await source.get_content(
-                document=expected_attachment,
-                file_relative_url="abc.com",
-                site_url="/site",
-                doit=True,
-            )
+            with mock.patch(
+                "aiohttp.StreamReader.iter_chunked",
+                return_value=AsyncIterator([bytes(response_content, "utf-8")]),
+            ):
+                response_content = await source.get_content(
+                    document=expected_attachment,
+                    file_relative_url="abc.com",
+                    site_url="/site",
+                    doit=True,
+                )
 
             assert response_content == expected_content
 
@@ -960,7 +931,7 @@ async def test_fetch_data_with_next_url_list_items():
 class ClientSession:
     """Mock Client Session Class"""
 
-    async def aclose(self):
+    async def close(self):
         """Close method of Mock Client Session Class"""
         pass
 
@@ -991,7 +962,7 @@ async def test_api_call_negative(patch_default_wait_multiplier):
 
     async with create_sps_source(retry_count=2) as source:
         with patch.object(
-            httpx.AsyncClient, "get", side_effect=Exception(EXCEPTION_MESSAGE)
+            aiohttp.ClientSession, "get", side_effect=Exception(EXCEPTION_MESSAGE)
         ):
             source.sharepoint_client.session = source.sharepoint_client._get_session()
             with pytest.raises(Exception):
@@ -1008,15 +979,14 @@ async def test_api_call_successfully():
         async_response = MockResponse(mocked_response, 200)
         async_response_token = MockResponse(mock_token, 200)
 
-        with (
-            patch("httpx.AsyncClient.get", return_value=async_response),
-            patch("httpx.request", return_value=async_response_token),
+        with patch("aiohttp.ClientSession.get", return_value=async_response), patch(
+            "aiohttp.request", return_value=async_response_token
         ):
             source.sharepoint_client._get_session()
             async for response in source.sharepoint_client._api_call(
-                url_name="ping", site_url="abc", host_url="sharepoint.com"
+                url_name="ping", parent_site_url="abc", host_url="sharepoint.com"
             ):
-                assert await response == [{"name": "dummy_project", "id": "test123"}]
+                assert response == [{"name": "dummy_project", "id": "test123"}]
 
 
 @pytest.fixture
@@ -1039,11 +1009,13 @@ async def test_api_call_when_status_429_exception(
         caplog.set_level("WARN")
 
         with patch.object(
-            httpx.AsyncClient,
+            aiohttp.ClientSession,
             "get",
-            side_effect=httpx.HTTPError("error"),
+            side_effect=aiohttp.ClientResponseError(
+                history="history", request_info=ClientErrorException
+            ),
         ):
-            with patch("httpx.get", return_value=async_response):
+            with patch("aiohttp.request", return_value=async_response):
                 source.sharepoint_client._get_session()
                 async for _ in source.sharepoint_client._api_call(
                     url_name="attachment", url="abc.com"
@@ -1059,11 +1031,11 @@ async def test_api_call_when_server_is_down(patch_default_wait_multiplier, caplo
         async_response = MockResponse(mock_response, 200)
         caplog.set_level("WARN")
         with patch.object(
-            httpx.AsyncClient,
+            aiohttp.ClientSession,
             "get",
-            side_effect=httpx.ConnectError("Something went wrong"),
+            side_effect=aiohttp.ServerDisconnectedError("Something went wrong"),
         ):
-            with patch("httpx.get", return_value=async_response):
+            with patch("aiohttp.request", return_value=async_response):
                 source.sharepoint_client._get_session()
                 async for _ in source.sharepoint_client._api_call(
                     url_name="attachment", url="abc.com"
@@ -1090,7 +1062,7 @@ async def test_get_site_pages_content():
         "type": "sites",
         "file_name": "dummy.pdf",
     }
-    RESPONSE_DATA = {"CanvasContent1": "This is a dummy sharepoint body response"}
+    RESPONSE_DATA = {"WikiField": "This is a dummy sharepoint body response"}
     EXPECTED_CONTENT = {
         "_id": 1,
         "_attachment": "VGhpcyBpcyBhIGR1bW15IHNoYXJlcG9pbnQgYm9keSByZXNwb25zZQ==",
@@ -1127,12 +1099,12 @@ async def test_get_site_pages_content_when_doit_is_none():
 
 
 @pytest.mark.asyncio
-async def test_get_site_pages_content_for_canvascontent1_none():
+async def test_get_site_pages_content_for_wikifiled_none():
     async with create_sps_source() as source:
         EXPECTED_ATTACHMENT = {"title": "Home.aspx", "type": "File", "size": "1000000"}
         response_content = await source.get_site_pages_content(
             document=EXPECTED_ATTACHMENT,
-            list_response={"CanvasContent1": None},
+            list_response={"WikiField": None},
             doit=True,
         )
         assert response_content is None
@@ -1197,9 +1169,8 @@ async def test_get_list_items_with_no_extension():
         expected_response = []
         async for item, _ in source.sharepoint_client.get_list_items(
             list_id="620070a1-ee50-4585-b6a7-0f6210b1a69d",
-            site_url=f"{HOST_URL}/sites/collection1/ctest",
-            server_relative_url="/sites/collection1/ctest",
-            list_relative_url="/Lists/ctestlist",
+            site_url="/sites/enterprise/ctest",
+            server_relative_url="/sites/enterprise/site1^",
             selected_field="",
         ):
             expected_response.append(item)
@@ -1265,9 +1236,8 @@ async def test_get_list_items_with_extension_only():
         expected_response = []
         async for item, _ in source.sharepoint_client.get_list_items(
             list_id="620070a1-ee50-4585-b6a7-0f6210b1a69d",
-            site_url=f"{HOST_URL}/sites/collection1/ctest",
-            server_relative_url="/sites/collection1/ctest",
-            list_relative_url="/Lists/ctestlist",
+            site_url="/sites/enterprise/ctest",
+            server_relative_url="/sites/enterprise/site1^",
             selected_field="",
         ):
             expected_response.append(item)
@@ -1349,19 +1319,6 @@ async def test_get_access_control_with_dls_disabled():
 async def test_get_docs_with_dls_enabled():
     async with create_sps_source() as source:
         source.sharepoint_client.site_collections_path = ["collection1"]
-        source.sharepoint_client.fix_relative_url = Mock(return_value="sites/site1")
-        source.sharepoint_client.get_site = AsyncIterator(
-            [
-                {
-                    "ServerRelativeUrl": None,
-                    "Title": "demo2",
-                    "Url": "/abcd",
-                    "Id": 2,
-                    "LastItemModifiedDate": "2022-06-20T10:04:03Z",
-                    "Created": "2022-06-20T10:04:03Z",
-                }
-            ]
-        )
         source.sharepoint_client.get_sites = AsyncIterator(
             [
                 {
@@ -1371,11 +1328,13 @@ async def test_get_docs_with_dls_enabled():
                     "Id": 1,
                     "LastItemModifiedDate": "2022-06-20T10:04:03Z",
                     "Created": "2022-06-20T10:04:03Z",
+                    "Author": {"LoginName": "system", "Id": 1},
                 }
             ]
         )
         source._dls_enabled = Mock(return_value=True)
 
+        source._site_access_control = AsyncMock(return_value=(["user_id:1"], []))
         source.sharepoint_client.site_role_assignments = AsyncIterator(
             [
                 {
@@ -1549,13 +1508,15 @@ async def test_get_docs_with_dls_enabled():
                         "Length": "3356",
                         "Id": 2,
                         "item_type": "Folder",
+                        "Editor": {"Name": "system", "Id": 1},
+                        "Author": {"Name": "system", "Id": 1},
                     },
                     None,
                 )
             ]
         )
         async for site_document, _ in source.get_docs():
-            assert site_document is not None
+            assert len(site_document["_allow_access_control"]) > 0
 
 
 @pytest.mark.asyncio
@@ -1630,3 +1591,62 @@ async def test_site_list_item_has_unique_role_assignments():
             site_url="/abc", site_list_name="list1", list_item_id=1
         )
         source.sharepoint_client._api_call.assert_called_once()
+
+
+@pytest.mark.asyncio
+@pytest.mark.parametrize(
+    "site_doc, expected_response",
+    [
+        (
+            {
+                "ServerRelativeUrl": None,
+                "Title": "demo",
+                "Url": "/collection1",
+                "Id": 1,
+                "LastItemModifiedDate": "2022-06-20T10:04:03Z",
+                "Created": "2022-06-20T10:04:03Z",
+                "Author": {"LoginName": "system", "Id": 1},
+            },
+            {
+                "type": "sites",
+                "_id": "af47718472cafa7b3c8446f0bacddde7",
+                "title": "demo",
+                "url": "/collection1",
+                "server_relative_url": None,
+                "_timestamp": "2022-06-20T10:04:03Z",
+                "creation_time": "2022-06-20T10:04:03Z",
+                "author": "system",
+                "author_id": 1,
+            },
+        ),
+        (
+            {
+                "ServerRelativeUrl": None,
+                "Title": "demo",
+                "Url": "/collection2",
+                "Id": 1,
+                "LastItemModifiedDate": "2022-06-20T10:04:03Z",
+                "Created": "2022-06-20T10:04:03Z",
+                "Author": {"LoginName": "system", "Id": 1},
+            },
+            {
+                "type": "sites",
+                "_id": "1437771250e098f566bace60e4d07b7a",
+                "title": "demo",
+                "url": "/collection2",
+                "server_relative_url": None,
+                "_timestamp": "2022-06-20T10:04:03Z",
+                "creation_time": "2022-06-20T10:04:03Z",
+                "author": "system",
+                "author_id": 1,
+            },
+        ),
+    ],
+)
+async def test_get_docs_having_same_site_ids(site_doc, expected_response):
+    async with create_sps_source() as source:
+        source.sharepoint_client.site_collections_path = ["collection1", "collection2"]
+        source.sharepoint_client.get_sites = AsyncIterator([site_doc])
+        source.sharepoint_client.get_lists = AsyncIterator([])
+        async for item, _ in source.get_docs():
+            assert item == expected_response
diff --git a/tests/sources/test_zoom.py b/tests/sources/test_zoom.py
index a4cf20fa..e748e40d 100644
--- a/tests/sources/test_zoom.py
+++ b/tests/sources/test_zoom.py
@@ -4,7 +4,6 @@
 # you may not use this file except in compliance with the Elastic License 2.0.
 #
 """Tests the Zoom source class methods"""
-
 from contextlib import asynccontextmanager
 from unittest import mock
 from unittest.mock import Mock, patch
@@ -774,15 +773,12 @@ async def test_get_content(attachment, doit, expected_content):
 
 @pytest.mark.asyncio
 async def test_get_content_with_extraction_service():
-    with (
-        patch(
-            "connectors.content_extraction.ContentExtraction.extract_text",
-            return_value=SAMPLE_CONTENT,
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch(
+        "connectors.content_extraction.ContentExtraction.extract_text",
+        return_value=SAMPLE_CONTENT,
+    ), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         async with create_zoom_source(use_text_extraction_service=True) as source:
             with mock.patch(
@@ -811,7 +807,7 @@ async def test_get_docs():
             return_value=get_mock(mock_response=SAMPLE_ACCESS_TOKEN_RESPONSE),
         ):
             with mock.patch("aiohttp.ClientSession.get", side_effect=mock_zoom_apis):
-                async for doc, content in source.get_docs():
+                async for (doc, content) in source.get_docs():
                     document_without_attachment.append(doc)
                     if content:
                         res = await content(doit=True)
diff --git a/tests/test_connectors_cli.py b/tests/test_connectors_cli.py
index 7f7de65b..0d31f0e2 100644
--- a/tests/test_connectors_cli.py
+++ b/tests/test_connectors_cli.py
@@ -1,8 +1,3 @@
-#
-# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
-# or more contributor license agreements. Licensed under the Elastic License 2.0;
-# you may not use this file except in compliance with the Elastic License 2.0.
-#
 import json
 import os
 from unittest.mock import AsyncMock, MagicMock, patch
diff --git a/tests/test_content_extraction.py b/tests/test_content_extraction.py
index 3e87c7e2..19d4da84 100644
--- a/tests/test_content_extraction.py
+++ b/tests/test_content_extraction.py
@@ -6,21 +6,10 @@
 from unittest.mock import mock_open, patch
 
 import pytest
-from aiohttp.client_exceptions import ClientConnectionError
 
 from connectors.content_extraction import ContentExtraction
 
 
-def test_set_and_get_configuration():
-    config = {
-        "extraction_service": {
-            "host": "http://localhost:8090",
-        }
-    }
-    ContentExtraction.set_extraction_config(config)
-    assert ContentExtraction.get_extraction_config() == config
-
-
 @pytest.mark.parametrize(
     "mock_config, expected_result",
     [
@@ -51,20 +40,15 @@ async def test_extract_text(mock_responses, patch_logger):
     url = "http://localhost:8090/extract_text/"
     payload = {"extracted_text": "I've been extracted!"}
 
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch("builtins.open", mock_open(read_data=b"data")), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         mock_responses.put(url, status=200, payload=payload)
 
         extraction_service = ContentExtraction()
         extraction_service._begin_session()
 
-        assert extraction_service.get_volume_dir() is None
-
         response = await extraction_service.extract_text(filepath, "notreal.txt")
         await extraction_service._end_session()
 
@@ -78,24 +62,19 @@ async def test_extract_text_with_file_pointer(mock_responses, patch_logger):
     url = "http://localhost:8090/extract_text/?local_file_path=/tmp/notreal.txt"
     payload = {"extracted_text": "I've been extracted from a local file!"}
 
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={
-                "host": "http://localhost:8090",
-                "use_file_pointers": True,
-                "shared_volume_dir": "/tmp",
-            },
-        ),
+    with patch("builtins.open", mock_open(read_data=b"data")), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={
+            "host": "http://localhost:8090",
+            "use_file_pointers": True,
+            "shared_volume_dir": "/tmp",
+        },
     ):
         mock_responses.put(url, status=200, payload=payload)
 
         extraction_service = ContentExtraction()
         extraction_service._begin_session()
 
-        assert extraction_service.get_volume_dir() == "/tmp"
-
         response = await extraction_service.extract_text(filepath, "notreal.txt")
         await extraction_service._end_session()
 
@@ -103,34 +82,6 @@ async def test_extract_text_with_file_pointer(mock_responses, patch_logger):
         patch_logger.assert_present("Text extraction is successful for 'notreal.txt'.")
 
 
-@pytest.mark.asyncio
-async def test_extract_text_when_host_is_none(mock_responses, patch_logger):
-    filepath = "/tmp/notreal.txt"
-
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={
-                "host": None,
-                "use_file_pointers": True,
-                "shared_volume_dir": "/tmp",
-            },
-        ),
-    ):
-        extraction_service = ContentExtraction()
-
-        assert extraction_service.get_volume_dir() is None
-
-        response = await extraction_service.extract_text(filepath, "notreal.txt")
-        await extraction_service._end_session()
-
-        assert response == ""
-        patch_logger.assert_present(
-            "Extraction service has been initialised but no extraction service configuration was found. No text will be extracted for this sync."
-        )
-
-
 @pytest.mark.asyncio
 async def test_extract_text_when_response_isnt_200_logs_warning(
     mock_responses, patch_logger
@@ -138,12 +89,9 @@ async def test_extract_text_when_response_isnt_200_logs_warning(
     filepath = "tmp/notreal.txt"
     url = "http://localhost:8090/extract_text/"
 
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch("builtins.open", mock_open(read_data=b"data")), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         mock_responses.put(
             url,
@@ -166,33 +114,6 @@ async def test_extract_text_when_response_isnt_200_logs_warning(
         )
 
 
-@pytest.mark.asyncio
-async def test_extract_text_when_response_is_error(mock_responses, patch_logger):
-    filepath = "tmp/notreal.txt"
-
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
-        patch(
-            "connectors.content_extraction.ContentExtraction.send_file",
-            side_effect=ClientConnectionError("oops!"),
-        ),
-    ):
-        extraction_service = ContentExtraction()
-        extraction_service._begin_session()
-
-        response = await extraction_service.extract_text(filepath, "notreal.txt")
-        await extraction_service._end_session()
-        assert response == ""
-
-        patch_logger.assert_present(
-            "Connection to http://localhost:8090 failed while extracting data from notreal.txt. Error: oops!"
-        )
-
-
 @pytest.mark.asyncio
 async def test_extract_text_when_response_is_200_with_error_logs_warning(
     mock_responses, patch_logger
@@ -200,12 +121,9 @@ async def test_extract_text_when_response_is_200_with_error_logs_warning(
     filepath = "tmp/notreal.txt"
     url = "http://localhost:8090/extract_text/"
 
-    with (
-        patch("builtins.open", mock_open(read_data=b"data")),
-        patch(
-            "connectors.content_extraction.ContentExtraction.get_extraction_config",
-            return_value={"host": "http://localhost:8090"},
-        ),
+    with patch("builtins.open", mock_open(read_data=b"data")), patch(
+        "connectors.content_extraction.ContentExtraction.get_extraction_config",
+        return_value={"host": "http://localhost:8090"},
     ):
         mock_responses.put(
             url,
diff --git a/tests/test_logger.py b/tests/test_logger.py
index a507cc62..904b60b9 100644
--- a/tests/test_logger.py
+++ b/tests/test_logger.py
@@ -10,7 +10,6 @@ import time
 from contextlib import contextmanager
 
 import pytest
-from freezegun import freeze_time
 
 import connectors.logger
 from connectors.logger import ColorFormatter, logger, set_logger, tracer
@@ -175,24 +174,6 @@ def test_colored_logging(log_level, color):
         assert logs[0].startswith(color)
 
 
-# first param is UTC time, second param is offset we run with
-@freeze_time("2024-07-10 12:00:00", tz_offset=-7)
-def test_timestamp_is_utc():
-    with unset_logger():
-        logger = set_logger(logging.DEBUG, filebeat=False)
-        logs = []
-
-        def _w(msg):
-            logs.append(msg)
-
-        logger.handlers[0].stream.write = _w
-        logger.debug("test")
-        assert len(logs) == 1
-        assert (
-            "[12:00:00]" in logs[0]
-        )  # if the local time was respected, this would be 05:00:00
-
-
 def test_colored_logging_with_filebeat():
     with unset_logger():
         logger = set_logger(logging.DEBUG, filebeat=True)
diff --git a/tests/test_service_cli.py b/tests/test_service_cli.py
index a6f529b6..19ee2484 100644
--- a/tests/test_service_cli.py
+++ b/tests/test_service_cli.py
@@ -7,14 +7,14 @@ import asyncio
 import logging
 import os
 import signal
-from unittest.mock import ANY, AsyncMock, Mock, call, patch
+from unittest.mock import AsyncMock, patch
 
 import pytest
 from click import ClickException, UsageError
 from click.testing import CliRunner
 
 from connectors import __version__
-from connectors.service_cli import _start_service, get_event_loop, main
+from connectors.service_cli import main
 
 SUCCESS_EXIT_CODE = 0
 CLICK_EXCEPTION_EXIT_CODE = ClickException.exit_code
@@ -45,7 +45,6 @@ def test_main_exits_on_sigterm(mock_responses):
     loop.create_task(kill())
 
     CliRunner().invoke(main, [])
-    loop.close()
 
 
 @pytest.mark.parametrize("option", ["-v", "--version"])
@@ -57,21 +56,25 @@ def test_version_action(option):
     assert __version__ in result.output
 
 
-@pytest.mark.asyncio
+@pytest.mark.parametrize("sig", [signal.SIGINT, signal.SIGTERM])
 @patch("connectors.service_cli.PreflightCheck")
-@patch("connectors.service_cli.get_services")
-async def test_shutdown_signal_registered(
-    patch_get_services, patch_preflight_check, set_env
+def test_shutdown_called_on_shutdown_signal(
+    patch_preflight_check, sig, patch_logger, mock_responses, set_env
 ):
-    patch_multi_service = Mock()
-    patch_get_services.return_value = patch_multi_service
-    patch_multi_service.run = AsyncMock()
     patch_preflight_check.return_value.run = AsyncMock(return_value=(True, False))
-    loop = Mock()
-    await _start_service([], {"elasticsearch": {}}, loop)
-    assert loop.add_signal_handler.has_calls(
-        [call(signal.SIGINT, ANY), call(signal.SIGTERM, ANY)]
-    )
+
+    async def emit_shutdown_signal():
+        await asyncio.sleep(0.2)
+        os.kill(os.getpid(), sig)
+
+    loop = asyncio.new_event_loop()
+    asyncio.set_event_loop(loop)
+    loop.create_task(emit_shutdown_signal())
+
+    CliRunner().invoke(main, [])
+
+    patch_logger.assert_present(f"Caught {sig.name}. Graceful shutdown.")
+    patch_logger.assert_present(f"Caught {sig.name}. Cancelling sleeps...")
 
 
 def test_list_action(set_env):
@@ -207,22 +210,3 @@ def test_unknown_service_type(set_env):
         f"Could not find a connector for service type {unknown_service_type}"
         in result.output
     )
-
-
-@patch("connectors.service_cli._get_uvloop")
-@patch("connectors.service_cli.asyncio")
-def test_uvloop_success(patched_asyncio, patched_uvloop):
-    get_event_loop(True)
-    assert patched_asyncio.set_event_loop_policy.called_once_with(
-        patched_uvloop.EventLoopPolicy()
-    )
-
-
-@patch("connectors.service_cli._get_uvloop", side_effect=Exception("import fails"))
-@patch("connectors.service_cli.asyncio")
-@patch("connectors.service_cli.logger")
-def test_uvloop_error(patched_logger, patched_asyncio, patched_uvloop):
-    get_event_loop(True)
-    patched_logger.warning.assert_any_call(
-        "Unable to enable uvloop: import fails. Running with default event loop"
-    )
diff --git a/tests/test_sink.py b/tests/test_sink.py
index cac3ea6b..e86f7e9b 100644
--- a/tests/test_sink.py
+++ b/tests/test_sink.py
@@ -337,14 +337,10 @@ async def test_async_bulk(mock_responses):
                 return
             return {"TEXT": "DATA", "_timestamp": timestamp, "_id": "1"}
 
-        yield (
-            {
-                "_id": "1",
-                "_timestamp": datetime.datetime.now().isoformat(),
-            },
-            _dl,
-            "index",
-        )
+        yield {
+            "_id": "1",
+            "_timestamp": datetime.datetime.now().isoformat(),
+        }, _dl, "index"
         yield {"_id": "3"}, _dl_none, "index"
 
     await es.async_bulk("search-some-index", get_docs(), pipeline, JobType.FULL)
diff --git a/tests/test_utils.py b/tests/test_utils.py
index 63b29e7f..c87a92f6 100644
--- a/tests/test_utils.py
+++ b/tests/test_utils.py
@@ -743,7 +743,7 @@ def test_convert_to_b64_newer_macos(system, mac_ver, cmd_template, patch_file_op
         patch("platform.mac_ver", return_value=[mac_ver]),
         patch("subprocess.check_call") as subprocess_mock,
     ):
-        with temp_file("system") as (source, _):
+        with temp_file("system") as (source, content):
             target = f"{source}.b64"
 
             convert_to_b64(source, target, overwrite=False)
