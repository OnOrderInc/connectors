[project]
name = "elasticsearch-connectors"
dynamic = ["version"]
description = "Elasticsearch Connectors"
readme = "README.md"
authors = [
    { name = "Search Extract and Transform Team", email = "enterprise-search-ingestion-team@elastic.co" }
]

classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3 :: Only",
]

requires-python = ">=3.10,<3.12"
dependencies = [
        "aiohttp>3",
        "aiofiles>23",
        "aiomysql>0.1",
        "httpx>=0.27",
        "httpx-ntlm>=1",
        "elasticsearch[async]>=8.15",
        "elastic-transport>=8.15",
        "pyyaml>=6",
        "cffi>=1",
        "envyaml>=1",
        "ecs-logging>=2",
        "pympler>=1",
        "cron-schedule-triggers>=0.0.11",
        "tzcron>=1.0.0",
        "pytz>=2019",
        "python-dateutil>=2",
        "aiogoogle>=5",
        "uvloop>=0.18; sys_platform != 'win32'",
        "fastjsonschema>=2",
        "base64io>=1",
        "azure-storage-blob>=12",
        "SQLAlchemy>=2",
        "oracledb>=2",
        "asyncpg>=0.29",
        "python-tds>=1",
        "sqlalchemy-pytds>=0.3",
        "pyOpenSSL>=24",
        "dropbox>=11",
        "beautifulsoup4",
        "gidgethub>=5",
        "wcmatch==8",
        "msa>=1",
        "exchangelib>=5",
        "ldap3>=2",
        "lxml>=4",
        "pywinrm>=0.4",
        "click>=8",
        "colorama>=0.4",
        "tabulate>=0.9",
        "redis>=5",
        "simple-term-menu>=1",
        "graphql-core>=3",
        "notion-client>=2",
        "certifi>=2024",
        "aioboto3>=12",
        "smbprotocol>=1.9",
        "motor>=3",
        "pymongo>=4"
]

[project.scripts]
elastic-ingest = "connectors.service_cli:main"
fake-kibana = "connectors.kibana:main"
connectors = "connectors.connectors_cli:main"
test-connectors = "scripts.testing.cli:main"

[build-system]
requires = [
  "hatchling",
  "hatch-zipped-directory",
]
build-backend = "hatchling.build"

[tool.hatch.metadata.hooks.custom]


[tool.hatch.build]
dev-mode-dirs = ["."]
directory="dist"

[tool.setuptools.dynamic]
version = {file = "connectors/VERSION"}

[tool.hatch.build.targets.sdist]
include = [
  "connectors",
  "scripts"
]

[tool.hatch.build.targets.wheel]
packages = ["connectors", "scripts"]

[tool.hatch.build.targets.zipped-directory]
install-name = "connectors"
sources = [
    "connectors",
]
